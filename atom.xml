<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Victory&#39;s Blog</title>
  
  <subtitle>非淡泊无以明志，非宁静无以致远</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-01-12T06:12:58.142Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>victory-liao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaWeb项目开发 | el表达式</title>
    <link href="http://example.com/2022/01/11/el%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://example.com/2022/01/11/el%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2022-01-12T06:05:06.000Z</published>
    <updated>2022-01-12T06:12:58.142Z</updated>
    
    <content type="html"><![CDATA[<h1 id="el表达式"><a href="#el表达式" class="headerlink" title="el表达式"></a>el表达式</h1><ol><li>el表达式<br><img src="/2022/01/11/el%E8%A1%A8%E8%BE%BE%E5%BC%8F/1.PNG"></li><li>测试el表达式</li></ol><pre><code>&lt;%@page import=&quot;com.oracle.bean.Product&quot;%&gt;&lt;%@page import=&quot;java.util.HashMap&quot;%&gt;&lt;%@page import=&quot;java.util.ArrayList&quot;%&gt;&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;    pageEncoding=&quot;UTF-8&quot;%&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;title&gt;Insert title here&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;%        //在request域中设置简单数据        request.setAttribute(&quot;a&quot;, 1);        request.setAttribute(&quot;b&quot;, 1);                //在request域中设置复杂数据(ArrayList)        ArrayList&lt;String&gt; arr = new ArrayList&lt;String&gt;();        arr.add(&quot;zhangsan&quot;);        arr.add(&quot;lisi&quot;);        arr.add(&quot;wangwu&quot;);        request.setAttribute(&quot;list&quot;, arr);                //在request域中设置复杂数据(HashMap)        HashMap&lt;String, String&gt; map = new HashMap&lt;String, String&gt;();        map.put(&quot;a&quot;, &quot;A&quot;);        map.put(&quot;b&quot;, &quot;B&quot;);        map.put(&quot;c&quot;, &quot;C&quot;);        request.setAttribute(&quot;map&quot;, map);                //在request域中设置复杂数据(JavaBean)        Product p = new Product();        p.setId(1);        p.setPname(&quot;黄瓜&quot;);        p.setPrice(15.2);        p.setPdesc(&quot;黄瓜好吃，香&quot;);        request.setAttribute(&quot;p&quot;, p);    %&gt;        &lt;%=request.getAttribute(&quot;a&quot;) %&gt;        $&#123;a+b&#125;&lt;br&gt;        $&#123;list[0]&#125;&lt;br&gt;        $&#123;map.a&#125;&lt;br&gt;        $&#123;p.pname&#125;&lt;br&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><ol start="3"><li>效果<br><img src="/2022/01/11/el%E8%A1%A8%E8%BE%BE%E5%BC%8F/2.PNG"></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;el表达式&quot;&gt;&lt;a href=&quot;#el表达式&quot; class=&quot;headerlink&quot; title=&quot;el表达式&quot;&gt;&lt;/a&gt;el表达式&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;el表达式&lt;br&gt;&lt;img src=&quot;/2022/01/11/el%E8%A1%A8%E8%BE%BE%</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="JavaWeb项目开发" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/"/>
    
    <category term="el表达式" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/el%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="el表达式" scheme="http://example.com/tags/el%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb项目开发 | 使用jsp查询所有商品案例实现</title>
    <link href="http://example.com/2022/01/11/%E4%BD%BF%E7%94%A8jsp%E6%9F%A5%E8%AF%A2%E6%89%80%E6%9C%89%E5%95%86%E5%93%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E7%8E%B0/"/>
    <id>http://example.com/2022/01/11/%E4%BD%BF%E7%94%A8jsp%E6%9F%A5%E8%AF%A2%E6%89%80%E6%9C%89%E5%95%86%E5%93%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E7%8E%B0/</id>
    <published>2022-01-12T04:10:58.000Z</published>
    <updated>2022-01-12T04:25:17.426Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用jsp查询所有商品案例实现"><a href="#使用jsp查询所有商品案例实现" class="headerlink" title="使用jsp查询所有商品案例实现"></a>使用jsp查询所有商品案例实现</h1><ol><li>创建表product<br><img src="/2022/01/11/%E4%BD%BF%E7%94%A8jsp%E6%9F%A5%E8%AF%A2%E6%89%80%E6%9C%89%E5%95%86%E5%93%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E7%8E%B0/1.PNG"></li><li>项目目录(按下图导入jar包、c3p0-config.xml)<br><img src="/2022/01/11/%E4%BD%BF%E7%94%A8jsp%E6%9F%A5%E8%AF%A2%E6%89%80%E6%9C%89%E5%95%86%E5%93%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E7%8E%B0/2.PNG"></li><li>创建jsp页面<span id="more"></span></li></ol><pre><code>&lt;%@page import=&quot;com.oracle.bean.Product&quot;%&gt;&lt;%@page import=&quot;java.util.ArrayList&quot;%&gt;&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;    pageEncoding=&quot;UTF-8&quot;%&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;title&gt;Insert title here&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;a href=&quot;/jsptest/product&quot;&gt;点击查看商品&lt;/a&gt;        &lt;hr&gt;        &lt;%        ArrayList&lt;Product&gt; arr = (ArrayList&lt;Product&gt;)request.getAttribute(&quot;list&quot;);    %&gt;        &lt;table border=&quot;1px&quot; width=&quot;60%&quot; height=&quot;200px&quot; align=&quot;center&quot;&gt;        &lt;tr&gt;            &lt;th&gt;商品的id&lt;/th&gt;            &lt;th&gt;商品的名称&lt;/th&gt;            &lt;th&gt;商品的价格&lt;/th&gt;            &lt;th&gt;商品的描述&lt;/th&gt;        &lt;/tr&gt;        &lt;%        if(arr!=null)&#123;            for(Product p: arr)&#123;            %&gt;            &lt;tr&gt;                &lt;td&gt;&lt;%=p.getId() %&gt;&lt;/td&gt;                &lt;td&gt;&lt;%=p.getPname() %&gt;&lt;/td&gt;                &lt;td&gt;&lt;%=p.getPrice() %&gt;&lt;/td&gt;                &lt;td&gt;&lt;%=p.getPdesc() %&gt;&lt;/td&gt;            &lt;/tr&gt;            &lt;%             &#125;        &#125;        %&gt;    &lt;/table&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><ol start="4"><li>创建product bean Product.java</li></ol><pre><code>package com.oracle.bean;public class Product &#123;    private int id;    private String pname;    private double price;    private String pdesc;    public Product(int id, String pname, double price, String pdesc) &#123;        super();        this.id = id;        this.pname = pname;        this.price = price;        this.pdesc = pdesc;    &#125;    public Product() &#123;        super();        // TODO Auto-generated constructor stub    &#125;    public int getId() &#123;        return id;    &#125;    public void setId(int id) &#123;        this.id = id;    &#125;    public String getPname() &#123;        return pname;    &#125;    public void setPname(String pname) &#123;        this.pname = pname;    &#125;    public double getPrice() &#123;        return price;    &#125;    public void setPrice(double price) &#123;        this.price = price;    &#125;    public String getPdesc() &#123;        return pdesc;    &#125;    public void setPdesc(String pdesc) &#123;        this.pdesc = pdesc;    &#125;&#125;</code></pre><ol start="5"><li>创建ProductServlet</li></ol><pre><code>package com.oracle;import java.util.List;import java.io.IOException;import javax.servlet.ServletException;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.apache.commons.dbutils.QueryRunner;import org.apache.commons.dbutils.handlers.BeanListHandler;import com.oracle.bean.Product;import com.oracle.utils.DataSourceUtils;public class ProductServlet extends HttpServlet &#123;    private static final long serialVersionUID = 1L;    public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;        try &#123;            //查询数据库当中的所有数据            QueryRunner qr = new QueryRunner(DataSourceUtils.getDataSource());                        String sql = &quot;select * from product&quot;;                        List&lt;Product&gt; list = qr.query(sql, new BeanListHandler&lt;&gt;(Product.class));                        //把list放入域对象中            request.setAttribute(&quot;list&quot;, list);                        //请求转发到aa.jsp中            request.getRequestDispatcher(&quot;/aa.jsp&quot;).forward(request, response);                    &#125; catch (Exception e) &#123;            // TODO Auto-generated catch block            e.printStackTrace();        &#125;    &#125;    public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;        doGet(request, response);    &#125;&#125;</code></pre><ol start="6"><li>效果<br>访问aa.jsp页面：<br><img src="/2022/01/11/%E4%BD%BF%E7%94%A8jsp%E6%9F%A5%E8%AF%A2%E6%89%80%E6%9C%89%E5%95%86%E5%93%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E7%8E%B0/3.PNG"><br>点击超链接查询商品：<br><img src="/2022/01/11/%E4%BD%BF%E7%94%A8jsp%E6%9F%A5%E8%AF%A2%E6%89%80%E6%9C%89%E5%95%86%E5%93%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E7%8E%B0/4.PNG"></li></ol><p>注：项目编码问题的解决参考本博客的<a href="https://victory-liao.github.io/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/filter/filter%E8%A7%A3%E5%86%B3%E9%A1%B9%E7%9B%AE%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/">使用filter解决项目编码问题一文</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;使用jsp查询所有商品案例实现&quot;&gt;&lt;a href=&quot;#使用jsp查询所有商品案例实现&quot; class=&quot;headerlink&quot; title=&quot;使用jsp查询所有商品案例实现&quot;&gt;&lt;/a&gt;使用jsp查询所有商品案例实现&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;创建表product&lt;br&gt;&lt;img src=&quot;/2022/01/11/%E4%BD%BF%E7%94%A8jsp%E6%9F%A5%E8%AF%A2%E6%89%80%E6%9C%89%E5%95%86%E5%93%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E7%8E%B0/1.PNG&quot;&gt;&lt;/li&gt;
&lt;li&gt;项目目录(按下图导入jar包、c3p0-config.xml)&lt;br&gt;&lt;img src=&quot;/2022/01/11/%E4%BD%BF%E7%94%A8jsp%E6%9F%A5%E8%AF%A2%E6%89%80%E6%9C%89%E5%95%86%E5%93%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E7%8E%B0/2.PNG&quot;&gt;&lt;/li&gt;
&lt;li&gt;创建jsp页面&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="JavaWeb项目开发" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/"/>
    
    <category term="jsp" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/jsp/"/>
    
    <category term="使用jsp查询所有商品案例实现" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/jsp/%E4%BD%BF%E7%94%A8jsp%E6%9F%A5%E8%AF%A2%E6%89%80%E6%9C%89%E5%95%86%E5%93%81%E6%A1%88%E4%BE%8B%E5%AE%9E%E7%8E%B0/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="jsp" scheme="http://example.com/tags/jsp/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb项目开发 | jsp</title>
    <link href="http://example.com/2022/01/11/jsp/"/>
    <id>http://example.com/2022/01/11/jsp/</id>
    <published>2022-01-11T13:03:29.000Z</published>
    <updated>2022-01-11T13:26:22.167Z</updated>
    
    <content type="html"><![CDATA[<h1 id="jsp"><a href="#jsp" class="headerlink" title="jsp"></a>jsp</h1><ol><li>什么是jsp?<br>java server pages(java服务器页面)，本质上就是一个servlet,运行在服务器端.</li><li>作用<br>可以在jsp嵌入java代码，动态展示数据</li><li>jsp的特定内容</li><li>1 jsp的脚本<br>&lt;%…%&gt;:写java程序片段<br>&lt;%=…%&gt;:输出表达式（输出表达式不能以分号结尾）</li><li>2 jsp的指令<br>包含在.jsp文件的头部，声明当前页面的一些属性和行为</li></ol><pre><code>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;        pageEncoding=&quot;UTF-8&quot;%&gt;</code></pre><p>3.3 jsp中的域对象<br>request:当前请求<br>session:当前会话<br>3.4 jsp的动作标签<br>语法：&lt;jsp:动作标签 属性=”值”&gt;<br>例如： 将其他页面包含到当前页面 </p><pre><code>&lt;jsp:include page=&quot;/..&quot;&gt;&lt;/jsp:inclue&gt;</code></pre><span id="more"></span><p>3.5 jsp测试</p><pre><code>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;    pageEncoding=&quot;UTF-8&quot;%&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;title&gt;Insert title here&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;!--定义两个变量--&gt;    &lt;%        int a = 1;        int b = 2;    %&gt;    &lt;!--输出a+b的值--&gt;    &lt;%=a+b %&gt;    &lt;!--写if表达式--&gt;    &lt;%        if(a&gt;b)&#123;        %&gt;        &lt;font color=&quot;red&quot;&gt;a is 大于 b&lt;/font&gt;        &lt;%        &#125;else&#123;            %&gt;            &lt;font color=&quot;red&quot;&gt;a 小于 b&lt;/font&gt;        &lt;%        &#125;    %&gt;    &lt;!--写for语句--&gt;    &lt;%        for(int i=1;i&lt;11;i++)&#123;            %&gt;            &lt;%=i %&gt;            &lt;%         &#125;    %&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><img src="/2022/01/11/jsp/1.PNG"><br>3.5 jsp中的域对象测试</p><pre><code>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;    pageEncoding=&quot;UTF-8&quot;%&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;title&gt;Insert title here&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;%        request.setAttribute(&quot;username&quot;, &quot;zhangsan&quot;);    %&gt;    &lt;%=request.getAttribute(&quot;username&quot;) %&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><img src="/2022/01/11/jsp/2.PNG"><br>3.6 jsp动作标签测试<br>以下代码可以是开发中引入前端页面的共同部分<br><strong>a.jsp</strong></p><pre><code>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;    pageEncoding=&quot;UTF-8&quot;%&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;title&gt;Insert title here&lt;/title&gt;&lt;/head&gt;&lt;body&gt;11111111111111111&lt;/body&gt;&lt;/html&gt;</code></pre><p><strong>b.jsp</strong></p><pre><code>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;    pageEncoding=&quot;UTF-8&quot;%&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;title&gt;Insert title here&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;jsp:include page=&quot;/a.jsp&quot;&gt;&lt;/jsp:include&gt;    &lt;/br&gt;    22222222222222222    33333333333333333    &lt;/br&gt;    &lt;jsp:include page=&quot;/c.jsp&quot;&gt;&lt;/jsp:include&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><strong>c.jsp</strong></p><pre><code>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;    pageEncoding=&quot;UTF-8&quot;%&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;title&gt;Insert title here&lt;/title&gt;&lt;/head&gt;&lt;body&gt;33333333333333333&lt;/body&gt;&lt;/html&gt;</code></pre><p>效果：</p><pre><code>111111111111111112222222222222222233333333333333333</code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;jsp&quot;&gt;&lt;a href=&quot;#jsp&quot; class=&quot;headerlink&quot; title=&quot;jsp&quot;&gt;&lt;/a&gt;jsp&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;什么是jsp?&lt;br&gt;java server pages(java服务器页面)，本质上就是一个servlet,运行在服务器端.&lt;/li&gt;
&lt;li&gt;作用&lt;br&gt;可以在jsp嵌入java代码，动态展示数据&lt;/li&gt;
&lt;li&gt;jsp的特定内容&lt;/li&gt;
&lt;li&gt;1 jsp的脚本&lt;br&gt;&amp;lt;%…%&amp;gt;:写java程序片段&lt;br&gt;&amp;lt;%=…%&amp;gt;:输出表达式（输出表达式不能以分号结尾）&lt;/li&gt;
&lt;li&gt;2 jsp的指令&lt;br&gt;包含在.jsp文件的头部，声明当前页面的一些属性和行为&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;%@ page language=&amp;quot;java&amp;quot; contentType=&amp;quot;text/html; charset=UTF-8&amp;quot;
        pageEncoding=&amp;quot;UTF-8&amp;quot;%&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3.3 jsp中的域对象&lt;br&gt;request:当前请求&lt;br&gt;session:当前会话&lt;br&gt;3.4 jsp的动作标签&lt;br&gt;语法：&amp;lt;jsp:动作标签 属性=”值”&amp;gt;&lt;br&gt;例如： 将其他页面包含到当前页面 &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;jsp:include page=&amp;quot;/..&amp;quot;&amp;gt;&amp;lt;/jsp:inclue&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="JavaWeb项目开发" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/"/>
    
    <category term="jsp" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/jsp/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="jsp" scheme="http://example.com/tags/jsp/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb项目开发 | 使用filter解决项目编码问题</title>
    <link href="http://example.com/2022/01/11/%E4%BD%BF%E7%94%A8filter%E8%A7%A3%E5%86%B3%E9%A1%B9%E7%9B%AE%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2022/01/11/%E4%BD%BF%E7%94%A8filter%E8%A7%A3%E5%86%B3%E9%A1%B9%E7%9B%AE%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/</id>
    <published>2022-01-11T11:31:44.000Z</published>
    <updated>2022-01-11T11:57:04.579Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用filter解决项目编码问题"><a href="#使用filter解决项目编码问题" class="headerlink" title="使用filter解决项目编码问题"></a>使用filter解决项目编码问题</h1><p>在开发JavaWeb项目时，前端的编码使用的时utf-8编码方式，服务器端使用的是ISO-8859-1编码方式，故在开发中会出现乱码。</p><h2 id="解决方案（使用filter）"><a href="#解决方案（使用filter）" class="headerlink" title="解决方案（使用filter）"></a>解决方案（使用filter）</h2><p>实现EncodingFilter来解决项目乱码问题</p><p><strong>乱码情形举例：</strong></p><ol><li>写一个b.html文件</li></ol><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;title&gt;Insert title here&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;a href=&quot;/filtertest/demox?username=张三&quot;&gt;向服务器发送请求&lt;/a&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><ol start="2"><li>再写一个servlet处理请求</li></ol><pre><code>package com.oracle.servlet;import java.io.IOException;import javax.servlet.ServletException;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;public class DemoxServlet extends HttpServlet &#123;    private static final long serialVersionUID = 1L;    public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;        String username = request.getParameter(&quot;username&quot;);        System.out.println(username);                response.getWriter().println(&quot;王五&quot;);    &#125;    public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;        doGet(request, response);    &#125;&#125;</code></pre><ol start="3"><li>servlet写到浏览器的内容和servlet从浏览器接收到的请求数据会出现乱码<br><img src="/2022/01/11/%E4%BD%BF%E7%94%A8filter%E8%A7%A3%E5%86%B3%E9%A1%B9%E7%9B%AE%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/1.PNG"><br><img src="/2022/01/11/%E4%BD%BF%E7%94%A8filter%E8%A7%A3%E5%86%B3%E9%A1%B9%E7%9B%AE%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/2.PNG"></li></ol><p><strong>EncodingFilter:</strong></p><pre><code>package com.oracle.filter;import java.io.IOException;import java.io.UnsupportedEncodingException;import java.util.Map;import javax.servlet.Filter;import javax.servlet.FilterChain;import javax.servlet.FilterConfig;import javax.servlet.ServletException;import javax.servlet.ServletRequest;import javax.servlet.ServletResponse;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletRequestWrapper;import javax.servlet.http.HttpServletResponse;/** * 统一编码 * @author Administrator * */public class EncodingFilter implements Filter &#123;    @Override    public void init(FilterConfig filterConfig) throws ServletException &#123;        // TODO Auto-generated method stub    &#125;    @Override    public void doFilter(ServletRequest req, ServletResponse resp, FilterChain chain) throws IOException, ServletException &#123;        //1.强转        HttpServletRequest request=(HttpServletRequest) req;        HttpServletResponse response=(HttpServletResponse) resp;        response.setContentType(&quot;text/html;charset=utf-8&quot;);        //2.放行        chain.doFilter(new MyRequest(request), response);    &#125;    @Override    public void destroy() &#123;        // TODO Auto-generated method stub    &#125;&#125;class MyRequest extends HttpServletRequestWrapper&#123;    private HttpServletRequest request;    private boolean flag=true;            public MyRequest(HttpServletRequest request) &#123;        super(request);        this.request=request;    &#125;        @Override    public String getParameter(String name) &#123;          if(name==null || name.trim().length()==0)&#123;            return null;        &#125;        String[] values = getParameterValues(name);        if(values==null || values.length==0)&#123;            return null;        &#125;                return values[0];    &#125;        @Override    /**     * hobby=[eat,drink]     */    public String[] getParameterValues(String name) &#123;        if(name==null || name.trim().length()==0)&#123;            return null;        &#125;        Map&lt;String, String[]&gt; map = getParameterMap();        if(map==null || map.size()==0)&#123;            return null;        &#125;                return map.get(name);    &#125;        @Override    /**     * map&#123; username=[tom],password=[123],hobby=[eat,drink]&#125;     */    public Map&lt;String,String[]&gt; getParameterMap() &#123;                  /**         * 首先判断请求方式         * 若为post  request.setchar...(utf-8)         * 若为get 将map中的值遍历编码就可以了         */        String method = request.getMethod();        if(&quot;post&quot;.equalsIgnoreCase(method))&#123;            try &#123;                request.setCharacterEncoding(&quot;utf-8&quot;);                return request.getParameterMap();            &#125; catch (UnsupportedEncodingException e) &#123;                // TODO Auto-generated catch block                e.printStackTrace();            &#125;        &#125;else if(&quot;get&quot;.equalsIgnoreCase(method))&#123;            Map&lt;String,String[]&gt; map = request.getParameterMap();            if(flag)&#123;                for (String key:map.keySet()) &#123;                    String[] arr = map.get(key);                    //继续遍历数组                    for(int i=0;i&lt;arr.length;i++)&#123;                        //编码                        try &#123;                            arr[i]=new String(arr[i].getBytes(&quot;iso8859-1&quot;),&quot;utf-8&quot;);                        &#125; catch (UnsupportedEncodingException e) &#123;                            e.printStackTrace();                        &#125;                    &#125;                &#125;                flag=false;            &#125;            //需要遍历map 修改value的每一个数据的编码                        return map;        &#125;                return super.getParameterMap();    &#125;    &#125;</code></pre><p><strong>配置web.xml文件:</strong></p><pre><code>&lt;!-- 配置项目编码 --&gt;  &lt;filter&gt;    &lt;filter-name&gt;EncodingFilter&lt;/filter-name&gt;    &lt;filter-class&gt;com.oracle.filter.EncodingFilter&lt;/filter-class&gt;  &lt;/filter&gt;  &lt;filter-mapping&gt;    &lt;filter-name&gt;EncodingFilter&lt;/filter-name&gt;    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;  &lt;/filter-mapping&gt;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;使用filter解决项目编码问题&quot;&gt;&lt;a href=&quot;#使用filter解决项目编码问题&quot; class=&quot;headerlink&quot; title=&quot;使用filter解决项目编码问题&quot;&gt;&lt;/a&gt;使用filter解决项目编码问题&lt;/h1&gt;&lt;p&gt;在开发JavaWeb项目时，</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="JavaWeb项目开发" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/"/>
    
    <category term="filter" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/filter/"/>
    
    <category term="filter解决项目编码问题" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/filter/filter%E8%A7%A3%E5%86%B3%E9%A1%B9%E7%9B%AE%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="filter" scheme="http://example.com/tags/filter/"/>
    
    <category term="解决项目编码问题" scheme="http://example.com/tags/%E8%A7%A3%E5%86%B3%E9%A1%B9%E7%9B%AE%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb项目开发 | filter</title>
    <link href="http://example.com/2022/01/11/filter/"/>
    <id>http://example.com/2022/01/11/filter/</id>
    <published>2022-01-11T10:20:47.000Z</published>
    <updated>2022-01-11T11:09:04.930Z</updated>
    
    <content type="html"><![CDATA[<h1 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h1><h2 id="filter-1"><a href="#filter-1" class="headerlink" title="filter"></a>filter</h2><ol><li>filter是什么？<br>servlet2.3后增加的新功能,运行在服务器端的程序，先于与之相关的servlet或者jsp页面之前运行</li><li>作用<br>过滤请求和相应</li><li>应用场景<br>(1)自动登录<br>(2)统一编码<br>(3)过滤特殊符号或敏感词<h2 id="filter程序编写"><a href="#filter程序编写" class="headerlink" title="filter程序编写"></a>filter程序编写</h2></li><li>编写一个类</li><li>1 实现一个Filter接口</li><li>2 重写接口所有的方法</li><li>编写配置文件</li><li>1 注册filter</li><li>2 绑定路径</li><li>2.1 完全匹配 例如：/demo1</li><li>2.2 目录匹配 例如: /* 过滤所有请求<h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2></li><li>项目目录<br><img src="/2022/01/11/filter/1.PNG"></li><li>代码</li></ol><p><strong>Demo1Filter</strong></p><pre><code>package com.oracle.filter;import java.io.IOException;import javax.servlet.Filter;import javax.servlet.FilterChain;import javax.servlet.FilterConfig;import javax.servlet.ServletException;import javax.servlet.ServletRequest;import javax.servlet.ServletResponse;public class Demo1Filter implements Filter&#123;    @Override    public void destroy() &#123;        // TODO Auto-generated method stub            &#125;    @Override    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)            throws IOException, ServletException &#123;        // TODO Auto-generated method stub        System.out.println(&quot;Demo1Filter过滤到请求.../demo1&quot;);                //放行        chain.doFilter(request, response);    &#125;    @Override    public void init(FilterConfig arg0) throws ServletException &#123;        // TODO Auto-generated method stub            &#125;&#125;</code></pre><p><strong>web.xml</strong><br><img src="/2022/01/11/filter/2.PNG"><br><strong>Demo1Servlet</strong></p><pre><code>package com.oracle.servlet;import java.io.IOException;import javax.servlet.ServletException;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;public class Demo1Servlet extends HttpServlet &#123;    private static final long serialVersionUID = 1L;    public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;        System.out.println(&quot;Demo1Servlet接收到请求.../demo1&quot;);    &#125;    public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;        doGet(request, response);    &#125;&#125;</code></pre><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="/2022/01/11/filter/3.PNG"></p><p><img src="/2022/01/11/filter/4.PNG"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;filter&quot;&gt;&lt;a href=&quot;#filter&quot; class=&quot;headerlink&quot; title=&quot;filter&quot;&gt;&lt;/a&gt;filter&lt;/h1&gt;&lt;h2 id=&quot;filter-1&quot;&gt;&lt;a href=&quot;#filter-1&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="JavaWeb项目开发" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/"/>
    
    <category term="filter" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/filter/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="filter" scheme="http://example.com/tags/filter/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb项目开发 | session</title>
    <link href="http://example.com/2022/01/11/session/"/>
    <id>http://example.com/2022/01/11/session/</id>
    <published>2022-01-11T09:53:44.000Z</published>
    <updated>2022-01-11T10:09:45.726Z</updated>
    
    <content type="html"><![CDATA[<h1 id="session"><a href="#session" class="headerlink" title="session"></a>session</h1><h2 id="session-1"><a href="#session-1" class="headerlink" title="session"></a>session</h2><ol><li>什么是session?<br>服务器端会话技术</li><li>api</li></ol><p><strong>(1)session的获取</strong></p><pre><code>HttpSession session=request.getSession()</code></pre><p><strong>(2)session属性操作</strong></p><pre><code>session.setAttribute(&quot;attr_name&quot;, attr_value);//设置属性session.getAttribute(attr_name);//获取属性</code></pre><ol start="3"><li>作用范围<br>一次会话中<h2 id="session-测试（其他的servlet可以共享一次请求中的数据）"><a href="#session-测试（其他的servlet可以共享一次请求中的数据）" class="headerlink" title="session 测试（其他的servlet可以共享一次请求中的数据）"></a>session 测试（其他的servlet可以共享一次请求中的数据）</h2></li><li>项目目录<br><img src="/2022/01/11/session/1.PNG"></li><li>代码</li></ol><p><strong>a.html</strong></p><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;title&gt;Insert title here&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;a href=&quot;/sessiontest/demo1&quot;&gt;访问demo1&lt;/a&gt;    &lt;a href=&quot;/sessiontest/demo2&quot;&gt;访问demo2&lt;/a&gt;    &lt;a href=&quot;/sessiontest/demo3&quot;&gt;访问demo3&lt;/a&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><strong>Demo1Servlet</strong></p><pre><code>package com.oracle;import java.io.IOException;import javax.servlet.ServletException;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;public class Demo1Servlet extends HttpServlet &#123;    private static final long serialVersionUID = 1L;    public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;        //request.setAttribute(&quot;username&quot;, &quot;zhangsan&quot;);                //请求转发        //request.getRequestDispatcher(&quot;/demo2&quot;).forward(request, response);                //创建session        HttpSession session = request.getSession();        System.out.println(&quot;Demo1Servlet增加username属性，值为lisi&quot;);        session.setAttribute(&quot;username&quot;, &quot;lisi&quot;);    &#125;    public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;        doGet(request, response);    &#125;&#125;</code></pre><p><strong>Demo2Servlet</strong></p><pre><code>package com.oracle;import java.io.IOException;import javax.servlet.ServletException;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;public class Demo2Servlet extends HttpServlet &#123;    private static final long serialVersionUID = 1L;    public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;        //String username = (String)request.getAttribute(&quot;username&quot;);        //System.out.println(username);//null 一次会话当中的第二次请求不能得到第一次请求的数据                HttpSession session = request.getSession();        String username = (String)session.getAttribute(&quot;username&quot;);        System.out.println(&quot;Demo2Servlet:&quot; + username);            &#125;    public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;        doGet(request, response);    &#125;&#125;</code></pre><p><strong>Demo3Servlet</strong></p><pre><code>package com.oracle;import java.io.IOException;import javax.servlet.ServletException;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;public class Demo3Servlet extends HttpServlet &#123;    private static final long serialVersionUID = 1L;    public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;        HttpSession session = request.getSession();        String username = (String)session.getAttribute(&quot;username&quot;);        System.out.println(&quot;Demo2Servlet:&quot; + username);    &#125;    public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;        doGet(request, response);    &#125;&#125;</code></pre><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="/2022/01/11/session/2.PNG"></p><p><img src="/2022/01/11/session/3.PNG"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;session&quot;&gt;&lt;a href=&quot;#session&quot; class=&quot;headerlink&quot; title=&quot;session&quot;&gt;&lt;/a&gt;session&lt;/h1&gt;&lt;h2 id=&quot;session-1&quot;&gt;&lt;a href=&quot;#session-1&quot; class=&quot;header</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="JavaWeb项目开发" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/"/>
    
    <category term="session" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/session/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="session" scheme="http://example.com/tags/session/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb项目开发 | 注册功能实现</title>
    <link href="http://example.com/2022/01/11/%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/"/>
    <id>http://example.com/2022/01/11/%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/</id>
    <published>2022-01-11T08:05:06.000Z</published>
    <updated>2022-01-11T08:32:35.538Z</updated>
    
    <content type="html"><![CDATA[<h1 id="注册功能实现"><a href="#注册功能实现" class="headerlink" title="注册功能实现"></a>注册功能实现</h1><ol><li>实现原理<br>当用户输入完注册信息，点击提交，浏览器向服务器发出请求，然后由服务器中的servlet来处理请求，将前台用户输入的信息保存到数据库当中。<br><img src="/2022/01/11/%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/1.PNG"></li><li>安装MySQL并创建需要的数据库和表(假设创建的数据库为test3，创建表user)，表结构如下图所示。<br><img src="/2022/01/11/%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/2.PNG"></li><li>在eclipse中导入数据库配置文件<br><img src="/2022/01/11/%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/3.PNG"></li><li>导入注册所需的jar包<br><img src="/2022/01/11/%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/4.PNG"></li><li>导入DataSourceUtils.java<br><img src="/2022/01/11/%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/6.PNG"><span id="more"></span></li><li>准备注册页面</li></ol><p><strong>页面效果：</strong><br><img src="/2022/01/11/%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/5.PNG"></p><p><strong>代码：</strong></p><pre><code>&lt;!doctype html&gt;&lt;html&gt;    &lt;head&gt;&lt;/head&gt;        &lt;meta charset=&quot;utf-8&quot; /&gt;        &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;        &lt;title&gt;会员登录&lt;/title&gt;        &lt;link rel=&quot;stylesheet&quot; href=&quot;css/bootstrap.min.css&quot; type=&quot;text/css&quot; /&gt;        &lt;script src=&quot;js/jquery-1.11.3.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;        &lt;script src=&quot;js/bootstrap.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;!-- 引入自定义css文件 style.css --&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;css/style.css&quot; type=&quot;text/css&quot;/&gt;&lt;style&gt;  body&#123;   margin-top:20px;   margin:0 auto; &#125; .carousel-inner .item img&#123;     width:100%;     height:300px; &#125; .container .row div&#123;      /* position:relative;     float:left; */ &#125; font &#123;    color: #3164af;    font-size: 18px;    font-weight: normal;    padding: 0 10px;&#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;            &lt;!--                时间：2015-12-30                描述：菜单栏            --&gt;            &lt;div class=&quot;container-fluid&quot;&gt;                &lt;div class=&quot;col-md-4&quot;&gt;                    &lt;img src=&quot;img/logo2.png&quot; height=&quot;50px&quot;/&gt;                &lt;/div&gt;                &lt;div class=&quot;col-md-5&quot;&gt;                    &lt;img src=&quot;img/header.png&quot; /&gt;                &lt;/div&gt;                &lt;div class=&quot;col-md-3&quot; style=&quot;padding-top:20px&quot;&gt;                    &lt;ol class=&quot;list-inline&quot;&gt;                        &lt;li&gt;&lt;a href=&quot;login.htm&quot;&gt;登录&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;register.htm&quot;&gt;注册&lt;/a&gt;&lt;/li&gt;                        &lt;li&gt;&lt;a href=&quot;cart.htm&quot;&gt;购物车&lt;/a&gt;&lt;/li&gt;                    &lt;/ol&gt;                &lt;/div&gt;            &lt;/div&gt;            &lt;!--                时间：2015-12-30                描述：导航条            --&gt;            &lt;div class=&quot;container-fluid&quot;&gt;                &lt;nav class=&quot;navbar navbar-inverse&quot;&gt;                    &lt;div class=&quot;container-fluid&quot;&gt;                        &lt;!-- Brand and toggle get grouped for better mobile display --&gt;                        &lt;div class=&quot;navbar-header&quot;&gt;                            &lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#bs-example-navbar-collapse-1&quot; aria-expanded=&quot;false&quot;&gt;                                &lt;span class=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt;                                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;                                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;                                &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;                            &lt;/button&gt;                            &lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&gt;首页&lt;/a&gt;                        &lt;/div&gt;                        &lt;!-- Collect the nav links, forms, and other content for toggling --&gt;                        &lt;div class=&quot;collapse navbar-collapse&quot; id=&quot;bs-example-navbar-collapse-1&quot;&gt;                            &lt;ul class=&quot;nav navbar-nav&quot;&gt;                                &lt;li class=&quot;active&quot;&gt;&lt;a href=&quot;#&quot;&gt;手机数码&lt;span class=&quot;sr-only&quot;&gt;(current)&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;                                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;电脑办公&lt;/a&gt;&lt;/li&gt;                                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;电脑办公&lt;/a&gt;&lt;/li&gt;                                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;电脑办公&lt;/a&gt;&lt;/li&gt;                            &lt;/ul&gt;                            &lt;form class=&quot;navbar-form navbar-right&quot; role=&quot;search&quot;&gt;                                &lt;div class=&quot;form-group&quot;&gt;                                    &lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;Search&quot;&gt;                                &lt;/div&gt;                                &lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;Submit&lt;/button&gt;                            &lt;/form&gt;                        &lt;/div&gt;                        &lt;!-- /.navbar-collapse --&gt;                    &lt;/div&gt;                    &lt;!-- /.container-fluid --&gt;                &lt;/nav&gt;            &lt;/div&gt;&lt;div class=&quot;container&quot; style=&quot;width:100%;background:url(&#39;image/regist_bg.jpg&#39;);&quot;&gt;&lt;div class=&quot;row&quot;&gt;     &lt;div class=&quot;col-md-2&quot;&gt;&lt;/div&gt;    &lt;div class=&quot;col-md-8&quot; style=&quot;background:#fff;padding:40px 80px;margin:30px;border:7px solid #ccc;&quot;&gt;        &lt;font&gt;会员注册&lt;/font&gt;USER REGISTER        &lt;form class=&quot;form-horizontal&quot; style=&quot;margin-top:5px;&quot; action=&quot;/register/user&quot;&gt;             &lt;div class=&quot;form-group&quot;&gt;                &lt;label for=&quot;username&quot; class=&quot;col-sm-2 control-label&quot;&gt;用户名&lt;/label&gt;                &lt;div class=&quot;col-sm-6&quot;&gt;                  &lt;input type=&quot;text&quot; class=&quot;form-control&quot; name=&quot;username&quot; id=&quot;username&quot; placeholder=&quot;请输入用户名&quot;&gt;                &lt;/div&gt;              &lt;/div&gt;               &lt;div class=&quot;form-group&quot;&gt;                &lt;label for=&quot;inputPassword3&quot; class=&quot;col-sm-2 control-label&quot;&gt;密码&lt;/label&gt;                &lt;div class=&quot;col-sm-6&quot;&gt;                  &lt;input type=&quot;password&quot; class=&quot;form-control&quot; name=&quot;password&quot; id=&quot;inputPassword3&quot; placeholder=&quot;请输入密码&quot;&gt;                &lt;/div&gt;              &lt;/div&gt;               &lt;div class=&quot;form-group&quot;&gt;                &lt;label for=&quot;confirmpwd&quot; class=&quot;col-sm-2 control-label&quot;&gt;确认密码&lt;/label&gt;                &lt;div class=&quot;col-sm-6&quot;&gt;                  &lt;input type=&quot;password&quot; class=&quot;form-control&quot; id=&quot;confirmpwd&quot; placeholder=&quot;请输入确认密码&quot;&gt;                &lt;/div&gt;              &lt;/div&gt;              &lt;div class=&quot;form-group&quot;&gt;                &lt;label for=&quot;inputEmail3&quot; class=&quot;col-sm-2 control-label&quot;&gt;Email&lt;/label&gt;                &lt;div class=&quot;col-sm-6&quot;&gt;                  &lt;input type=&quot;email&quot; class=&quot;form-control&quot; name=&quot;email&quot; id=&quot;inputEmail3&quot; placeholder=&quot;Email&quot;&gt;                &lt;/div&gt;              &lt;/div&gt;             &lt;div class=&quot;form-group&quot;&gt;                &lt;label for=&quot;usercaption&quot; class=&quot;col-sm-2 control-label&quot;&gt;姓名&lt;/label&gt;                &lt;div class=&quot;col-sm-6&quot;&gt;                  &lt;input type=&quot;text&quot; class=&quot;form-control&quot; name=&quot;name&quot; id=&quot;usercaption&quot; placeholder=&quot;请输入姓名&quot;&gt;                &lt;/div&gt;              &lt;/div&gt;              &lt;div class=&quot;form-group opt&quot;&gt;                &lt;label for=&quot;inlineRadio1&quot; class=&quot;col-sm-2 control-label&quot;&gt;性别&lt;/label&gt;                &lt;div class=&quot;col-sm-6&quot;&gt;                &lt;label class=&quot;radio-inline&quot;&gt;              &lt;input type=&quot;radio&quot; name=&quot;sex&quot; id=&quot;inlineRadio1&quot; value=&quot;1&quot;&gt; 男            &lt;/label&gt;            &lt;label class=&quot;radio-inline&quot;&gt;              &lt;input type=&quot;radio&quot; name=&quot;sex&quot; id=&quot;inlineRadio2&quot; value=&quot;0&quot;&gt; 女            &lt;/label&gt;            &lt;/div&gt;              &lt;/div&gt;                      &lt;div class=&quot;form-group&quot;&gt;                &lt;label for=&quot;date&quot; class=&quot;col-sm-2 control-label&quot;&gt;出生日期&lt;/label&gt;                &lt;div class=&quot;col-sm-6&quot;&gt;                  &lt;input type=&quot;date&quot; name=&quot;birthday&quot; class=&quot;form-control&quot;  &gt;                              &lt;/div&gt;              &lt;/div&gt;                            &lt;div class=&quot;form-group&quot;&gt;                &lt;label for=&quot;date&quot; class=&quot;col-sm-2 control-label&quot;&gt;验证码&lt;/label&gt;                &lt;div class=&quot;col-sm-3&quot;&gt;                  &lt;input type=&quot;text&quot; class=&quot;form-control&quot;  &gt;                                  &lt;/div&gt;                &lt;div class=&quot;col-sm-2&quot;&gt;                &lt;img src=&quot;./image/captcha.jhtml&quot;/&gt;                &lt;/div&gt;                              &lt;/div&gt;                           &lt;div class=&quot;form-group&quot;&gt;                &lt;div class=&quot;col-sm-offset-2 col-sm-10&quot;&gt;                  &lt;input type=&quot;submit&quot;  width=&quot;100&quot; value=&quot;注册&quot; name=&quot;submit&quot; border=&quot;0&quot;                    style=&quot;background: url(&#39;./images/register.gif&#39;) no-repeat scroll 0 0 rgba(0, 0, 0, 0);                    height:35px;width:100px;color:white;&quot;&gt;                &lt;/div&gt;              &lt;/div&gt;            &lt;/form&gt;    &lt;/div&gt;        &lt;div class=&quot;col-md-2&quot;&gt;&lt;/div&gt;  &lt;/div&gt;&lt;/div&gt;    &lt;div style=&quot;margin-top:50px;&quot;&gt;            &lt;img src=&quot;./image/footer.jpg&quot; width=&quot;100%&quot; height=&quot;78&quot; alt=&quot;我们的优势&quot; title=&quot;我们的优势&quot; /&gt;        &lt;/div&gt;        &lt;div style=&quot;text-align: center;margin-top: 5px;&quot;&gt;            &lt;ul class=&quot;list-inline&quot;&gt;                &lt;li&gt;&lt;a&gt;关于我们&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a&gt;联系我们&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a&gt;招贤纳士&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a&gt;法律声明&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a&gt;友情链接&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a target=&quot;_blank&quot;&gt;支付方式&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a target=&quot;_blank&quot;&gt;配送方式&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a&gt;服务声明&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a&gt;广告声明&lt;/a&gt;&lt;/li&gt;            &lt;/ul&gt;        &lt;/div&gt;        &lt;div style=&quot;text-align: center;margin-top: 5px;margin-bottom:20px;&quot;&gt;            Copyright &amp;copy; 2005-2016 oracle商城 版权所有        &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><ol start="7"><li>创建UserServlet</li></ol><pre><code>package com.oracle.servlet;import java.io.IOException;import java.lang.reflect.InvocationTargetException;import java.util.Map;import javax.servlet.ServletException;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.apache.commons.beanutils.BeanUtils;import org.apache.commons.dbutils.QueryRunner;import com.oracle.bean.User;import com.oracle.utils.DataSourceUtils;public class UserServlet extends HttpServlet &#123;    private static final long serialVersionUID = 1L;    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;        try &#123;            //接收请求数据            Map&lt;String, String[]&gt; map = request.getParameterMap();            //创建user            User user = new User();            //把map中的数据映射到user中            BeanUtils.populate(user, map);            System.out.println(user.getBirthday());            //把当前user中的数据插入到数据库中            //创建QueryRunner对象             QueryRunner qr = new QueryRunner(DataSourceUtils.getDataSource());            //编写sql            String sql = &quot;insert into user(id,username,password,email,name,sex,birthday)values(?,?,?,?,?,?,?)&quot;;            //执行sql            System.out.println(user.getUsername());            qr.update(sql, user.getId(), user.getUsername(), user.getPassword(), user.getEmail(), user.getName(), user.getSex(), user.getBirthday());            System.out.println(&quot;haahahahha&quot;);                    &#125; catch (Exception e) &#123;            e.printStackTrace();        &#125;     &#125;    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;        // TODO Auto-generated method stub        doGet(request, response);    &#125;&#125;</code></pre><ol start="8"><li>创建数据库user表对应的JavaBean(user bean)</li></ol><pre><code>package com.oracle.bean;public class User &#123;    private int id;    private String username;    private String password;    private String email;    private String name;    private String sex;    private String birthday;        public int getId() &#123;        return id;    &#125;    public void setId(int id) &#123;        this.id = id;    &#125;    public String getUsername() &#123;        return username;    &#125;    public void setUsername(String username) &#123;        this.username = username;    &#125;    public String getPassword() &#123;        return password;    &#125;    public void setPassword(String password) &#123;        this.password = password;    &#125;    public String getEmail() &#123;        return email;    &#125;    public void setEmail(String email) &#123;        this.email = email;    &#125;    public String getName() &#123;        return name;    &#125;    public void setName(String name) &#123;        this.name = name;    &#125;    public String getSex() &#123;        return sex;    &#125;    public void setSex(String sex) &#123;        this.sex = sex;    &#125;    public String getBirthday() &#123;        return birthday;    &#125;    public void setBirthday(String birthday) &#123;        this.birthday = birthday;    &#125;    public User(int id, String username, String password, String email, String name, String sex, String birthday) &#123;        super();        this.id = id;        this.username = username;        this.password = password;        this.email = email;        this.name = name;        this.sex = sex;        this.birthday = birthday;    &#125;    public User() &#123;        super();        // TODO Auto-generated constructor stub    &#125;&#125;</code></pre><ol start="9"><li>访问页面输入用户信息进行登录</li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;注册功能实现&quot;&gt;&lt;a href=&quot;#注册功能实现&quot; class=&quot;headerlink&quot; title=&quot;注册功能实现&quot;&gt;&lt;/a&gt;注册功能实现&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;实现原理&lt;br&gt;当用户输入完注册信息，点击提交，浏览器向服务器发出请求，然后由服务器中的servlet来处理请求，将前台用户输入的信息保存到数据库当中。&lt;br&gt;&lt;img src=&quot;/2022/01/11/%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/1.PNG&quot;&gt;&lt;/li&gt;
&lt;li&gt;安装MySQL并创建需要的数据库和表(假设创建的数据库为test3，创建表user)，表结构如下图所示。&lt;br&gt;&lt;img src=&quot;/2022/01/11/%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/2.PNG&quot;&gt;&lt;/li&gt;
&lt;li&gt;在eclipse中导入数据库配置文件&lt;br&gt;&lt;img src=&quot;/2022/01/11/%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/3.PNG&quot;&gt;&lt;/li&gt;
&lt;li&gt;导入注册所需的jar包&lt;br&gt;&lt;img src=&quot;/2022/01/11/%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/4.PNG&quot;&gt;&lt;/li&gt;
&lt;li&gt;导入DataSourceUtils.java&lt;br&gt;&lt;img src=&quot;/2022/01/11/%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/6.PNG&quot;&gt;&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="JavaWeb项目开发" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/"/>
    
    <category term="注册功能实现" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="注册" scheme="http://example.com/tags/%E6%B3%A8%E5%86%8C/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb项目开发 | request域对象</title>
    <link href="http://example.com/2022/01/10/request%E5%9F%9F%E5%AF%B9%E8%B1%A1/"/>
    <id>http://example.com/2022/01/10/request%E5%9F%9F%E5%AF%B9%E8%B1%A1/</id>
    <published>2022-01-10T12:56:14.000Z</published>
    <updated>2022-01-11T08:07:09.992Z</updated>
    
    <content type="html"><![CDATA[<h1 id="request域对象"><a href="#request域对象" class="headerlink" title="request域对象"></a>request域对象</h1><p><strong>场景</strong>：有时候我们发送一个请求然后由一个对应的servlet处理请求，接着我们需要将当前的request对象的一些信息传递到另一个servlet或者jsp页面。<br><strong>方法</strong>：</p><ol><li>请求转发<br>假设当前处理请求的是Demo2Servlet(/demo2)，需要传递信息到Demo3Servlet(/demo3)中。</li></ol><pre><code>request.getRequestDispatcher(&quot;/demo3&quot;).forward(request, response);</code></pre><p>然后我们就可以在Demo3Servlet中获取request中的信息。</p><pre><code>package com.oracle;import java.io.IOException;import javax.servlet.ServletException;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;public class Demo3Servlet extends HttpServlet &#123;    private static final long serialVersionUID = 1L;        protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;        String username = request.getParameter(&quot;username&quot;);        System.out.println(username);    &#125;    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;        // TODO Auto-generated method stub        doGet(request, response);    &#125;&#125;</code></pre><ol start="2"><li>使用request域对象（使用request的setAttribute()方法设置其他信息并传递到Demo3Servlet中）</li></ol><pre><code>package com.oracle;import java.io.IOException;import java.util.Map;import javax.servlet.ServletException;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;public class Demo2Servlet extends HttpServlet &#123;    private static final long serialVersionUID = 1L;    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;        request.setAttribute(&quot;flag&quot;, 1);        request.getRequestDispatcher(&quot;/demo3&quot;).forward(request, response);    &#125;    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;        // TODO Auto-generated method stub        doGet(request, response);    &#125;&#125;</code></pre><ol start="3"><li>在Demo3Servlet中获取请求中的信息或者在Demo2Servlet中设置的新信息）</li></ol><pre><code>package com.oracle;import java.io.IOException;import javax.servlet.ServletException;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;public class Demo3Servlet extends HttpServlet &#123;    private static final long serialVersionUID = 1L;    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;        String username = request.getParameter(&quot;username&quot;);        System.out.println(username);                //request.removeAttribute(&quot;flag&quot;);//如果在获取设置的属性前将其删除，后面将获取不到该属性        Integer a = (Integer)request.getAttribute(&quot;flag&quot;);        System.out.println(a);    &#125;    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;        // TODO Auto-generated method stub        doGet(request, response);    &#125;&#125;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;request域对象&quot;&gt;&lt;a href=&quot;#request域对象&quot; class=&quot;headerlink&quot; title=&quot;request域对象&quot;&gt;&lt;/a&gt;request域对象&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;场景&lt;/strong&gt;：有时候我们发送一个请求然后由一个对应</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="JavaWeb项目开发" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/"/>
    
    <category term="request域对象" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/request%E5%9F%9F%E5%AF%B9%E8%B1%A1/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="request域对象" scheme="http://example.com/tags/request%E5%9F%9F%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb项目开发 | request获取各种形式的数据、请求转发</title>
    <link href="http://example.com/2022/01/10/request%E8%8E%B7%E5%8F%96%E5%90%84%E7%A7%8D%E5%BD%A2%E5%BC%8F%E7%9A%84%E6%95%B0%E6%8D%AE/"/>
    <id>http://example.com/2022/01/10/request%E8%8E%B7%E5%8F%96%E5%90%84%E7%A7%8D%E5%BD%A2%E5%BC%8F%E7%9A%84%E6%95%B0%E6%8D%AE/</id>
    <published>2022-01-10T11:50:27.000Z</published>
    <updated>2022-01-11T08:06:59.796Z</updated>
    
    <content type="html"><![CDATA[<h1 id="request获取各种形式的数据"><a href="#request获取各种形式的数据" class="headerlink" title="request获取各种形式的数据"></a>request获取各种形式的数据</h1><ol><li>新建form.html<br><img src="/2022/01/10/request%E8%8E%B7%E5%8F%96%E5%90%84%E7%A7%8D%E5%BD%A2%E5%BC%8F%E7%9A%84%E6%95%B0%E6%8D%AE/1.PNG"></li><li>新建Demo2Servlet处理来自form表单的请求并通过request对象的集中常用方法获取各种形式的数据</li></ol><pre><code>package com.oracle;import java.io.IOException;import java.util.Map;import javax.servlet.ServletException;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;/** * Servlet implementation class Demo2Servlet */public class Demo2Servlet extends HttpServlet &#123;    private static final long serialVersionUID = 1L;    /**     * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)     */    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;        // TODO Auto-generated method stub        //response.getWriter().append(&quot;Served at: &quot;).append(request.getContextPath());//        //获取前台传递的参数//        String username = request.getParameter(&quot;username&quot;);//        String password = request.getParameter(&quot;pwd&quot;);//        //        //获取单值//        System.out.println(username);//        System.out.println(password);//        //        //获取多值//        String[] vals = request.getParameterValues(&quot;hobby&quot;);//        for(String val:vals) &#123;//            System.out.println(val);//        &#125;                //获取表单中的所有数据        Map&lt;String, String[]&gt; map = request.getParameterMap();        for(String s:map.keySet()) &#123;            String[] strs = map.get(s);                        for(String st:strs) &#123;                System.out.println(st);            &#125;        &#125;                    &#125;    /**     * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)     */    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;        // TODO Auto-generated method stub        doGet(request, response);    &#125;&#125;</code></pre><ol start="3"><li>请求转发<br>假设我们刚刚处理的表单就是一个网站的注册页面，提交登录成功后，我们需要跳转到登录页面（从一个页面跳转到另一个页面）</li></ol><p><strong>解决办法：</strong><br>我们只需要在doGet方法的最后增加下面一行代码（假设1.html为登录页面）：</p><pre><code>//请求转发到1.html页面request.getRequestDispatcher(&quot;/1.html&quot;).forward(request, response);</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;request获取各种形式的数据&quot;&gt;&lt;a href=&quot;#request获取各种形式的数据&quot; class=&quot;headerlink&quot; title=&quot;request获取各种形式的数据&quot;&gt;&lt;/a&gt;request获取各种形式的数据&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;新建form.h</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="JavaWeb项目开发" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/"/>
    
    <category term="request获取各种形式的数据、请求转发" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/request%E8%8E%B7%E5%8F%96%E5%90%84%E7%A7%8D%E5%BD%A2%E5%BC%8F%E7%9A%84%E6%95%B0%E6%8D%AE%E3%80%81%E8%AF%B7%E6%B1%82%E8%BD%AC%E5%8F%91/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="请求转发" scheme="http://example.com/tags/%E8%AF%B7%E6%B1%82%E8%BD%AC%E5%8F%91/"/>
    
    <category term="request" scheme="http://example.com/tags/request/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb项目开发 | servlet</title>
    <link href="http://example.com/2022/01/10/servlet/"/>
    <id>http://example.com/2022/01/10/servlet/</id>
    <published>2022-01-10T09:00:20.000Z</published>
    <updated>2022-01-11T08:06:49.365Z</updated>
    
    <content type="html"><![CDATA[<h1 id="servlet"><a href="#servlet" class="headerlink" title="servlet"></a>servlet</h1><h2 id="创建servlet"><a href="#创建servlet" class="headerlink" title="创建servlet"></a>创建servlet</h2><ol><li>在src下面新建一个包com.oracle(公司域名反写)</li><li>在com.oracle下新建一个servlet(New–&gt;Other–&gt;Web–&gt;Servlet)<br>输入servlet的名称：<br><img src="/2022/01/10/servlet/1.PNG"><br>修改URL mappings:<br><img src="/2022/01/10/servlet/2.PNG"><br>去掉Constructors form superclass的勾选：<br><img src="/2022/01/10/servlet/3.PNG"><br>创建好的servlet:<br><img src="/2022/01/10/servlet/4.PNG"><h2 id="测试Demo1Servlet"><a href="#测试Demo1Servlet" class="headerlink" title="测试Demo1Servlet"></a>测试Demo1Servlet</h2></li><li>创建demo1.html<br><img src="/2022/01/10/servlet/5.PNG"></li><li>在Demo1Servlet.java中编写处理来自demo1.html的请求的Java代码<br><img src="/2022/01/10/servlet/6.PNG"></li><li>在浏览器地址栏输入：localhost:8080/shop/demo1.html<br><img src="/2022/01/10/servlet/7.PNG"></li><li>点击上图中的超链接向服务器发出请求<br>servelet处理来自浏览器的请求，执行在Demo1Servlet.java中编写的Java代码<br><img src="/2022/01/10/servlet/8.PNG"></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;servlet&quot;&gt;&lt;a href=&quot;#servlet&quot; class=&quot;headerlink&quot; title=&quot;servlet&quot;&gt;&lt;/a&gt;servlet&lt;/h1&gt;&lt;h2 id=&quot;创建servlet&quot;&gt;&lt;a href=&quot;#创建servlet&quot; class=&quot;header</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="JavaWeb项目开发" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/"/>
    
    <category term="创建servlet接收并处理请求" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/%E5%88%9B%E5%BB%BAservlet%E6%8E%A5%E6%94%B6%E5%B9%B6%E5%A4%84%E7%90%86%E8%AF%B7%E6%B1%82/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="servlet" scheme="http://example.com/tags/servlet/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb项目开发 | 创建web项目并添加到服务器中</title>
    <link href="http://example.com/2022/01/10/%E5%88%9B%E5%BB%BAweb%E9%A1%B9%E7%9B%AE%E5%B9%B6%E6%B7%BB%E5%8A%A0%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%AD/"/>
    <id>http://example.com/2022/01/10/%E5%88%9B%E5%BB%BAweb%E9%A1%B9%E7%9B%AE%E5%B9%B6%E6%B7%BB%E5%8A%A0%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%AD/</id>
    <published>2022-01-10T08:33:13.000Z</published>
    <updated>2022-01-11T08:06:41.765Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建web项目并添加到服务器中"><a href="#创建web项目并添加到服务器中" class="headerlink" title="创建web项目并添加到服务器中"></a>创建web项目并添加到服务器中</h1><h2 id="1-创建web项目"><a href="#1-创建web项目" class="headerlink" title="1.创建web项目"></a>1.创建web项目</h2><p>New –&gt; Web –&gt; dynamic web project,然后按照下图操作。<br><img src="/2022/01/10/%E5%88%9B%E5%BB%BAweb%E9%A1%B9%E7%9B%AE%E5%B9%B6%E6%B7%BB%E5%8A%A0%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%AD/1.PNG"><br>注意：Target runtime需选择与服务器对应的版本，dynamic web module version选择2.5.</p><h2 id="2-将创建好的web项目加入到服务器中"><a href="#2-将创建好的web项目加入到服务器中" class="headerlink" title="2.将创建好的web项目加入到服务器中"></a>2.将创建好的web项目加入到服务器中</h2><p>在服务器上右键–&gt;add and remove,然后将对应的项目加入到服务器。<br><img src="/2022/01/10/%E5%88%9B%E5%BB%BAweb%E9%A1%B9%E7%9B%AE%E5%B9%B6%E6%B7%BB%E5%8A%A0%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%AD/2.PNG"></p><h2 id="3-访问服务器上的web信息"><a href="#3-访问服务器上的web信息" class="headerlink" title="3.访问服务器上的web信息"></a>3.访问服务器上的web信息</h2><p>1.在WebContent下面创建一个简单的页面（1.html）<br>2.在浏览器地址栏输入：localhot/8080/shop/1.html<br><img src="/2022/01/10/%E5%88%9B%E5%BB%BAweb%E9%A1%B9%E7%9B%AE%E5%B9%B6%E6%B7%BB%E5%8A%A0%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%AD/3.PNG"><br>效果：<br><img src="/2022/01/10/%E5%88%9B%E5%BB%BAweb%E9%A1%B9%E7%9B%AE%E5%B9%B6%E6%B7%BB%E5%8A%A0%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%AD/4.PNG"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;创建web项目并添加到服务器中&quot;&gt;&lt;a href=&quot;#创建web项目并添加到服务器中&quot; class=&quot;headerlink&quot; title=&quot;创建web项目并添加到服务器中&quot;&gt;&lt;/a&gt;创建web项目并添加到服务器中&lt;/h1&gt;&lt;h2 id=&quot;1-创建web项目&quot;&gt;&lt;a</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="JavaWeb项目开发" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/"/>
    
    <category term="创建web项目并添加到服务器中" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/%E5%88%9B%E5%BB%BAweb%E9%A1%B9%E7%9B%AE%E5%B9%B6%E6%B7%BB%E5%8A%A0%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%AD/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="创建web项目" scheme="http://example.com/tags/%E5%88%9B%E5%BB%BAweb%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb项目开发 | 项目技术栈</title>
    <link href="http://example.com/2022/01/09/%E9%A1%B9%E7%9B%AE%E6%8A%80%E6%9C%AF%E6%A0%88/"/>
    <id>http://example.com/2022/01/09/%E9%A1%B9%E7%9B%AE%E6%8A%80%E6%9C%AF%E6%A0%88/</id>
    <published>2022-01-10T07:54:45.000Z</published>
    <updated>2022-01-11T08:07:15.712Z</updated>
    
    <content type="html"><![CDATA[<h1 id="项目技术栈"><a href="#项目技术栈" class="headerlink" title="项目技术栈"></a>项目技术栈</h1><p>表格列出了开发网上购物商城所用到的技术。</p><table><thead><tr><th>技术</th><th>作用</th></tr></thead><tbody><tr><td>html</td><td>写静态页面</td></tr><tr><td>css</td><td>渲染页面</td></tr><tr><td>js/jquery</td><td>可以为html增加动画效果</td></tr><tr><td>bootstrap</td><td>前端框架</td></tr><tr><td>Servlet</td><td>接受请求,处理请求,生成动态的web资源</td></tr><tr><td>Request</td><td>请求</td></tr><tr><td>session</td><td>服务器端会话技术</td></tr><tr><td>filter</td><td>过滤请求和响应</td></tr><tr><td>jsp</td><td>动态展示数据</td></tr><tr><td>el和jstl</td><td>el:jsp中的输出表达式 jstl:减少页面JAVA代码量 让结构更加清晰</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;项目技术栈&quot;&gt;&lt;a href=&quot;#项目技术栈&quot; class=&quot;headerlink&quot; title=&quot;项目技术栈&quot;&gt;&lt;/a&gt;项目技术栈&lt;/h1&gt;&lt;p&gt;表格列出了开发网上购物商城所用到的技术。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;技术&lt;/th&gt;
</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="JavaWeb项目开发" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/"/>
    
    <category term="项目技术栈" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/%E9%A1%B9%E7%9B%AE%E6%8A%80%E6%9C%AF%E6%A0%88/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb项目开发 | web服务器tomcat和eclipse的集成</title>
    <link href="http://example.com/2022/01/09/web%E6%9C%8D%E5%8A%A1%E5%99%A8tomcat%E5%92%8Ceclipse%E7%9A%84%E9%9B%86%E6%88%90/"/>
    <id>http://example.com/2022/01/09/web%E6%9C%8D%E5%8A%A1%E5%99%A8tomcat%E5%92%8Ceclipse%E7%9A%84%E9%9B%86%E6%88%90/</id>
    <published>2022-01-10T07:01:34.000Z</published>
    <updated>2022-01-11T08:06:30.546Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web服务器tomcat和eclipse的集成"><a href="#web服务器tomcat和eclipse的集成" class="headerlink" title="web服务器tomcat和eclipse的集成"></a>web服务器tomcat和eclipse的集成</h1><h2 id="下载tomcat"><a href="#下载tomcat" class="headerlink" title="下载tomcat"></a>下载tomcat</h2><p><a href="http://tomcat.apache.org/download-70.cgi">tomcat</a></p><h2 id="安装tomcat"><a href="#安装tomcat" class="headerlink" title="安装tomcat"></a>安装tomcat</h2><p>将下载的后缀为.zip的压缩文件解压即可（本项目使用tomcat 7）<br>将文件解压到不包含中文文件名的路径下（例：D://tomcat//）</p><h2 id="将tomcat服务器集成到eclipse中"><a href="#将tomcat服务器集成到eclipse中" class="headerlink" title="将tomcat服务器集成到eclipse中"></a>将tomcat服务器集成到eclipse中</h2><p>1.在eclipse菜单栏中点击window–&gt;preferences,然后按照下图所示顺序点击。<br><img src="/2022/01/09/web%E6%9C%8D%E5%8A%A1%E5%99%A8tomcat%E5%92%8Ceclipse%E7%9A%84%E9%9B%86%E6%88%90/1.PNG"><br>2.按照下图所示步骤添加服务器，选择版本7<br><img src="/2022/01/09/web%E6%9C%8D%E5%8A%A1%E5%99%A8tomcat%E5%92%8Ceclipse%E7%9A%84%E9%9B%86%E6%88%90/2.PNG"><br>3.选择下载并解压的tomcat服务器并选择jre<br><img src="/2022/01/09/web%E6%9C%8D%E5%8A%A1%E5%99%A8tomcat%E5%92%8Ceclipse%E7%9A%84%E9%9B%86%E6%88%90/3.PNG"><br>4.在菜单栏选择windown–&gt;show view–&gt;Other..–&gt;Server–&gt;Servers来显示配置的tomcat服务器<br><img src="/2022/01/09/web%E6%9C%8D%E5%8A%A1%E5%99%A8tomcat%E5%92%8Ceclipse%E7%9A%84%E9%9B%86%E6%88%90/4.PNG"><br>注：可以通过点击上图中的启动按钮和关闭按钮来关闭/停止服务器<br>5.双击上图中的服务器并按照下图将Deploy path修改为webapps<br><img src="/2022/01/09/web%E6%9C%8D%E5%8A%A1%E5%99%A8tomcat%E5%92%8Ceclipse%E7%9A%84%E9%9B%86%E6%88%90/5.PNG"><br>6.通过浏览器访问该服务器<br>在浏览器地址栏输入localhost:8080来访问（先通过启动按钮启动服务器）<br><img src="/2022/01/09/web%E6%9C%8D%E5%8A%A1%E5%99%A8tomcat%E5%92%8Ceclipse%E7%9A%84%E9%9B%86%E6%88%90/6.PNG"><br>如果端口8080被占用，可以在tomcat目录下/conf/server.xml中修改端口号。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;web服务器tomcat和eclipse的集成&quot;&gt;&lt;a href=&quot;#web服务器tomcat和eclipse的集成&quot; class=&quot;headerlink&quot; title=&quot;web服务器tomcat和eclipse的集成&quot;&gt;&lt;/a&gt;web服务器tomcat和ecli</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="JavaWeb项目开发" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/"/>
    
    <category term="web服务器和eclipse的集成" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/web%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%92%8Ceclipse%E7%9A%84%E9%9B%86%E6%88%90/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="web服务器和eclipse的集成" scheme="http://example.com/tags/web%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%92%8Ceclipse%E7%9A%84%E9%9B%86%E6%88%90/"/>
    
  </entry>
  
  <entry>
    <title>Java | Java判断对象是否相等</title>
    <link href="http://example.com/2022/01/07/Java%E5%88%A4%E6%96%AD%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%90%A6%E7%9B%B8%E7%AD%89/"/>
    <id>http://example.com/2022/01/07/Java%E5%88%A4%E6%96%AD%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%90%A6%E7%9B%B8%E7%AD%89/</id>
    <published>2022-01-08T06:37:05.000Z</published>
    <updated>2022-01-08T07:48:34.070Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java判断对象是否相等"><a href="#Java判断对象是否相等" class="headerlink" title="Java判断对象是否相等"></a>Java判断对象是否相等</h1><h2 id="1-类的创建"><a href="#1-类的创建" class="headerlink" title="1.类的创建"></a>1.类的创建</h2><p>要判断两个对象是否相等，我们首先得创建相应得类并由此类创建两个对象;此处我们定义一个Monkey类，该类<br>包含两个属性：name 和 age;同时我们为类中得实例变量添加了构造器、getter和setter方法。</p><span id="more"></span><pre><code>class Monkey&#123;    private String name;    private int age;        public Monkey(String name, int age)&#123;        this.setName(name);        this.setAge(age);    &#125;    public String getName() &#123;        return this.name;    &#125;    public void setName(String name) &#123;        this.name = name;    &#125;    public int getAge() &#123;        return age;    &#125;    public void setAge(int age) &#123;        this.age = age;    &#125;&#125;</code></pre><h2 id="Java中如何判断两个对象是否相等"><a href="#Java中如何判断两个对象是否相等" class="headerlink" title="Java中如何判断两个对象是否相等"></a>Java中如何判断两个对象是否相等</h2><p>Java通过hashCode()和equals的结果共同决定两个对象是否相等</p><h3 id="hashCode"><a href="#hashCode" class="headerlink" title="hashCode()"></a>hashCode()</h3><p>hashCode() 的作用是获取哈希码，也称为散列码；它实际上是返回一个int整数。<br>这个哈希码的作用是确定该对象在哈希表中的索引位置。hashCode() 定义在JDK<br>的Object.java中，这就意味着Java中的任何类都包含有hashCode() 函数。</p><h3 id="equals"><a href="#equals" class="headerlink" title="equals()"></a>equals()</h3><p>equals它的作用也是判断两个对象是否相等，如果对象重写了equals()方法，<br>比较两个对象的内容是否相等；如果没有重写，比较两个对象的地址是否相同，<br>价于“==”。同样的，equals()定义在JDK的Object.java中，这就意味着Java<br>中的任何类都包含有equals()函数。<br><strong>注意：通常我们可以通过重写hashCode()和equals()来自定义两个对象相等的标准，且若重写，<br>必须同时对两个方法进行重写。</strong></p><h2 id="重写hashCode-和equals"><a href="#重写hashCode-和equals" class="headerlink" title="重写hashCode()和equals()"></a>重写hashCode()和equals()</h2><p>我们只需再上面定义的Monkey类中重写这两个方法即可；equals方法直接返回true,也就是说对<br>这个类产生的任意两个对象进行比较都会返回ture；hashCode()方法返回一个固定的值，这里取4。</p><pre><code>class Monkey&#123;    ...        public boolean equals(Object obj) &#123;        return true;    &#125;        public int hashCode() &#123;        return 4;    &#125;        ...&#125;</code></pre><h2 id="写测试类"><a href="#写测试类" class="headerlink" title="写测试类"></a>写测试类</h2><p>下面我们创建一个HashCodeAndEqualsTest测试类进行测试。</p><pre><code>public class HashCodeAndEqualsTest &#123;        public static void main(String[] args) &#123;        // TODO Auto-generated method stub        Monkey monkey1 = new Monkey(&quot;wu kong&quot;, 10);        Monkey monkey2 = monkey1;        Monkey monkey3 = new Monkey(&quot;liu er&quot;,  5);                System.out.println(&quot;monkey1&#39;s name:&quot; + monkey1.getName() + &quot;,age:&quot; + monkey1.getAge());        System.out.println(&quot;monkey2&#39;s name:&quot; + monkey2.getName() + &quot;,age:&quot; + monkey2.getAge());        System.out.println(&quot;monkey3&#39;s name:&quot; + monkey3.getName() + &quot;,age:&quot; + monkey3.getAge());                System.out.println(&quot;monkey1&#39;s hash code:&quot; + monkey1.hashCode());        System.out.println(&quot;monkey2&#39;s hash code:&quot; + monkey2.hashCode());        System.out.println(&quot;monkey3&#39;s hash code:&quot; + monkey3.hashCode());                System.out.println(&quot;Is monkey1 equal to monkey2:&quot; + monkey1.equals(monkey2));        System.out.println(&quot;Is monkey1 equal to monkey3:&quot; + monkey1.equals(monkey3));    &#125;&#125;</code></pre><h3 id="1-没有重写方法的程序执行结果"><a href="#1-没有重写方法的程序执行结果" class="headerlink" title="1.没有重写方法的程序执行结果"></a>1.没有重写方法的程序执行结果</h3><pre><code>monkey1&#39;s name:wu kong,age:10monkey2&#39;s name:wu kong,age:10monkey3&#39;s name:liu er,age:5monkey1&#39;s hash code:366712642monkey2&#39;s hash code:366712642monkey3&#39;s hash code:1829164700Is monkey1 equal to monkey2:trueIs monkey1 equal to monkey3:false</code></pre><p>monkey1和monkey2指向堆上的同一个对象，故monkey1.equals(monkey2)的结果为true,monkey1和<br>monkey3指向堆上两个不同的对象，故equals()方法返回false。</p><h3 id="2-重写后的程序执行结果"><a href="#2-重写后的程序执行结果" class="headerlink" title="2.重写后的程序执行结果"></a>2.重写后的程序执行结果</h3><pre><code>monkey1&#39;s name:wu kong,age:10monkey2&#39;s name:wu kong,age:10monkey3&#39;s name:liu er,age:5monkey1&#39;s hash code:4monkey2&#39;s hash code:4monkey3&#39;s hash code:4Is monkey1 equal to monkey2:trueIs monkey1 equal to monkey3:true</code></pre><p>由于我们对equals和hashCode方法进行了重写，重新确定了对象相等的标准，故monkey1和monkey3为<br>“同一对象”。</p><h3 id="3-只重写equals方法时，程序的执行结果"><a href="#3-只重写equals方法时，程序的执行结果" class="headerlink" title="3.只重写equals方法时，程序的执行结果"></a>3.只重写equals方法时，程序的执行结果</h3><pre><code>monkey1&#39;s name:wu kong,age:10monkey2&#39;s name:wu kong,age:10monkey3&#39;s name:liu er,age:5monkey1&#39;s hash code:366712642monkey2&#39;s hash code:366712642monkey3&#39;s hash code:1829164700Is monkey1 equal to monkey2:trueIs monkey1 equal to monkey3:true</code></pre><p>重写了equals方法后，monkey1和monkey3两个对象被认为指向同一实例，但他们的hash code不同</p><h3 id="4-只重写hashCode方法时，程序的执行结果"><a href="#4-只重写hashCode方法时，程序的执行结果" class="headerlink" title="4.只重写hashCode方法时，程序的执行结果"></a>4.只重写hashCode方法时，程序的执行结果</h3><pre><code>monkey1&#39;s name:wu kong,age:10monkey2&#39;s name:wu kong,age:10monkey3&#39;s name:liu er,age:5monkey1&#39;s hash code:4monkey2&#39;s hash code:4monkey3&#39;s hash code:4Is monkey1 equal to monkey2:trueIs monkey1 equal to monkey3:false</code></pre><p>虽然monkey1、monkey2的hash code相同，但equals方法返回false。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Java判断对象是否相等&quot;&gt;&lt;a href=&quot;#Java判断对象是否相等&quot; class=&quot;headerlink&quot; title=&quot;Java判断对象是否相等&quot;&gt;&lt;/a&gt;Java判断对象是否相等&lt;/h1&gt;&lt;h2 id=&quot;1-类的创建&quot;&gt;&lt;a href=&quot;#1-类的创建&quot; class=&quot;headerlink&quot; title=&quot;1.类的创建&quot;&gt;&lt;/a&gt;1.类的创建&lt;/h2&gt;&lt;p&gt;要判断两个对象是否相等，我们首先得创建相应得类并由此类创建两个对象;此处我们定义一个Monkey类，该类&lt;br&gt;包含两个属性：name 和 age;同时我们为类中得实例变量添加了构造器、getter和setter方法。&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="基础" scheme="http://example.com/categories/Java/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="判断两个对象是否相等" scheme="http://example.com/categories/Java/%E5%9F%BA%E7%A1%80/%E5%88%A4%E6%96%AD%E4%B8%A4%E4%B8%AA%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%90%A6%E7%9B%B8%E7%AD%89/"/>
    
    
    <category term="equals" scheme="http://example.com/tags/equals/"/>
    
    <category term="hashCode" scheme="http://example.com/tags/hashCode/"/>
    
  </entry>
  
  <entry>
    <title>参考文献 | Multimodal Emotion Recognition Method based on Facial expressions and EEG</title>
    <link href="http://example.com/2022/01/04/MultimodalEmotionRecognition/"/>
    <id>http://example.com/2022/01/04/MultimodalEmotionRecognition/</id>
    <published>2022-01-05T05:26:08.000Z</published>
    <updated>2022-01-05T13:25:58.691Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Multimodal-Emotion-Recognition-Method-based-on-Facial-expressions-and-EEG"><a href="#Multimodal-Emotion-Recognition-Method-based-on-Facial-expressions-and-EEG" class="headerlink" title="Multimodal Emotion Recognition Method based on Facial expressions and EEG"></a>Multimodal Emotion Recognition Method based on Facial expressions and EEG</h1><h2 id="Contributions"><a href="#Contributions" class="headerlink" title="Contributions"></a>Contributions</h2><p>To solve the <strong>multimodal emtoion recognition</strong> problem, the emotion recognition results<br>were calculated using the <strong>Monte Carlo method</strong> to combine the recognition results of<br><strong>facical expressions</strong> and <strong>EEG</strong> in the multimodal emotion recognition.</p><span id="more"></span><h2 id="Unimodal-experiment"><a href="#Unimodal-experiment" class="headerlink" title="Unimodal experiment"></a>Unimodal experiment</h2><ol><li>They trained a <strong>CNN</strong> model using the FER2013 public dataset as a facial expressions classifier.</li><li>A <strong>SVM</strong> was used to classify the EEG data.</li></ol><p><img src="/2022/01/04/MultimodalEmotionRecognition/unimodal.jpg"></p><h2 id="Multimodal-experiment"><a href="#Multimodal-experiment" class="headerlink" title="Multimodal experiment"></a>Multimodal experiment</h2><p>Combine the recognition results of facical expressions and EEG in the multimodal emotion recognition using the Monte Carlo method<br><img src="/2022/01/04/MultimodalEmotionRecognition/multimodal.jpg"></p><h2 id="Cite-this-paper"><a href="#Cite-this-paper" class="headerlink" title="Cite this paper"></a>Cite this paper</h2><p><a href="https://doi.org/10.1016/j.bspc.2021.103029">https://doi.org/10.1016/j.bspc.2021.103029</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Multimodal-Emotion-Recognition-Method-based-on-Facial-expressions-and-EEG&quot;&gt;&lt;a href=&quot;#Multimodal-Emotion-Recognition-Method-based-on-Facial-expressions-and-EEG&quot; class=&quot;headerlink&quot; title=&quot;Multimodal Emotion Recognition Method based on Facial expressions and EEG&quot;&gt;&lt;/a&gt;Multimodal Emotion Recognition Method based on Facial expressions and EEG&lt;/h1&gt;&lt;h2 id=&quot;Contributions&quot;&gt;&lt;a href=&quot;#Contributions&quot; class=&quot;headerlink&quot; title=&quot;Contributions&quot;&gt;&lt;/a&gt;Contributions&lt;/h2&gt;&lt;p&gt;To solve the &lt;strong&gt;multimodal emtoion recognition&lt;/strong&gt; problem, the emotion recognition results&lt;br&gt;were calculated using the &lt;strong&gt;Monte Carlo method&lt;/strong&gt; to combine the recognition results of&lt;br&gt;&lt;strong&gt;facical expressions&lt;/strong&gt; and &lt;strong&gt;EEG&lt;/strong&gt; in the multimodal emotion recognition.&lt;/p&gt;</summary>
    
    
    
    <category term="Research and Paper" scheme="http://example.com/categories/Research-and-Paper/"/>
    
    <category term="EEG" scheme="http://example.com/categories/Research-and-Paper/EEG/"/>
    
    <category term="脑电分类" scheme="http://example.com/categories/Research-and-Paper/EEG/%E8%84%91%E7%94%B5%E5%88%86%E7%B1%BB/"/>
    
    <category term="参考文献" scheme="http://example.com/categories/Research-and-Paper/EEG/%E8%84%91%E7%94%B5%E5%88%86%E7%B1%BB/%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE/"/>
    
    
    <category term="脑电分类" scheme="http://example.com/tags/%E8%84%91%E7%94%B5%E5%88%86%E7%B1%BB/"/>
    
    <category term="EEG" scheme="http://example.com/tags/EEG/"/>
    
  </entry>
  
  <entry>
    <title>期刊 | 脑电期刊</title>
    <link href="http://example.com/2022/01/04/%E8%84%91%E7%94%B5%E6%9C%9F%E5%88%8A/"/>
    <id>http://example.com/2022/01/04/%E8%84%91%E7%94%B5%E6%9C%9F%E5%88%8A/</id>
    <published>2022-01-05T03:17:28.000Z</published>
    <updated>2022-01-05T03:21:52.030Z</updated>
    
    <content type="html"><![CDATA[<h1 id="脑电期刊"><a href="#脑电期刊" class="headerlink" title="脑电期刊"></a>脑电期刊</h1><p>名称：Biomedical Siganl Processing and Control<br>网址：<a href="https://www.sciencedirect.com/journal/biomedical-signal-processing-and-control">Biomedical Signal Processing and Control</a><br>SCI分区：2</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;脑电期刊&quot;&gt;&lt;a href=&quot;#脑电期刊&quot; class=&quot;headerlink&quot; title=&quot;脑电期刊&quot;&gt;&lt;/a&gt;脑电期刊&lt;/h1&gt;&lt;p&gt;名称：Biomedical Siganl Processing and Control&lt;br&gt;网址：&lt;a href=&quot;htt</summary>
      
    
    
    
    <category term="Research and Paper" scheme="http://example.com/categories/Research-and-Paper/"/>
    
    <category term="脑电期刊" scheme="http://example.com/categories/Research-and-Paper/%E8%84%91%E7%94%B5%E6%9C%9F%E5%88%8A/"/>
    
    <category term="Biomedical Signal Processing and Control" scheme="http://example.com/categories/Research-and-Paper/%E8%84%91%E7%94%B5%E6%9C%9F%E5%88%8A/Biomedical-Signal-Processing-and-Control/"/>
    
    
  </entry>
  
  <entry>
    <title>最新SCI期刊查询及投稿分析系统</title>
    <link href="http://example.com/2021/12/16/%E6%9C%80%E6%96%B0SCI%E6%9C%9F%E5%88%8A%E6%9F%A5%E8%AF%A2%E5%8F%8A%E6%8A%95%E7%A8%BF%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/"/>
    <id>http://example.com/2021/12/16/%E6%9C%80%E6%96%B0SCI%E6%9C%9F%E5%88%8A%E6%9F%A5%E8%AF%A2%E5%8F%8A%E6%8A%95%E7%A8%BF%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/</id>
    <published>2021-12-17T06:44:04.000Z</published>
    <updated>2021-12-17T06:53:02.686Z</updated>
    
    <content type="html"><![CDATA[<h1 id="最新SCI期刊查询及投稿分析系统"><a href="#最新SCI期刊查询及投稿分析系统" class="headerlink" title="最新SCI期刊查询及投稿分析系统"></a>最新SCI期刊查询及投稿分析系统</h1><p><a href="https://www.letpub.com.cn/">最新SCI期刊查询及投稿分析系统</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;最新SCI期刊查询及投稿分析系统&quot;&gt;&lt;a href=&quot;#最新SCI期刊查询及投稿分析系统&quot; class=&quot;headerlink&quot; title=&quot;最新SCI期刊查询及投稿分析系统&quot;&gt;&lt;/a&gt;最新SCI期刊查询及投稿分析系统&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https</summary>
      
    
    
    
    <category term="Research and Paper" scheme="http://example.com/categories/Research-and-Paper/"/>
    
    <category term="最新SCI期刊查询及投稿分析系统" scheme="http://example.com/categories/Research-and-Paper/%E6%9C%80%E6%96%B0SCI%E6%9C%9F%E5%88%8A%E6%9F%A5%E8%AF%A2%E5%8F%8A%E6%8A%95%E7%A8%BF%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="SCI期刊查询" scheme="http://example.com/tags/SCI%E6%9C%9F%E5%88%8A%E6%9F%A5%E8%AF%A2/"/>
    
  </entry>
  
  <entry>
    <title>写论文神器</title>
    <link href="http://example.com/2021/12/16/%E5%86%99%E8%AE%BA%E6%96%87%E7%A5%9E%E5%99%A8/"/>
    <id>http://example.com/2021/12/16/%E5%86%99%E8%AE%BA%E6%96%87%E7%A5%9E%E5%99%A8/</id>
    <published>2021-12-17T06:35:39.000Z</published>
    <updated>2021-12-17T06:42:50.923Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写论文神器-CTeX"><a href="#写论文神器-CTeX" class="headerlink" title="写论文神器-CTeX"></a>写论文神器-CTeX</h1><p><a href="http://www.ctex.org/CTeX">CTeX下载地址</a></p><p><a href="https://zhiqianghe.blog.csdn.net/article/details/102978653?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link">CTeX安装教程</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;写论文神器-CTeX&quot;&gt;&lt;a href=&quot;#写论文神器-CTeX&quot; class=&quot;headerlink&quot; title=&quot;写论文神器-CTeX&quot;&gt;&lt;/a&gt;写论文神器-CTeX&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://www.ctex.org/CTeX&quot;&gt;CTe</summary>
      
    
    
    
    <category term="Research and Paper" scheme="http://example.com/categories/Research-and-Paper/"/>
    
    <category term="CTeX写论文神器" scheme="http://example.com/categories/Research-and-Paper/CTeX%E5%86%99%E8%AE%BA%E6%96%87%E7%A5%9E%E5%99%A8/"/>
    
    
    <category term="CTeX" scheme="http://example.com/tags/CTeX/"/>
    
  </entry>
  
  <entry>
    <title>EmotionalTendencyPredictionUsingLSTM</title>
    <link href="http://example.com/2021/11/29/EmotionalTendencyPredictionUsingLSTM/"/>
    <id>http://example.com/2021/11/29/EmotionalTendencyPredictionUsingLSTM/</id>
    <published>2021-11-29T12:48:49.000Z</published>
    <updated>2021-11-29T12:48:49.761Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>PIL | PIL.Image.crop()</title>
    <link href="http://example.com/2021/11/22/PILImageCrop/"/>
    <id>http://example.com/2021/11/22/PILImageCrop/</id>
    <published>2021-11-22T09:27:54.000Z</published>
    <updated>2021-11-22T09:31:23.453Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PIL-Image-crop"><a href="#PIL-Image-crop" class="headerlink" title="PIL.Image.crop()"></a>PIL.Image.crop()</h1><p>程序使用PIL.Image.crop()将一张图片切割成9张小图片。</p><span id="more"></span><p><strong>show you the code:</strong></p><pre><code># -*- coding: utf-8 -*-from PIL import Imagefilename = r&#39;path of picture you want to crop&#39;img = Image.open(filename)size = img.sizeprint(size)# 准备将图片切割成9张小图片weight = int(size[0] // 3)height = int(size[1] // 3)# 切割后的小图的宽度和高度print(weight, height)for j in range(3):    for i in range(3):        box = (weight * i, height * j, weight * (i + 1), height * (j + 1))        region = img.crop(box)        region.save(&#39;&#123;&#125;&#123;&#125;.png&#39;.format(j, i))</code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;PIL-Image-crop&quot;&gt;&lt;a href=&quot;#PIL-Image-crop&quot; class=&quot;headerlink&quot; title=&quot;PIL.Image.crop()&quot;&gt;&lt;/a&gt;PIL.Image.crop()&lt;/h1&gt;&lt;p&gt;程序使用PIL.Image.crop()将一张图片切割成9张小图片。&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    <category term="第三方库" scheme="http://example.com/categories/python/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/"/>
    
    <category term="PIL" scheme="http://example.com/categories/python/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/PIL/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
    <category term="PIL" scheme="http://example.com/tags/PIL/"/>
    
  </entry>
  
</feed>
