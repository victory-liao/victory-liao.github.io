<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Victory&#39;s Blog</title>
  
  <subtitle>非淡泊无以明志，非宁静无以致远</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-03-06T07:39:37.478Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>victory-liao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>spring | 注入方式</title>
    <link href="http://example.com/2022/03/05/%E6%B3%A8%E5%85%A5%E6%96%B9%E5%BC%8F/"/>
    <id>http://example.com/2022/03/05/%E6%B3%A8%E5%85%A5%E6%96%B9%E5%BC%8F/</id>
    <published>2022-03-06T07:34:44.000Z</published>
    <updated>2022-03-06T07:39:37.478Z</updated>
    
    <content type="html"><![CDATA[<h1 id="依赖注入的两种方式"><a href="#依赖注入的两种方式" class="headerlink" title="依赖注入的两种方式"></a>依赖注入的两种方式</h1><ol><li><p>通过bean的setXxx()方法赋值</p></li><li><p>通过bean的构造器赋值</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2></li><li><p>项目目录<br><img src="/2022/03/05/%E6%B3%A8%E5%85%A5%E6%96%B9%E5%BC%8F/1.PNG"></p></li><li><p>创建Student.java</p><p>  package com.atguigu.spring.di;</p><p>  public class Student {</p><pre><code>  private Integer id;  private String name;  private Integer age;  private String sex;  private Double score;  public Double getScore() &#123;      return score;  &#125;  public void setScore(Double score) &#123;      this.score = score;  &#125;  public Integer getId() &#123;      return id;  &#125;  public void setId(Integer id) &#123;      this.id = id;  &#125;  public String getName() &#123;      return name;  &#125;  public void setName(String name) &#123;      this.name = name;  &#125;  public Integer getAge() &#123;      return age;  &#125;  public void setAge(Integer age) &#123;      this.age = age;  &#125;  public String getSex() &#123;      return sex;  &#125;  public void setSex(String sex) &#123;      this.sex = sex;  &#125;    @Override  public String toString() &#123;      return &quot;Student [id=&quot; + id + &quot;, name=&quot; + name + &quot;, age=&quot; + age + &quot;, sex=&quot; + sex + &quot;, score=&quot; + score + &quot;]&quot;;  &#125;  public Student() &#123;      super();      // TODO Auto-generated constructor stub  &#125;  public Student(Integer id, String name, Integer age, String sex) &#123;      super();      this.id = id;      this.name = name;      this.age = age;      this.sex = sex;  &#125;    public Student(Integer id, String name, Double score, String sex)&#123;      this.id = id;      this.name = name;      this.score = score;      this.sex = sex;  &#125;</code></pre><p>  }</p></li><li><p>创建beans-di.xml配置文件</p>  <?xml version="1.0" encoding="UTF-8"?><p>  &lt;beans xmlns=”<a href="http://www.springframework.org/schema/beans&quot;">http://www.springframework.org/schema/beans&quot;</a></p><pre><code>  xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;  xmlns:p=&quot;http://www.springframework.org/schema/p&quot;  xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;  &lt;bean id=&quot;s1&quot; class=&quot;com.atguigu.spring.di.Student&quot;&gt;      &lt;!-- 通过set方法注入 --&gt;      &lt;property name=&quot;id&quot; value=&quot;10010&quot;&gt;&lt;/property&gt;      &lt;property name=&quot;name&quot; value=&quot;张三&quot;&gt;&lt;/property&gt;      &lt;property name=&quot;age&quot; value=&quot;23&quot;&gt;&lt;/property&gt;      &lt;property name=&quot;sex&quot; value=&quot;男&quot;&gt;&lt;/property&gt;  &lt;/bean&gt;        &lt;bean id=&quot;s2&quot; class=&quot;com.atguigu.spring.di.Student&quot;&gt;      &lt;!-- 通过构造方法注入 --&gt;      &lt;constructor-arg value=&quot;10086&quot;&gt;&lt;/constructor-arg&gt;      &lt;constructor-arg value=&quot;李四&quot;&gt;&lt;/constructor-arg&gt;      &lt;constructor-arg value=&quot;24&quot;&gt;&lt;/constructor-arg&gt;      &lt;constructor-arg value=&quot;女&quot;&gt;&lt;/constructor-arg&gt;  &lt;/bean&gt;    &lt;bean id=&quot;s3&quot; class=&quot;com.atguigu.spring.di.Student&quot;&gt;      &lt;!-- 通过构造方法注入 --&gt;      &lt;constructor-arg value=&quot;10022&quot;&gt;&lt;/constructor-arg&gt;      &lt;constructor-arg value=&quot;王五&quot;&gt;&lt;/constructor-arg&gt;      &lt;constructor-arg value=&quot;90&quot; index=&quot;2&quot; type=&quot;java.lang.Double&quot;&gt;&lt;/constructor-arg&gt;      &lt;constructor-arg value=&quot;女&quot;&gt;&lt;/constructor-arg&gt;  &lt;/bean&gt;  &lt;!-- Namespaces勾选p（beans标签会增加内容xmlns:p=&quot;http://www.springframework.org/schema/p&quot;） --&gt;  &lt;bean id=&quot;s4&quot; class=&quot;com.atguigu.spring.di.Student&quot; p:id=&quot;10033&quot; p:name=&quot;赵六&quot; p:age=&quot;26&quot; p:sex=&quot;男&quot;&gt;&lt;/bean&gt;</code></pre>    </li><li><p>编写测试类</p><p>  package com.atguigu.spring.di;<br>  import org.springframework.context.ApplicationContext;<br>  import org.springframework.context.support.ClassPathXmlApplicationContext;</p><p>  public class Test {</p><pre><code>  public static void main(String[] args) &#123;      ApplicationContext ac = new ClassPathXmlApplicationContext(&quot;beans-di.xml&quot;);            Student s1 = ac.getBean(&quot;s1&quot;, Student.class);      Student s2 = ac.getBean(&quot;s2&quot;, Student.class);      Student s3 = ac.getBean(&quot;s3&quot;, Student.class);      Student s4 = ac.getBean(&quot;s4&quot;, Student.class);      System.out.println(s1);      System.out.println(s2);      System.out.println(s3);      System.out.println(s4);  &#125;</code></pre><p>  }</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;依赖注入的两种方式&quot;&gt;&lt;a href=&quot;#依赖注入的两种方式&quot; class=&quot;headerlink&quot; title=&quot;依赖注入的两种方式&quot;&gt;&lt;/a&gt;依赖注入的两种方式&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;通过bean的setXxx()方法赋值&lt;/p&gt;
&lt;/li&gt;
&lt;li</summary>
      
    
    
    
    <category term="java" scheme="http://example.com/categories/java/"/>
    
    <category term="框架" scheme="http://example.com/categories/java/%E6%A1%86%E6%9E%B6/"/>
    
    <category term="spring" scheme="http://example.com/categories/java/%E6%A1%86%E6%9E%B6/spring/"/>
    
    <category term="依赖注入" scheme="http://example.com/categories/java/%E6%A1%86%E6%9E%B6/spring/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/"/>
    
    <category term="依赖注入的两种方式" scheme="http://example.com/categories/java/%E6%A1%86%E6%9E%B6/spring/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    
    
    <category term="p命名空间" scheme="http://example.com/tags/p%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/"/>
    
    <category term="依赖注入的两种方式" scheme="http://example.com/tags/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>spring | spring简单案例</title>
    <link href="http://example.com/2022/01/27/spring%E7%AE%80%E5%8D%95%E6%A1%88%E4%BE%8B/"/>
    <id>http://example.com/2022/01/27/spring%E7%AE%80%E5%8D%95%E6%A1%88%E4%BE%8B/</id>
    <published>2022-01-27T11:24:34.000Z</published>
    <updated>2022-01-27T13:28:14.443Z</updated>
    
    <content type="html"><![CDATA[<h1 id="spring简单案例"><a href="#spring简单案例" class="headerlink" title="spring简单案例"></a>spring简单案例</h1><h2 id="使用软件：STS"><a href="#使用软件：STS" class="headerlink" title="使用软件：STS"></a>使用软件：STS</h2><p><a href="https://www.cnblogs.com/larryzeal/p/5800980.html">下载地址</a></p><h2 id="搭建spring运行时环境"><a href="#搭建spring运行时环境" class="headerlink" title="搭建spring运行时环境"></a>搭建spring运行时环境</h2><p>1.加入JAR包<br>1)Spring自身JAR包：spring-framework-4.0.0.RELEASE\libs目录下<br>spring-beans-4.0.0.RELEASE.jar<br>spring-context-4.0.0.RELE2ASE.jar<br>spring-core-4.0.0.RELEASE.jar<br>spring-expression-4.0.0.RELEASE.jar<br>2)commons-logging-1.1.1.jar<br>注：将以上所有的jar包复制到项目中的lib目录下并全选所有jar包–&gt;右键–&gt;build path–&gt;config bulid path<br>2.在Spring Tool Suite工具中通过如下步骤创建Spring的配置文件<br>1)File-&gt;New-&gt;Spring Bean Configuration File<br>2)为文件取名字 例如：applicationContext.xml<br><img src="/2022/01/27/spring%E7%AE%80%E5%8D%95%E6%A1%88%E4%BE%8B/1.PNG"></p><h2 id="创建一个类：Person-java"><a href="#创建一个类：Person-java" class="headerlink" title="创建一个类：Person.java"></a>创建一个类：Person.java</h2><pre><code>package com.atguigu.spring.mod;public class Person &#123;    private Integer id;    private String name;    public Integer getId() &#123;        return id;    &#125;    public void setId(Integer id) &#123;        this.id = id;    &#125;    public String getName() &#123;        return name;    &#125;    public void setName(String name) &#123;        this.name = name;    &#125;    @Override    public String toString() &#123;        return &quot;Person [id=&quot; + id + &quot;, name=&quot; + name + &quot;]&quot;;    &#125;    &#125;</code></pre><h2 id="常规方法操作对象"><a href="#常规方法操作对象" class="headerlink" title="常规方法操作对象"></a>常规方法操作对象</h2><p>创建一个测试类Test.java</p><pre><code>package com.atguigu.spring.mod;public class Test &#123;    public static void main(String[] args)&#123;        Person person = new Person();        person.setId(1);        person.setName(&quot;zhangsan&quot;);        System.out.println(person);    &#125;&#125;</code></pre><h2 id="spring管理对象"><a href="#spring管理对象" class="headerlink" title="spring管理对象"></a>spring管理对象</h2><p>1.创建applicationContext.xml</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;    xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;    &lt;!-- 命名空间 规定当前的文件里面能写什么--&gt;    &lt;!--        &lt;bean&gt;：定义spring管理的一个对象        id:该对象的唯一标识，注意不能重复,在类型获取bean的过程中可以不设置        class:该对象所属类的全限定名     --&gt;        &lt;!-- 通过反射创建对象 --&gt;    &lt;bean id=&quot;person&quot; class=&quot;com.atguigu.spring.mod.Person&quot;&gt;        &lt;!--            &lt;property&gt;:为对象的某个属性赋值            name:属性名            value:属性值         --&gt;        &lt;property name=&quot;id&quot; value=&quot;1111&quot;&gt;&lt;/property&gt;        &lt;property name=&quot;name&quot; value=&quot;小明&quot;&gt;&lt;/property&gt;    &lt;/bean&gt;    &lt;/beans&gt;</code></pre><p>2.创建一个测试类TestBySpring.java</p><pre><code>package com.atguigu.spring.mod;import org.springframework.context.ApplicationContext;import org.springframework.context.support.ClassPathXmlApplicationContext;public class TestBySpring &#123;    public static void main(String[] args) &#123;        //初始化容器        ApplicationContext ac = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);                //通过getBean()获取对象        Person person = (Person) ac.getBean(&quot;person&quot;);        System.out.println(person);    &#125;&#125;</code></pre><p><strong>注：IOC和DI</strong><br>反转控制（IOC）：对象的管理权（创建、赋值等）由程序员交给了spring容器<br>依赖注入（DI）:bean对象依赖于属性 向属性注入资源（赋值）<br>总结: IOC 就是一种反转控制的思想， 而DI是对IOC的一种具体实现。 </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;spring简单案例&quot;&gt;&lt;a href=&quot;#spring简单案例&quot; class=&quot;headerlink&quot; title=&quot;spring简单案例&quot;&gt;&lt;/a&gt;spring简单案例&lt;/h1&gt;&lt;h2 id=&quot;使用软件：STS&quot;&gt;&lt;a href=&quot;#使用软件：STS&quot; cla</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="框架" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/"/>
    
    <category term="spring" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/spring/"/>
    
    <category term="spring简单案例" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/spring/spring%E7%AE%80%E5%8D%95%E6%A1%88%E4%BE%8B/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="框架" scheme="http://example.com/tags/%E6%A1%86%E6%9E%B6/"/>
    
    <category term="spring" scheme="http://example.com/tags/spring/"/>
    
    <category term="IOC" scheme="http://example.com/tags/IOC/"/>
    
    <category term="DI" scheme="http://example.com/tags/DI/"/>
    
    <category term="控制反转" scheme="http://example.com/tags/%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC/"/>
    
    <category term="依赖注入" scheme="http://example.com/tags/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>框架 | Java中的6大框架</title>
    <link href="http://example.com/2022/01/26/Java%E4%B8%AD%E7%9A%846%E5%A4%A7%E6%A1%86%E6%9E%B6/"/>
    <id>http://example.com/2022/01/26/Java%E4%B8%AD%E7%9A%846%E5%A4%A7%E6%A1%86%E6%9E%B6/</id>
    <published>2022-01-27T04:48:39.000Z</published>
    <updated>2022-01-27T04:52:32.894Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java中的6大框架"><a href="#Java中的6大框架" class="headerlink" title="Java中的6大框架"></a>Java中的6大框架</h1><p><strong>6大框架</strong><br>1)structs1<br>2)structs2<br>3)hibernate<br>4)spring<br>5)springMVC<br>6)mybatis<br><strong>SSM</strong><br><strong>SSM=spring+springMVC+mybatis</strong><br><strong>框架分类</strong><br>MVC框架：struts1(封装了servlet),struts2(封装了filter),springMVC<br>持久层框架：hibernate,mybatis<br>整合型框架，设计型框架：spring</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Java中的6大框架&quot;&gt;&lt;a href=&quot;#Java中的6大框架&quot; class=&quot;headerlink&quot; title=&quot;Java中的6大框架&quot;&gt;&lt;/a&gt;Java中的6大框架&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;6大框架&lt;/strong&gt;&lt;br&gt;1)structs1&lt;br</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="框架" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Java中的6大框架" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/Java%E4%B8%AD%E7%9A%846%E5%A4%A7%E6%A1%86%E6%9E%B6/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="框架" scheme="http://example.com/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb项目开发 | 事务</title>
    <link href="http://example.com/2022/01/26/%E4%BA%8B%E5%8A%A1/"/>
    <id>http://example.com/2022/01/26/%E4%BA%8B%E5%8A%A1/</id>
    <published>2022-01-26T11:46:22.000Z</published>
    <updated>2022-01-26T12:09:44.946Z</updated>
    
    <content type="html"><![CDATA[<h1 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h1><p>当我们一次需要执行多条sql语句时就要考虑控制事务以避免出现一些错误。<br>例如：当我们从一个账户给另一个账户转账时，假设第一个账户的余额已经扣除，此时电脑断电了，<br>第二个账户的余额也没有增加；为了避免此类事情的发生，我们可以对事物进行控制，要么增扣除和增加都成功，<br>要么扣除、增加都失败。<br><strong>创建表user</strong></p><pre><code>CREATE TABLE user(id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,NAME VARCHAR(20),balance DOUBLE);</code></pre><p><strong>创建测试类Test1.java</strong></p><pre><code>package com.oracle.test;import java.sql.SQLException;import org.apache.commons.dbutils.QueryRunner;import com.oracle.utils.DataSourceUtils;public class Test1 &#123;    public static void main(String[] args)&#123;        try &#123;            //开启事务            DataSourceUtils.startTransaction();            //创建QueryRunner对象            QueryRunner qr = new QueryRunner();            //编写sql语句            String sql1 = &quot;update user set balance=balance-500 where id=1&quot;;            String sql2 = &quot;update user set balance=balance+500 where id=2&quot;;            //执行sql            qr.update(DataSourceUtils.getConnection(), sql1);                        //失败            int c=100/0;                        qr.update(DataSourceUtils.getConnection(), sql2);            //事务提交            DataSourceUtils.commitAndRelease();            //关闭事务            DataSourceUtils.closeConnection();        &#125; catch (Exception e) &#123;            //失败则回滚            try &#123;                DataSourceUtils.rollback();            &#125; catch (Exception e1) &#123;                // TODO Auto-generated catch block                e1.printStackTrace();            &#125;        &#125;    &#125;&#125;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;事务&quot;&gt;&lt;a href=&quot;#事务&quot; class=&quot;headerlink&quot; title=&quot;事务&quot;&gt;&lt;/a&gt;事务&lt;/h1&gt;&lt;p&gt;当我们一次需要执行多条sql语句时就要考虑控制事务以避免出现一些错误。&lt;br&gt;例如：当我们从一个账户给另一个账户转账时，假设第一个账户的余额</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="JavaWeb项目开发" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/"/>
    
    <category term="事务" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/%E4%BA%8B%E5%8A%A1/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="事务" scheme="http://example.com/tags/%E4%BA%8B%E5%8A%A1/"/>
    
    <category term="数据库" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb项目开发 | QueryRunner和数据库增删改查操作</title>
    <link href="http://example.com/2022/01/26/QueryRunner%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E6%93%8D%E4%BD%9C/"/>
    <id>http://example.com/2022/01/26/QueryRunner%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E6%93%8D%E4%BD%9C/</id>
    <published>2022-01-26T11:10:13.000Z</published>
    <updated>2022-01-26T12:02:34.184Z</updated>
    
    <content type="html"><![CDATA[<h1 id="QueryRunner和数据库增删改查操"><a href="#QueryRunner和数据库增删改查操" class="headerlink" title="QueryRunner和数据库增删改查操"></a>QueryRunner和数据库增删改查操</h1><p>基于<a href="https://victory-liao.github.io/2022/01/25/jdbc/">JavaWeb项目开发 | jdbc</a>中的配置编写以下代码实现数据库的增删改查（CRUD）。<br><strong>在test1数据库中建表dept</strong></p><pre><code>create table dept(int id primary key auto_increment not null,varchar(20) name)</code></pre><p><strong>Dept.java（JavaBean）</strong></p><pre><code>package com.oracle.bean;public class Dept &#123;    private int id;    private String name;    public Dept() &#123;        super();        // TODO Auto-generated constructor stub    &#125;    public Dept(int id, String name) &#123;        super();        this.id = id;        this.name = name;    &#125;    public int getId() &#123;        return id;    &#125;    public void setId(int id) &#123;        this.id = id;    &#125;    public String getName() &#123;        return name;    &#125;    public void setName(String name) &#123;        this.name = name;    &#125;        &#125;</code></pre><p><strong>新建一个Test类实现数据库增删改查操作</strong></p><pre><code>package com.oracle.test;import java.sql.SQLException;import java.util.List;import org.apache.commons.dbutils.QueryRunner;import org.apache.commons.dbutils.handlers.BeanHandler;import org.apache.commons.dbutils.handlers.BeanListHandler;import org.apache.commons.dbutils.handlers.ScalarHandler;import com.oracle.bean.Dept;import com.oracle.utils.DataSourceUtils;public class Test &#123;        public static void main(String[] args) throws SQLException &#123;        //创建QueryRunner对象        QueryRunner qr = new QueryRunner(DataSourceUtils.getDataSource());                //增加数据        //String sql = &quot;insert into dept(name) values(?)&quot;;        //qr.update(sql, &quot;需求部&quot;);                //修改数据        //String sql = &quot;update dept set name=? where id=?&quot;;        //qr.update(sql, &quot;需求组&quot;, 4);                //删除数据        //String sql = &quot;delete from dept where id=?&quot;;        //qr.update(sql, 4);                //查询数据        //（1）查询结果为一行        //String sql = &quot;select * from dept where id=?&quot;;        //Dept d = qr.query(sql, new BeanHandler&lt;&gt;(Dept.class), 1);        //System.out.println(d.getId());        //System.out.println(d.getName());                //（2）查询结果为多行//        String sql = &quot;select * from dept&quot;;//        List&lt;Dept&gt; list = qr.query(sql, new BeanListHandler&lt;&gt;(Dept.class));//        for(Dept d:list) &#123;//            System.out.println(d.getId());//            System.out.println(d.getName());//        &#125;                //（2）查询结果为聚合函数        String sql = &quot;select count(*) from dept&quot;;                int i = ((Long) qr.query(sql, new ScalarHandler())).intValue();                System.out.println(i);    &#125;&#125;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;QueryRunner和数据库增删改查操&quot;&gt;&lt;a href=&quot;#QueryRunner和数据库增删改查操&quot; class=&quot;headerlink&quot; title=&quot;QueryRunner和数据库增删改查操&quot;&gt;&lt;/a&gt;QueryRunner和数据库增删改查操&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="JavaWeb项目开发" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/"/>
    
    <category term="QueryRunner和数据库增删改查操作" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/QueryRunner%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E6%93%8D%E4%BD%9C/"/>
    
    
  </entry>
  
  <entry>
    <title>JavaWeb项目开发 | jdbc</title>
    <link href="http://example.com/2022/01/25/jdbc/"/>
    <id>http://example.com/2022/01/25/jdbc/</id>
    <published>2022-01-26T04:17:47.000Z</published>
    <updated>2022-01-26T12:08:56.140Z</updated>
    
    <content type="html"><![CDATA[<h1 id="jdbc"><a href="#jdbc" class="headerlink" title="jdbc"></a>jdbc</h1><p>在使用Java语言进行开发时，我们可以使用jdbc操作数据库；实际开发中我们通常直接导入数据库连接池（c3p0-0.9.1.2.jar）、<br>数据库驱动（mysql-connector-java-5.0.4-bin.jar）和简化jdbc操作的类库（commons-dbutils-1.4.jar）；并在c3p0-config.xml中配置数据库。<br><img src="/2022/01/25/jdbc/1.PNG"><br><strong>数据库配置（c3p0-config.xml）</strong><br>配置数据库的用户名、密码、驱动以及要连接的数据库<br>（本例连接用户名为root、密码为root、数据库驱动为mysql数据库驱动、连接的数据库为本地的test1数据库）</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;c3p0-config&gt;    &lt;default-config&gt;        &lt;property name=&quot;user&quot;&gt;root&lt;/property&gt;        &lt;property name=&quot;password&quot;&gt;root&lt;/property&gt;        &lt;property name=&quot;driverClass&quot;&gt;com.mysql.jdbc.Driver&lt;/property&gt;        &lt;property name=&quot;jdbcUrl&quot;&gt;jdbc:mysql://127.0.0.1:3306/test1&lt;/property&gt;    &lt;/default-config&gt; &lt;/c3p0-config&gt; </code></pre><p>注：以上三个jar包可在网上通过名称搜索自行下载。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;jdbc&quot;&gt;&lt;a href=&quot;#jdbc&quot; class=&quot;headerlink&quot; title=&quot;jdbc&quot;&gt;&lt;/a&gt;jdbc&lt;/h1&gt;&lt;p&gt;在使用Java语言进行开发时，我们可以使用jdbc操作数据库；实际开发中我们通常直接导入数据库连接池（c3p0-0.9.1.</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="JavaWeb项目开发" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/"/>
    
    <category term="jdbc封装类和数据库连接池" scheme="http://example.com/categories/Java/JavaWeb%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91/jdbc%E5%B0%81%E8%A3%85%E7%B1%BB%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="jdbc" scheme="http://example.com/tags/jdbc/"/>
    
  </entry>
  
  <entry>
    <title>MySQL | SQL语句实例大全</title>
    <link href="http://example.com/2022/01/20/SQL%E8%AF%AD%E5%8F%A5%E5%AE%9E%E4%BE%8B%E5%A4%A7%E5%85%A8/"/>
    <id>http://example.com/2022/01/20/SQL%E8%AF%AD%E5%8F%A5%E5%AE%9E%E4%BE%8B%E5%A4%A7%E5%85%A8/</id>
    <published>2022-01-21T03:39:02.000Z</published>
    <updated>2022-01-26T12:16:50.340Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SQL语句实例大全"><a href="#SQL语句实例大全" class="headerlink" title="SQL语句实例大全"></a>SQL语句实例大全</h1><p><strong>SQL语句分类</strong></p><ol><li>DDL(Data Definition Language)数据定义语言<br>用来定义数据库对象：数据库，表，列等。关键字：create, drop,alter等<br><a href="https://cloud.tencent.com/developer/article/1393524">DDL参考</a></li><li><strong>DML</strong>(Data Manipulation Language)数据操作语言<br>用来对数据库中表的数据进行增删改。关键字：insert, delete, update等 </li><li><strong>DQL</strong>(Data Query Language)数据查询语言<br>用来查询数据库中表的记录(数据)。关键字：select, where等 </li><li>DCL(Data Control Language)数据控制语言(了解)<br>用来定义数据库的访问权限和安全级别，及创建用户。关键字：GRANT， REVOKE等<br>注：重点关注DML、DQL；实际开发中我们可以使用数据库软件来创建数据库、表、列等（DDL了解即可）；DCL为DBA关注的事情。<span id="more"></span></li></ol><p><strong>DML Test</strong></p><pre><code>CREATE TABLE student1(id INT,NAME VARCHAR(20),birthday DATE)INSERT INTO student1 (id,NAME,birthday) VALUES(1,&#39;zhangsan&#39;, &#39;2022-1-20&#39;)INSERT INTO student1 VALUES(2,&#39;lisi&#39;,&#39;2022-1-2&#39;)INSERT INTO student1 VALUES(3,&#39;wangmazi&#39;,&#39;2022-1-3&#39;),(4,&#39;zhaoliu&#39;,&#39;2012-1-2&#39;)INSERT INTO student1 (id,NAME) VALUES(5, &#39;sunqi&#39;)UPDATE student1 SET NAME=&#39;lisi&#39;UPDATE student1 SET birthday=&#39;1998-1-1&#39; WHERE id=5UPDATE student1 SET id=1,NAME=&#39;zhangsan&#39; WHERE id=1DELETE FROM student1DELETE FROM student1 WHERE id=5SELECT * FROM student1SELECT id,NAME,birthday FROM student1SELECT NAME FROM student1</code></pre><p><strong>DQL Test</strong></p><pre><code>CREATE TABLE student3 ( id INT, NAME VARCHAR(20),age INT, sex VARCHAR(5), address VARCHAR(100), math INT, english INT )INSERT INTO student3(id,NAME,age,sex,address,math,english) VALUES (1,&#39;马云&#39;,55,&#39;男&#39;,&#39;杭 州&#39;,66,78),(2,&#39;马化腾&#39;,45,&#39;女&#39;,&#39;深圳&#39;,98,87),(3,&#39;马景涛&#39;,55,&#39;男&#39;,&#39;香港&#39;,56,77),(4,&#39;柳 岩&#39;,20,&#39;女&#39;,&#39;湖南&#39;,76,65),(5,&#39;柳青&#39;,20,&#39;男&#39;,&#39;湖南&#39;,86,NULL),(6,&#39;刘德华&#39;,57,&#39;男&#39;,&#39;香 港&#39;,99,99),(7,&#39;马德&#39;,22,&#39;女&#39;,&#39;香港&#39;,99,99),(8,&#39;德玛西亚&#39;,18,&#39;男&#39;,&#39;南京&#39;,56,65)SELECT * FROM student3 WHERE math&gt;80SELECT * FROM student3 WHERE english&lt;=80SELECT * FROM student3 WHERE age=20SELECT * FROM student3 WHERE age!=20SELECT * FROM student3 WHERE age&lt;&gt;20SELECT * FROM student3 WHERE age&gt;35 AND sex=&#39;男&#39;SELECT * FROM student3 WHERE age&gt;35 &amp;&amp; sex=&#39;男&#39;SELECT * FROM student3 WHERE age&gt;35 OR sex=&#39;男&#39;SELECT * FROM student3 WHERE age&gt;35 || sex=&#39;男&#39;SELECT * FROM student3 WHERE id=1 OR id=3 OR id=5SELECT * FROM student3 WHERE NAME LIKE &#39;马%&#39;SELECT * FROM student3 WHERE NAME LIKE &#39;%德%&#39;SELECT * FROM student3 WHERE NAME LIKE &#39;马__&#39;SELECT COUNT(*) FROM student3SELECT COUNT(*) FROM student3 WHERE age&gt;40SELECT SUM(math) FROM student3 SELECT AVG(math) FROM student3SELECT MAX(math) FROM student3SELECT MIN(math) FROM student3INSERT INTO student3(id,NAME,age,sex,address,math,english) VALUES (9,&#39;唐僧&#39;,25,&#39;男&#39;,&#39;长安&#39;,87,78), (10,&#39;孙悟空&#39;,18,&#39;男&#39;,&#39;花果山&#39;,100,66), (11,&#39;猪八戒&#39;,22,&#39;男&#39;,&#39;高老庄&#39;,58,78), (12,&#39;沙僧&#39;,50,&#39;男&#39;,&#39;流沙河&#39;,77,88), (13,&#39;白骨精&#39;,22,&#39;女&#39;,&#39;白虎岭&#39;,66,66), (14,&#39;蜘蛛精&#39;,23,&#39;女&#39;,&#39;盘丝洞&#39;,88,88)SELECT * FROM student3 LIMIT 2,6SELECT * FROM student3 LIMIT 0,5SELECT * FROM student3 LIMIT 5</code></pre><p><strong>主键</strong></p><pre><code>CREATE TABLE st5(id INT PRIMARY KEY,NAME VARCHAR(20),age INT)INSERT INTO st5 (id, NAME) VALUES (1, &#39;唐伯虎&#39;),(2, &#39;周文宾&#39;),(3, &#39;祝枝山&#39;),(4, &#39;文征明&#39;)INSERT INTO st5 (id, NAME) VALUES (1, &#39;文征明2&#39;)INSERT INTO st5 (id, NAME) VALUES (NULL, &#39;文征明3&#39;)ALTER TABLE st5 DROP PRIMARY KEY</code></pre><p><strong>主键自增</strong></p><pre><code>CREATE TABLE st6(id INT PRIMARY KEY AUTO_INCREMENT,NAME VARCHAR(20),age INT)INSERT INTO st6(NAME,age) VALUES(&#39;唐僧&#39;,22)INSERT INTO st6(NAME,age) VALUES(&#39;孙悟空&#39;,26)INSERT INTO st6 (NAME, age) VALUES (&#39;猪八戒&#39;, 25)INSERT INTO st6 (NAME, age) VALUES (&#39;沙僧&#39;, 20)</code></pre><p><strong>外键和级联</strong></p><pre><code>CREATE TABLE department ( id INT PRIMARY KEY AUTO_INCREMENT, dep_name VARCHAR(20), dep_location VARCHAR(20) )CREATE TABLE employee(id INT PRIMARY KEY AUTO_INCREMENT,NAME VARCHAR(30),age INT,dep_id INT,CONSTRAINT employee_depid_ref_department_id_fk FOREIGN KEY(dep_id) REFERENCES department(id) ON UPDATE CASCADE ON DELETE CASCADE )INSERT INTO department (dep_name, dep_location) VALUES (&#39;研发部&#39;, &#39;广州&#39;), (&#39;销售部&#39;, &#39;深圳&#39;)INSERT INTO employee (NAME, age, dep_id) VALUES (&#39;张三&#39;, 20, 1), (&#39;李四&#39;, 21, 1), (&#39;王五&#39;, 20, 1), (&#39;老王&#39;, 20, 2), (&#39;大王&#39;, 22, 2), (&#39;小王&#39;, 18, 2)INSERT INTO employee (NAME, age, dep_id) VALUES (&#39;二王&#39;, 20, 5)INSERT INTO employee (NAME, age, dep_id) VALUES (&#39;二王&#39;, 20, 1)INSERT INTO employee (NAME, age, dep_id) VALUES (&#39;张三&#39;, 20, 1),(&#39;李四&#39;, 21, 1),(&#39;王五&#39;, 20, 1),(&#39;老王&#39;, 20, 2),(&#39;大王&#39;, 22, 2),(&#39;小王&#39;, 18, 2)UPDATE department SET id=10 WHERE id=1DELETE FROM department WHERE id=2</code></pre><p><strong>多表查询：内外连接</strong></p><pre><code>CREATE TABLE dept(id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,NAME VARCHAR(20))CREATE TABLE emp(id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,NAME VARCHAR(20),gender CHAR(1),salary DOUBLE,join_date DATE,dept_id INT,CONSTRAINT emp_deptid_ref_dept_id_fk FOREIGN KEY (dept_id) REFERENCES dept(id) ON DELETE CASCADE ON UPDATE CASCADE)SELECT * FROM emp, dept WHERE emp.`dept_id`=dept.`id`SELECT * FROM emp INNER JOIN dept ON emp.`dept_id`=dept.`id`SELECT * FROM emp LEFT OUTER JOIN dept ON emp.`dept_id`=dept.`id` AND emp.`gender`=&#39;男&#39;SELECT * FROM dept RIGHT OUTER JOIN emp ON emp.`dept_id`=dept.`id` AND emp.`gender`=&#39;男&#39;</code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;SQL语句实例大全&quot;&gt;&lt;a href=&quot;#SQL语句实例大全&quot; class=&quot;headerlink&quot; title=&quot;SQL语句实例大全&quot;&gt;&lt;/a&gt;SQL语句实例大全&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;SQL语句分类&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;DDL(Data Definition Language)数据定义语言&lt;br&gt;用来定义数据库对象：数据库，表，列等。关键字：create, drop,alter等&lt;br&gt;&lt;a href=&quot;https://cloud.tencent.com/developer/article/1393524&quot;&gt;DDL参考&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DML&lt;/strong&gt;(Data Manipulation Language)数据操作语言&lt;br&gt;用来对数据库中表的数据进行增删改。关键字：insert, delete, update等 &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DQL&lt;/strong&gt;(Data Query Language)数据查询语言&lt;br&gt;用来查询数据库中表的记录(数据)。关键字：select, where等 &lt;/li&gt;
&lt;li&gt;DCL(Data Control Language)数据控制语言(了解)&lt;br&gt;用来定义数据库的访问权限和安全级别，及创建用户。关键字：GRANT， REVOKE等&lt;br&gt;注：重点关注DML、DQL；实际开发中我们可以使用数据库软件来创建数据库、表、列等（DDL了解即可）；DCL为DBA关注的事情。&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="MySQL" scheme="http://example.com/categories/MySQL/"/>
    
    <category term="SQL语句实例大全" scheme="http://example.com/categories/MySQL/SQL%E8%AF%AD%E5%8F%A5%E5%AE%9E%E4%BE%8B%E5%A4%A7%E5%85%A8/"/>
    
    
    <category term="MySQL" scheme="http://example.com/tags/MySQL/"/>
    
    <category term="SQL语句" scheme="http://example.com/tags/SQL%E8%AF%AD%E5%8F%A5/"/>
    
  </entry>
  
  <entry>
    <title>MySQL | 内连接和外连接的区别</title>
    <link href="http://example.com/2022/01/19/MySQL%E5%86%85%E8%BF%9E%E6%8E%A5%E5%92%8C%E5%A4%96%E8%BF%9E%E6%8E%A5%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://example.com/2022/01/19/MySQL%E5%86%85%E8%BF%9E%E6%8E%A5%E5%92%8C%E5%A4%96%E8%BF%9E%E6%8E%A5%E7%9A%84%E5%8C%BA%E5%88%AB/</id>
    <published>2022-01-20T06:47:11.000Z</published>
    <updated>2022-01-20T06:51:40.283Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内连接和外连接的区别"><a href="#内连接和外连接的区别" class="headerlink" title="内连接和外连接的区别"></a>内连接和外连接的区别</h1><p><strong>区别：</strong><br>内连接（inner join）：取出两张表中匹配到的数据，匹配不到的不保留<br>外连接（outer join）：取出连接表中匹配到的数据，匹配不到的也会保留，其值为NULL</p><p><a href="https://blog.csdn.net/johnhan9/article/details/88686288">参考资料</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;内连接和外连接的区别&quot;&gt;&lt;a href=&quot;#内连接和外连接的区别&quot; class=&quot;headerlink&quot; title=&quot;内连接和外连接的区别&quot;&gt;&lt;/a&gt;内连接和外连接的区别&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;区别：&lt;/strong&gt;&lt;br&gt;内连接（inner join</summary>
      
    
    
    
    <category term="MySQL" scheme="http://example.com/categories/MySQL/"/>
    
    <category term="内连接和外连接的区别" scheme="http://example.com/categories/MySQL/%E5%86%85%E8%BF%9E%E6%8E%A5%E5%92%8C%E5%A4%96%E8%BF%9E%E6%8E%A5%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    
    
    <category term="MySQL" scheme="http://example.com/tags/MySQL/"/>
    
    <category term="内连接" scheme="http://example.com/tags/%E5%86%85%E8%BF%9E%E6%8E%A5/"/>
    
    <category term="外连接" scheme="http://example.com/tags/%E5%A4%96%E8%BF%9E%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>基于JavaWeb的网上购物商城 | 我的订单</title>
    <link href="http://example.com/2022/01/17/%E6%88%91%E7%9A%84%E8%AE%A2%E5%8D%95/"/>
    <id>http://example.com/2022/01/17/%E6%88%91%E7%9A%84%E8%AE%A2%E5%8D%95/</id>
    <published>2022-01-18T06:52:42.000Z</published>
    <updated>2022-01-18T10:14:10.150Z</updated>
    
    <content type="html"><![CDATA[<h1 id="我的订单"><a href="#我的订单" class="headerlink" title="我的订单"></a>我的订单</h1><p><strong>实现功能：</strong><br>当用户点击”我的订单时“展示用户提交过的所有订单信息、购买商品信息等。<br><img src="/2022/01/17/%E6%88%91%E7%9A%84%E8%AE%A2%E5%8D%95/1.PNG"></p><span id="more"></span><p><strong>header.jsp</strong><br>更改”我的订单”链接的地址。</p><pre><code>&lt;div class=&quot;col-md-3&quot; style=&quot;padding-top:20px&quot;&gt;    &lt;ol class=&quot;list-inline&quot;&gt;        &lt;c:if test=&quot;$&#123;empty user&#125;&quot;&gt;            &lt;li&gt;&lt;a href=&quot;login.jsp&quot;&gt;登录&lt;/a&gt;&lt;/li&gt;            &lt;li&gt;&lt;a href=&quot;register.jsp&quot;&gt;注册&lt;/a&gt;&lt;/li&gt;        &lt;/c:if&gt;        &lt;c:if test=&quot;$&#123;not empty user&#125;&quot;&gt;            &lt;li&gt;$&#123;user.username&#125;&lt;/li&gt;            &lt;li&gt;&lt;a href=&quot;cart.jsp&quot;&gt;购物车&lt;/a&gt;&lt;/li&gt;            &lt;li&gt;&lt;a href=&quot;$&#123;pageContext.request.contextPath&#125;/product?method=myOrder&quot;&gt;我的订单&lt;/a&gt;&lt;/li&gt;        &lt;/c:if&gt;    &lt;/ol&gt;&lt;/div&gt;</code></pre><p><strong>ProductServlet.java</strong><br>在ProductServlet的doGet方法中添加myOrder的判断并完成myOrder方法。</p><pre><code>public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;    String method = request.getParameter(&quot;method&quot;);    if(&quot;getProById&quot;.equals(method)) &#123;        getProById(request, response);    &#125;else if(&quot;findListByCate&quot;.equals(method)) &#123;        findListByCate(request, response);    &#125;else if(&quot;cart&quot;.equals(method)) &#123;        cart(request, response);    &#125;else if(&quot;delCart&quot;.equals(method)) &#123;        delCart(request, response);    &#125;else if(&quot;clearCart&quot;.equals(method)) &#123;        clearCart(request, response);    &#125;else if(&quot;showOrder&quot;.equals(method)) &#123;        showOrder(request, response);    &#125;else if(&quot;submitOrder&quot;.equals(method)) &#123;        submitOrder(request, response);    &#125;else if(&quot;myOrder&quot;.equals(method)) &#123;        myOrder(request, response);    &#125;&#125;public void myOrder(HttpServletRequest request, HttpServletResponse response) &#123;    // TODO Auto-generated method stub    try &#123;        User user = (User)request.getSession().getAttribute(&quot;user&quot;);        String uid = user.getUid();                ProductService ps = new ProductService();        List&lt;Order&gt; list = ps.findOrderList(uid);                //循环读出item项        for(Order o:list) &#123;            List&lt;OrderItem&gt; arr = ps.findItemList(o.getOid());                        for(OrderItem oo:arr) &#123;                Product pro = ps.getProById(oo.getPid());                oo.setPro(pro);            &#125;            o.setList(arr);        &#125;                //返回到订单列表页面        request.setAttribute(&quot;list&quot;, list);        try &#123;            request.getRequestDispatcher(&quot;/order_list.jsp&quot;).forward(request, response);        &#125; catch (Exception e) &#123;            // TODO Auto-generated catch block            e.printStackTrace();        &#125;     &#125; catch (SQLException e) &#123;        // TODO Auto-generated catch block        e.printStackTrace();    &#125;&#125;</code></pre><p><strong>ProductService.java</strong><br>在ProductService中添加findOrderList、findItemList方法。</p><pre><code>public List&lt;Order&gt; findOrderList(String uid) throws SQLException &#123;    // TODO Auto-generated method stub    ProductDao pd = new ProductDao();    List&lt;Order&gt; list = pd.findOrderList(uid);    return list;&#125;public List&lt;OrderItem&gt; findItemList(String oid) throws SQLException &#123;    // TODO Auto-generated method stub    ProductDao pd = new ProductDao();    List&lt;OrderItem&gt; list = pd.findItemList(oid);    return list;&#125;</code></pre><p><strong>ProductDao.java</strong><br>在ProductDao中添加findOrderList、findItemList方法。</p><pre><code>public List&lt;Order&gt; findOrderList(String uid) throws SQLException &#123;    // TODO Auto-generated method stub    QueryRunner qr = new QueryRunner(DataSourceUtils.getDataSource());        String sql = &quot;select * from orders where uid=? order by ordertime desc&quot;;        List&lt;Order&gt; list = qr.query(sql, new BeanListHandler&lt;&gt;(Order.class), uid);    return list;&#125;public List&lt;OrderItem&gt; findItemList(String oid) throws SQLException &#123;    // TODO Auto-generated method stub    QueryRunner qr = new QueryRunner(DataSourceUtils.getDataSource());        String sql = &quot;select * from orderitem where oid=?&quot;;        List&lt;OrderItem&gt; list = qr.query(sql, new BeanListHandler&lt;&gt;(OrderItem.class), oid);    return list;&#125;</code></pre><p><strong>order_list.jsp</strong><br>在order_list.jsp页面解析所有订单。</p><pre><code>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;    pageEncoding=&quot;UTF-8&quot;%&gt;&lt;%@taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;&lt;title&gt;会员登录&lt;/title&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;css/bootstrap.min.css&quot; type=&quot;text/css&quot; /&gt;&lt;script src=&quot;js/jquery-1.11.3.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;script src=&quot;js/bootstrap.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;!-- 引入自定义css文件 style.css --&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;css/style.css&quot; type=&quot;text/css&quot; /&gt;&lt;style&gt;body &#123;    margin-top: 20px;    margin: 0 auto;&#125;.carousel-inner .item img &#123;    width: 100%;    height: 300px;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;!-- 引入header.jsp --&gt;    &lt;jsp:include page=&quot;/header.jsp&quot;&gt;&lt;/jsp:include&gt;    &lt;div class=&quot;container&quot;&gt;        &lt;div class=&quot;row&quot;&gt;            &lt;div style=&quot;margin: 0 auto; margin-top: 10px; width: 950px;&quot;&gt;                &lt;strong&gt;我的订单&lt;/strong&gt;                &lt;table class=&quot;table table-bordered&quot;&gt;                    &lt;tbody&gt;                        &lt;c:forEach items=&quot;$&#123;list&#125;&quot; var=&quot;orders&quot;&gt;                                &lt;tr class=&quot;success&quot;&gt;                                    &lt;th colspan=&quot;2&quot;&gt;订单编号:$&#123;orders.oid&#125;&lt;/th&gt;                                    &lt;th colspan=&quot;2&quot; style=&quot;text-align:center&quot;&gt;订单时间:$&#123;orders.ordertime&#125;&lt;/th&gt;                                    &lt;th colspan=&quot;1&quot; &gt;是否支付:                                        &lt;c:if test=&quot;$&#123;orders.state==1&#125;&quot;&gt;已支付&lt;/c:if&gt;                                        &lt;c:if test=&quot;$&#123;orders.state==0&#125;&quot;&gt;未支付&lt;/c:if&gt;                                    &lt;/th&gt;                                &lt;/tr&gt;                                &lt;tr class=&quot;warning&quot;&gt;                                    &lt;th&gt;图片&lt;/th&gt;                                    &lt;th&gt;商品&lt;/th&gt;                                    &lt;th&gt;价格&lt;/th&gt;                                    &lt;th&gt;数量&lt;/th&gt;                                    &lt;th&gt;小计&lt;/th&gt;                                &lt;/tr&gt;                                &lt;c:forEach items=&quot;$&#123;orders.list&#125;&quot; var=&quot;item&quot;&gt;                                    &lt;tr class=&quot;active&quot;&gt;                                        &lt;td width=&quot;60&quot; width=&quot;40%&quot;&gt;&lt;input type=&quot;hidden&quot; name=&quot;id&quot;                                            value=&quot;22&quot;&gt; &lt;img src=&quot;$&#123;pageContext.request.contextPath&#125;/$&#123;item.pro.pimage&#125;&quot; width=&quot;70&quot;                                            height=&quot;60&quot;&gt;&lt;/td&gt;                                        &lt;td width=&quot;30%&quot;&gt;&lt;a target=&quot;_blank&quot;&gt;$&#123;item.pro.pname&#125;&lt;/a&gt;&lt;/td&gt;                                        &lt;td width=&quot;20%&quot;&gt;￥$&#123;item.pro.shop_price&#125;&lt;/td&gt;                                        &lt;td width=&quot;10%&quot;&gt;$&#123;item.count&#125;&lt;/td&gt;                                        &lt;td width=&quot;15%&quot;&gt;&lt;span class=&quot;subtotal&quot;&gt;￥$&#123;item.subtotal&#125;&lt;/span&gt;&lt;/td&gt;                                    &lt;/tr&gt;                                &lt;/c:forEach&gt;                                                        &lt;/c:forEach&gt;                                            &lt;/tbody&gt;                &lt;/table&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div style=&quot;text-align: center;&quot;&gt;            &lt;ul class=&quot;pagination&quot;&gt;                &lt;li class=&quot;disabled&quot;&gt;&lt;a href=&quot;#&quot; aria-label=&quot;Previous&quot;&gt;&lt;span                        aria-hidden=&quot;true&quot;&gt;&amp;laquo;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;                &lt;li class=&quot;active&quot;&gt;&lt;a href=&quot;#&quot;&gt;1&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;2&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;3&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;4&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;5&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;6&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;7&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;8&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;9&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a href=&quot;#&quot; aria-label=&quot;Next&quot;&gt; &lt;span aria-hidden=&quot;true&quot;&gt;&amp;raquo;&lt;/span&gt;                &lt;/a&gt;&lt;/li&gt;            &lt;/ul&gt;        &lt;/div&gt;    &lt;/div&gt;    &lt;!-- 引入footer.jsp --&gt;    &lt;jsp:include page=&quot;/footer.jsp&quot;&gt;&lt;/jsp:include&gt;    &lt;/body&gt;&lt;/html&gt;</code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;我的订单&quot;&gt;&lt;a href=&quot;#我的订单&quot; class=&quot;headerlink&quot; title=&quot;我的订单&quot;&gt;&lt;/a&gt;我的订单&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;实现功能：&lt;/strong&gt;&lt;br&gt;当用户点击”我的订单时“展示用户提交过的所有订单信息、购买商品信息等。&lt;br&gt;&lt;img src=&quot;/2022/01/17/%E6%88%91%E7%9A%84%E8%AE%A2%E5%8D%95/1.PNG&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="项目经历" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/"/>
    
    <category term="JavaWeb" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/"/>
    
    <category term="基于JavaWeb的网上购物商城" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/"/>
    
    <category term="我的订单" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/%E6%88%91%E7%9A%84%E8%AE%A2%E5%8D%95/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
    <category term="基于JavaWeb的网上购物商城" scheme="http://example.com/tags/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/"/>
    
    <category term="我的订单" scheme="http://example.com/tags/%E6%88%91%E7%9A%84%E8%AE%A2%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>基于JavaWeb的网上购物商城 | 确认订单</title>
    <link href="http://example.com/2022/01/17/%E7%A1%AE%E8%AE%A4%E8%AE%A2%E5%8D%95/"/>
    <id>http://example.com/2022/01/17/%E7%A1%AE%E8%AE%A4%E8%AE%A2%E5%8D%95/</id>
    <published>2022-01-18T06:40:57.000Z</published>
    <updated>2022-01-18T07:26:21.203Z</updated>
    
    <content type="html"><![CDATA[<h1 id="确认订单"><a href="#确认订单" class="headerlink" title="确认订单"></a>确认订单</h1><p><strong>实现功能：</strong><br>用户在购物车页面点击“确认订单”，在数据库将之前提交的订单的状态改为已支付，并向数据库写入收货人、收获地址、电话等信息;<br>确认订单后跳转到我的订单页面。<br><img src="/2022/01/17/%E7%A1%AE%E8%AE%A4%E8%AE%A2%E5%8D%95/1.PNG"></p><span id="more"></span><p><strong>order_info.jsp</strong><br>修改order_info.jsp中的以下代码，当点击”确认订单“时将表单信息提交。</p><pre><code>&lt;form class=&quot;form-horizontal&quot; id=&quot;form&quot; method=&quot;post&quot; action=&quot;$&#123;pageContext.request.contextPath&#125;/product&quot;    style=&quot;margin-top: 5px; margin-left: 150px;&quot;&gt;    &lt;input type=&quot;hidden&quot; name=&quot;method&quot; value=&quot;submitOrder&quot;&gt;    &lt;input type=&quot;hidden&quot; name=&quot;oid&quot; value=&quot;$&#123;order.oid&#125;&quot;&gt;    &lt;div class=&quot;form-group&quot;&gt;        &lt;label for=&quot;username&quot; class=&quot;col-sm-1 control-label&quot;&gt;地址&lt;/label&gt;        &lt;div class=&quot;col-sm-5&quot;&gt;            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; name=&quot;address&quot; id=&quot;username&quot;                placeholder=&quot;请输入收货地址&quot;&gt;        &lt;/div&gt;    &lt;/div&gt;    &lt;div class=&quot;form-group&quot;&gt;        &lt;label for=&quot;inputPassword3&quot; class=&quot;col-sm-1 control-label&quot;&gt;收货人&lt;/label&gt;        &lt;div class=&quot;col-sm-5&quot;&gt;            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; name=&quot;username&quot; id=&quot;inputPassword3&quot;                placeholder=&quot;请输收货人&quot;&gt;        &lt;/div&gt;    &lt;/div&gt;    &lt;div class=&quot;form-group&quot;&gt;        &lt;label for=&quot;confirmpwd&quot; class=&quot;col-sm-1 control-label&quot;&gt;电话&lt;/label&gt;        &lt;div class=&quot;col-sm-5&quot;&gt;            &lt;input type=&quot;text&quot; name=&quot;phone&quot; class=&quot;form-control&quot; id=&quot;confirmpwd&quot;                placeholder=&quot;请输入联系方式&quot;&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;/form&gt;&lt;hr /&gt;&lt;div style=&quot;margin-top: 5px; margin-left: 150px;&quot;&gt;            &lt;hr /&gt;    &lt;p style=&quot;text-align: right; margin-right: 100px;&quot;&gt;        &lt;a href=&quot;#&quot; onclick=&quot;submitOrder()&quot;&gt;            &lt;img src=&quot;./images/finalbutton.gif&quot; width=&quot;204&quot; height=&quot;51&quot;            border=&quot;0&quot; /&gt;        &lt;/a&gt;    &lt;/p&gt;    &lt;hr /&gt;&lt;/div&gt;</code></pre><p><strong>ProductServlet.java</strong><br>在ProductServlet的doGet方法中添加submitOrder的判断并完成submitOrder方法。</p><pre><code>public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;    String method = request.getParameter(&quot;method&quot;);    if(&quot;getProById&quot;.equals(method)) &#123;        getProById(request, response);    &#125;else if(&quot;findListByCate&quot;.equals(method)) &#123;        findListByCate(request, response);    &#125;else if(&quot;cart&quot;.equals(method)) &#123;        cart(request, response);    &#125;else if(&quot;delCart&quot;.equals(method)) &#123;        delCart(request, response);    &#125;else if(&quot;clearCart&quot;.equals(method)) &#123;        clearCart(request, response);    &#125;else if(&quot;showOrder&quot;.equals(method)) &#123;        showOrder(request, response);    &#125;else if(&quot;submitOrder&quot;.equals(method)) &#123;        submitOrder(request, response);    &#125;&#125;public void submitOrder(HttpServletRequest request, HttpServletResponse response) &#123;    // TODO Auto-generated method stub    try &#123;        String oid = request.getParameter(&quot;oid&quot;);        System.out.println(&quot;oid&quot; + oid);        String username = request.getParameter(&quot;username&quot;);        String address = request.getParameter(&quot;address&quot;);        String phone = request.getParameter(&quot;phone&quot;);                Order order = new Order();                order.setAddress(address);        order.setName(username);        order.setTelephone(phone);        order.setOid(oid);                ProductService ps = new ProductService();        ps.updateOrder(order);                HttpSession session = request.getSession();        session.removeAttribute(&quot;cart&quot;);        session.removeAttribute(&quot;orders&quot;);                response.sendRedirect(request.getContextPath() + &quot;/product?method=myOrder&quot;);    &#125; catch (Exception e) &#123;        // TODO Auto-generated catch block        e.printStackTrace();    &#125;&#125;</code></pre><p><strong>ProductService.java</strong><br>在ProductService中添加updateOrder方法。</p><pre><code>public void updateOrder(Order order) throws SQLException &#123;    // TODO Auto-generated method stub    ProductDao pd = new ProductDao();    pd.updateOrder(order);&#125;</code></pre><p><strong>ProductDao.java</strong><br>在ProductDao中添加updateOrder方法。</p><pre><code>public void updateOrder(Order order) throws SQLException &#123;    // TODO Auto-generated method stub    QueryRunner qr = new QueryRunner(DataSourceUtils.getDataSource());        String sql = &quot;update orders set address=?,name=?,telephone=?,state=1 where oid=?&quot;;        System.out.println(order.getOid());        qr.update(sql, order.getAddress(), order.getName(), order.getTelephone(), order.getOid());&#125;</code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;确认订单&quot;&gt;&lt;a href=&quot;#确认订单&quot; class=&quot;headerlink&quot; title=&quot;确认订单&quot;&gt;&lt;/a&gt;确认订单&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;实现功能：&lt;/strong&gt;&lt;br&gt;用户在购物车页面点击“确认订单”，在数据库将之前提交的订单的状态改为已支付，并向数据库写入收货人、收获地址、电话等信息;&lt;br&gt;确认订单后跳转到我的订单页面。&lt;br&gt;&lt;img src=&quot;/2022/01/17/%E7%A1%AE%E8%AE%A4%E8%AE%A2%E5%8D%95/1.PNG&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="项目经历" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/"/>
    
    <category term="JavaWeb" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/"/>
    
    <category term="基于JavaWeb的网上购物商城" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/"/>
    
    <category term="确认订单" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/%E7%A1%AE%E8%AE%A4%E8%AE%A2%E5%8D%95/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
    <category term="基于JavaWeb的网上购物商城" scheme="http://example.com/tags/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/"/>
    
    <category term="确认订单" scheme="http://example.com/tags/%E7%A1%AE%E8%AE%A4%E8%AE%A2%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>leetcode | 二叉树的最小深度</title>
    <link href="http://example.com/2022/01/16/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%B0%8F%E6%B7%B1%E5%BA%A6/"/>
    <id>http://example.com/2022/01/16/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%B0%8F%E6%B7%B1%E5%BA%A6/</id>
    <published>2022-01-17T04:40:28.000Z</published>
    <updated>2022-01-17T04:54:12.327Z</updated>
    
    <content type="html"><![CDATA[<h1 id="二叉树的最小深度"><a href="#二叉树的最小深度" class="headerlink" title="二叉树的最小深度"></a>二叉树的最小深度</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个二叉树，找出其最小深度。<br>最小深度是从根节点到最近叶子节点的最短路径上的节点数量。<br>说明：叶子节点是指没有子节点的节点。</p><p><a href="https://leetcode-cn.com/problems/minimum-depth-of-binary-tree/">题目链接</a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>方法一：深度优先搜索<br>首先可以想到使用深度优先搜索的方法，遍历整棵树，记录最小深度。<br>对于每一个非叶子节点，我们只需要分别计算其左右子树的最小叶子节点深度。这样就将一个大问题转化为了小问题，可以递归地解决该问题。<br>方法二：广度优先搜索<br>使用广度优先搜索的方法，遍历整棵树。<br>当我们找到一个叶子节点时，直接返回这个叶子节点的深度。广度优先搜索的性质保证了最先搜索到的叶子节点的深度一定最小。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre><code># Definition for a binary tree node.import collectionsclass TreeNode(object):    def __init__(self, val=0, left=None, right=None):        self.val = val        self.left = left        self.right = rightclass Solution(object):    def minDepth(self, root):        &quot;&quot;&quot;        深度优先搜索        :type root: TreeNode        :rtype: int        &quot;&quot;&quot;        def get_depth(root):            if root is None:                return 0            left_depth = get_depth(root.right)            right_depth = get_depth(root.left)            return min(right_depth, left_depth) + 1        return get_depth(root)    def minDepth1(self, root):        &quot;&quot;&quot;深度优先搜索&quot;&quot;&quot;        if not root:            return 0        if not root.left and not root.right:            return 1        min_depth = 10 ** 9        if root.left:            min_depth = min(self.minDepth1(root.left), min_depth)        if root.right:            min_depth = min(self.minDepth1(root.right), min_depth)        return min_depth + 1    def minDepth2(self, root):        &quot;&quot;&quot;深度优先搜索&quot;&quot;&quot;        if not root:            return 0        que = collections.deque([(root, 1)])        while que:            node, depth = que.popleft()            if not node.left and not node.right:                return depth            if node.left:                que.append((node.left, depth + 1))            if node.right:                que.append((node.right, depth + 1))        return 0    def create_binary_tree(self, nodes_list):        node1 = TreeNode(nodes_list[1])        node3 = TreeNode(nodes_list[3])        node4 = TreeNode(nodes_list[4])        node2 = TreeNode(nodes_list[2], node3, node4)        root = TreeNode(nodes_list[0], node1, node2)        return rootif __name__ == &quot;__main__&quot;:    slt = Solution()    root = slt.create_binary_tree([3, 9, 20, 15, 7])    print(slt.minDepth(root))</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;二叉树的最小深度&quot;&gt;&lt;a href=&quot;#二叉树的最小深度&quot; class=&quot;headerlink&quot; title=&quot;二叉树的最小深度&quot;&gt;&lt;/a&gt;二叉树的最小深度&lt;/h1&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="算法刷题" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/"/>
    
    <category term="leetcode" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/"/>
    
    <category term="树" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%A0%91/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="二叉树" scheme="http://example.com/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>基于JavaWeb的网上购物商城 | 提交订单</title>
    <link href="http://example.com/2022/01/15/%E6%8F%90%E4%BA%A4%E8%AE%A2%E5%8D%95/"/>
    <id>http://example.com/2022/01/15/%E6%8F%90%E4%BA%A4%E8%AE%A2%E5%8D%95/</id>
    <published>2022-01-16T06:01:22.000Z</published>
    <updated>2022-01-16T08:18:25.724Z</updated>
    
    <content type="html"><![CDATA[<h1 id="提交订单"><a href="#提交订单" class="headerlink" title="提交订单"></a>提交订单</h1><p><strong>实现功能：</strong><br>用户在购物车页面点击“提交订单”，向数据库中写入用户信息、购买的商品、数量等。</p><span id="more"></span><p><strong>cart.jsp</strong><br>为提交订单链接添加onclick属性并完成showOrder()方法。</p><pre><code>&lt;div style=&quot;text-align:right;margin-top:10px;margin-bottom:10px;&quot;&gt;    &lt;a href=&quot;#&quot; id=&quot;clear&quot; class=&quot;clear&quot; onclick=&quot;clearCart()&quot;&gt;清空购物车&lt;/a&gt;    &lt;a href=&quot;#&quot; onclick=&quot;showOrder()&quot;&gt;        &lt;input type=&quot;submit&quot; width=&quot;100&quot; value=&quot;提交订单&quot; name=&quot;submit&quot; border=&quot;0&quot; style=&quot;background: url(&#39;./images/register.gif&#39;) no-repeat scroll 0 0 rgba(0, 0, 0, 0);        height:35px;width:100px;color:white;&quot;&gt;    &lt;/a&gt;&lt;/div&gt;</code></pre><p><strong>OrderItem.java</strong></p><pre><code>package com.oracle.bean;public class OrderItem &#123;    private String itemid;    private int count;    private double subtotal;    private String pid;    private String oid;    private Product pro;        public Product getPro() &#123;        return pro;    &#125;    public void setPro(Product pro) &#123;        this.pro = pro;    &#125;    public OrderItem() &#123;        super();        // TODO Auto-generated constructor stub    &#125;    public OrderItem(String itemid, int count, double subtotal, String pid, String oid) &#123;        super();        this.itemid = itemid;        this.count = count;        this.subtotal = subtotal;        this.pid = pid;        this.oid = oid;    &#125;    public String getItemid() &#123;        return itemid;    &#125;    public void setItemid(String itemid) &#123;        this.itemid = itemid;    &#125;    public int getCount() &#123;        return count;    &#125;    public void setCount(int count) &#123;        this.count = count;    &#125;    public double getSubtotal() &#123;        return subtotal;    &#125;    public void setSubtotal(double subtotal) &#123;        this.subtotal = subtotal;    &#125;    public String getPid() &#123;        return pid;    &#125;    public void setPid(String pid) &#123;        this.pid = pid;    &#125;    public String getOid() &#123;        return oid;    &#125;    public void setOid(String oid) &#123;        this.oid = oid;    &#125;    &#125;</code></pre><p><strong>Order.java</strong></p><pre><code>package com.oracle.bean;import java.util.ArrayList;import java.util.List;public class Order &#123;    private String oid;    private String ordertime;    private double total;    private int state;    private String address;    private String name;    private String telephone;    private String uid;        private List&lt;OrderItem&gt; list = new ArrayList&lt;&gt;();    public Order() &#123;        super();        // TODO Auto-generated constructor stub    &#125;    public Order(String oid, String ordertime, double total, int state, String address, String name, String telephone,            String uid, List&lt;OrderItem&gt; list) &#123;        super();        this.oid = oid;        this.ordertime = ordertime;        this.total = total;        this.state = state;        this.address = address;        this.name = name;        this.telephone = telephone;        this.uid = uid;        this.list = list;    &#125;    public String getOid() &#123;        return oid;    &#125;    public void setOid(String oid) &#123;        this.oid = oid;    &#125;    public String getOrdertime() &#123;        return ordertime;    &#125;    public void setOrdertime(String ordertime) &#123;        this.ordertime = ordertime;    &#125;    public double getTotal() &#123;        return total;    &#125;    public void setTotal(double total) &#123;        this.total = total;    &#125;    public int getState() &#123;        return state;    &#125;    public void setState(int state) &#123;        this.state = state;    &#125;    public String getAddress() &#123;        return address;    &#125;    public void setAddress(String address) &#123;        this.address = address;    &#125;    public String getName() &#123;        return name;    &#125;    public void setName(String name) &#123;        this.name = name;    &#125;    public String getTelephone() &#123;        return telephone;    &#125;    public void setTelephone(String telephone) &#123;        this.telephone = telephone;    &#125;    public String getUid() &#123;        return uid;    &#125;    public void setUid(String uid) &#123;        this.uid = uid;    &#125;    public List&lt;OrderItem&gt; getList() &#123;        return list;    &#125;    public void setList(List&lt;OrderItem&gt; list) &#123;        this.list = list;    &#125;    &#125;</code></pre><p><strong>ProductServlet.java</strong><br>在ProductServlet的doGet方法中添加showOrder的判断并完成showOrder方法。</p><pre><code>public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;    String method = request.getParameter(&quot;method&quot;);    if(&quot;getProById&quot;.equals(method)) &#123;        getProById(request, response);    &#125;else if(&quot;findListByCate&quot;.equals(method)) &#123;        findListByCate(request, response);    &#125;else if(&quot;cart&quot;.equals(method)) &#123;        cart(request, response);    &#125;else if(&quot;delCart&quot;.equals(method)) &#123;        delCart(request, response);    &#125;else if(&quot;clearCart&quot;.equals(method)) &#123;        clearCart(request, response);    &#125;else if(&quot;showOrder&quot;.equals(method)) &#123;        showOrder(request, response);    &#125;&#125;public void showOrder(HttpServletRequest request, HttpServletResponse response) &#123;    // TODO Auto-generated method stub    try &#123;        HttpSession session = request.getSession();        Cart cart = (Cart)session.getAttribute(&quot;cart&quot;);        User user = (User)session.getAttribute(&quot;user&quot;);                if(user==null) &#123;            request.getRequestDispatcher(&quot;/login.jsp&quot;).forward(request, response);            return;        &#125;                //订单表的id        String oid = UUID.randomUUID().toString();                //向订单项中封装数据        OrderItem oi = new OrderItem();        Map&lt;String, CartItem&gt; map = cart.getMap();                Product p = new Product();        ProductService ps = new ProductService();                ArrayList&lt;OrderItem&gt; arr = new ArrayList&lt;&gt;();                for(String s:map.keySet()) &#123;            String id = UUID.randomUUID().toString();            oi.setItemid(id);            CartItem ci = map.get(s);            oi.setCount(ci.getCount());            oi.setPid(ci.getPro().getPid());                        Product pro = ps.getProById(ci.getPro().getPid());                        oi.setPro(pro);                    oi.setSubtotal(ci.getSubTotal());            oi.setOid(oid);                        arr.add(oi);        &#125;                //向订单中封装数据        Order od = new Order();        od.setOid(oid);        //获取当前时间        DateFormat df = DateFormat.getDateInstance();        String dateTime = df.format(new Date());        od.setOrdertime(dateTime);        od.setState(0);        od.setTotal(cart.getSubMoney());        od.setUid(user.getUid());        od.setList(arr);                //向service发送请求        ps.insertOrderAndItem(od);                //把订单放入session        session.setAttribute(&quot;order&quot;, od);                //跳转到order_info.jsp        request.getRequestDispatcher(&quot;order_info.jsp&quot;).forward(request, response);    &#125; catch (Exception e) &#123;        // TODO Auto-generated catch block        e.printStackTrace();    &#125; &#125;</code></pre><p><strong>ProductService.java</strong><br>在ProductService中添加insertOrderAndItem方法。</p><pre><code>public void insertOrderAndItem(Order od) &#123;    // TODO Auto-generated method stub    try &#123;        //开启事务        DataSourceUtils.startTransaction();        ProductDao pd = new ProductDao();        pd.insertOrder(od);                List&lt;OrderItem&gt; list = od.getList();        for(OrderItem o:list) &#123;            pd.insertItem(o);        &#125;        DataSourceUtils.commitAndRelease();            &#125; catch (Exception e) &#123;        // TODO Auto-generated catch block        try &#123;            DataSourceUtils.rollback();            e.printStackTrace();        &#125; catch (Exception e1) &#123;            // TODO Auto-generated catch block            e1.printStackTrace();        &#125;    &#125;    &#125;</code></pre><p><strong>ProductDao.java</strong><br>在ProductDao中添加insertOrder和insertItem方法。</p><pre><code>public void insertOrder(Order od) throws SQLException &#123;    // TODO Auto-generated method stub    QueryRunner qr = new QueryRunner();        String sql = &quot;insert into orders(oid,ordertime,total,state,uid)values(?,?,?,?,?)&quot;;        qr.update(DataSourceUtils.getConnection(), sql, od.getOid(),od.getOrdertime(),od.getTotal(),od.getState(),od.getUid());&#125;public void insertItem(OrderItem o) throws SQLException &#123;    // TODO Auto-generated method stub    QueryRunner qr = new QueryRunner();        String sql = &quot;insert into orderitem(itemid,count,subtotal,pid,oid)values(?,?,?,?,?)&quot;;        qr.update(DataSourceUtils.getConnection(), sql, o.getItemid(), o.getCount(), o.getSubtotal(), o.getPid(), o.getOid());&#125;</code></pre><p><strong>order_info.jsp</strong><br>在order_info页面解析订单信息。</p><pre><code>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;    pageEncoding=&quot;UTF-8&quot;%&gt;&lt;%@taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot;%&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;&lt;title&gt;会员登录&lt;/title&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;css/bootstrap.min.css&quot; type=&quot;text/css&quot; /&gt;&lt;script src=&quot;js/jquery-1.11.3.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;script src=&quot;js/bootstrap.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;!-- 引入自定义css文件 style.css --&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;css/style.css&quot; type=&quot;text/css&quot; /&gt;&lt;style&gt;body &#123;    margin-top: 20px;    margin: 0 auto;&#125;.carousel-inner .item img &#123;    width: 100%;    height: 300px;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;!-- 引入header.jsp --&gt;    &lt;jsp:include page=&quot;/header.jsp&quot;&gt;&lt;/jsp:include&gt;        &lt;div class=&quot;container&quot;&gt;        &lt;div class=&quot;row&quot;&gt;            &lt;div style=&quot;margin: 0 auto; margin-top: 10px; width: 950px;&quot;&gt;                &lt;strong&gt;订单详情&lt;/strong&gt;                &lt;table class=&quot;table table-bordered&quot;&gt;                    &lt;tbody&gt;                        &lt;tr class=&quot;warning&quot;&gt;                            &lt;th colspan=&quot;5&quot;&gt;订单编号:9005&lt;/th&gt;                        &lt;/tr&gt;                        &lt;tr class=&quot;warning&quot;&gt;                            &lt;th&gt;图片&lt;/th&gt;                            &lt;th&gt;商品&lt;/th&gt;                            &lt;th&gt;价格&lt;/th&gt;                            &lt;th&gt;数量&lt;/th&gt;                            &lt;th&gt;小计&lt;/th&gt;                        &lt;/tr&gt;                                                &lt;c:forEach items=&quot;$&#123;order.list&#125;&quot; var=&quot;oi&quot;&gt;                            &lt;tr class=&quot;active&quot;&gt;                                &lt;td width=&quot;60&quot; width=&quot;40%&quot;&gt;&lt;input type=&quot;hidden&quot; name=&quot;id&quot;                                    value=&quot;22&quot;&gt; &lt;img src=&quot;$&#123;pageContext.request.contextPath&#125;/$&#123;oi.pro.pimage&#125;&quot; width=&quot;70&quot;                                    height=&quot;60&quot;&gt;&lt;/td&gt;                                &lt;td width=&quot;30%&quot;&gt;&lt;a target=&quot;_blank&quot;&gt;$&#123;oi.pro.pname&#125;&lt;/a&gt;&lt;/td&gt;                                &lt;td width=&quot;20%&quot;&gt;￥$&#123;oi.pro.shop_price&#125;&lt;/td&gt;                                &lt;td width=&quot;10%&quot;&gt;$&#123;oi.count&#125;&lt;/td&gt;                                &lt;td width=&quot;15%&quot;&gt;&lt;span class=&quot;subtotal&quot;&gt;￥$&#123;oi.subtotal&#125;&lt;/span&gt;&lt;/td&gt;                            &lt;/tr&gt;                        &lt;/c:forEach&gt;                                            &lt;/tbody&gt;                &lt;/table&gt;            &lt;/div&gt;            &lt;div style=&quot;text-align: right; margin-right: 120px;&quot;&gt;                商品金额: &lt;strong style=&quot;color: #ff6600;&quot;&gt;￥$&#123;order.total&#125;元&lt;/strong&gt;            &lt;/div&gt;        &lt;/div&gt;        &lt;div&gt;            &lt;hr /&gt;            &lt;form class=&quot;form-horizontal&quot;                style=&quot;margin-top: 5px; margin-left: 150px;&quot;&gt;                &lt;div class=&quot;form-group&quot;&gt;                    &lt;label for=&quot;username&quot; class=&quot;col-sm-1 control-label&quot;&gt;地址&lt;/label&gt;                    &lt;div class=&quot;col-sm-5&quot;&gt;                        &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;username&quot;                            placeholder=&quot;请输入收货地址&quot;&gt;                    &lt;/div&gt;                &lt;/div&gt;                &lt;div class=&quot;form-group&quot;&gt;                    &lt;label for=&quot;inputPassword3&quot; class=&quot;col-sm-1 control-label&quot;&gt;收货人&lt;/label&gt;                    &lt;div class=&quot;col-sm-5&quot;&gt;                        &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;inputPassword3&quot;                            placeholder=&quot;请输收货人&quot;&gt;                    &lt;/div&gt;                &lt;/div&gt;                &lt;div class=&quot;form-group&quot;&gt;                    &lt;label for=&quot;confirmpwd&quot; class=&quot;col-sm-1 control-label&quot;&gt;电话&lt;/label&gt;                    &lt;div class=&quot;col-sm-5&quot;&gt;                        &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;confirmpwd&quot;                            placeholder=&quot;请输入联系方式&quot;&gt;                    &lt;/div&gt;                &lt;/div&gt;            &lt;/form&gt;            &lt;hr /&gt;            &lt;div style=&quot;margin-top: 5px; margin-left: 150px;&quot;&gt;                                                &lt;hr /&gt;                &lt;p style=&quot;text-align: right; margin-right: 100px;&quot;&gt;                    &lt;a href=&quot;javascript:document.getElementById(&#39;orderForm&#39;).submit();&quot;&gt;                        &lt;img src=&quot;./images/finalbutton.gif&quot; width=&quot;204&quot; height=&quot;51&quot;                        border=&quot;0&quot; /&gt;                    &lt;/a&gt;                &lt;/p&gt;                &lt;hr /&gt;            &lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;    &lt;!-- 引入footer.jsp --&gt;    &lt;jsp:include page=&quot;/footer.jsp&quot;&gt;&lt;/jsp:include&gt;&lt;/body&gt;&lt;/html&gt;</code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;提交订单&quot;&gt;&lt;a href=&quot;#提交订单&quot; class=&quot;headerlink&quot; title=&quot;提交订单&quot;&gt;&lt;/a&gt;提交订单&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;实现功能：&lt;/strong&gt;&lt;br&gt;用户在购物车页面点击“提交订单”，向数据库中写入用户信息、购买的商品、数量等。&lt;/p&gt;</summary>
    
    
    
    <category term="项目经历" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/"/>
    
    <category term="JavaWeb" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/"/>
    
    <category term="基于JavaWeb的网上购物商城" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/"/>
    
    <category term="提交订单" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/%E6%8F%90%E4%BA%A4%E8%AE%A2%E5%8D%95/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
    <category term="基于JavaWeb的网上购物商城" scheme="http://example.com/tags/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/"/>
    
    <category term="提交订单" scheme="http://example.com/tags/%E6%8F%90%E4%BA%A4%E8%AE%A2%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>基于JavaWeb的网上购物商城 | 清空购物车</title>
    <link href="http://example.com/2022/01/15/%E6%B8%85%E7%A9%BA%E8%B4%AD%E7%89%A9%E8%BD%A6/"/>
    <id>http://example.com/2022/01/15/%E6%B8%85%E7%A9%BA%E8%B4%AD%E7%89%A9%E8%BD%A6/</id>
    <published>2022-01-16T05:25:42.000Z</published>
    <updated>2022-01-16T06:13:59.775Z</updated>
    
    <content type="html"><![CDATA[<h1 id="清空购物车"><a href="#清空购物车" class="headerlink" title="清空购物车"></a>清空购物车</h1><p><strong>实现功能：</strong><br>用户点击购物车中的清空购物车链接时，删除所有购物项，总金额清零。<br><img src="/2022/01/15/%E6%B8%85%E7%A9%BA%E8%B4%AD%E7%89%A9%E8%BD%A6/1.PNG"></p><span id="more"></span><p><strong>cart.jsp</strong><br>为清空购物车链接增加onclick属性，并使用js实现clearCart方法。</p><pre><code>&lt;a href=&quot;#&quot; id=&quot;clear&quot; class=&quot;clear&quot; onclick=&quot;clearCart()&quot;&gt;清空购物车&lt;/a&gt;......&lt;script type=&quot;text/javascript&quot;&gt;    function clearCart()&#123;        location.href=&quot;$&#123;pageContext.request.contextPath&#125;/product?method=clearCart&quot;;    &#125;&lt;/script&gt;</code></pre><p><strong>ProductServlet.java</strong><br>在ProductServlet.java的doGet方法中添加clearCart的判断，并完成clearCart方法。</p><pre><code>public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;    String method = request.getParameter(&quot;method&quot;);    if(&quot;getProById&quot;.equals(method)) &#123;        getProById(request, response);    &#125;else if(&quot;findListByCate&quot;.equals(method)) &#123;        findListByCate(request, response);    &#125;else if(&quot;cart&quot;.equals(method)) &#123;        cart(request, response);    &#125;else if(&quot;delCart&quot;.equals(method)) &#123;        delCart(request, response);    &#125;else if(&quot;clearCart&quot;.equals(method)) &#123;        clearCart(request, response);    &#125;&#125;public void clearCart(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;    //获取购物车    HttpSession session = request.getSession();    Cart cart = (Cart) session.getAttribute(&quot;cart&quot;);        cart.setMap(new HashMap&lt;&gt;());//删除所有购物项    cart.setSubMoney(0.0);//总金额清零        //返回购物车页面    request.getRequestDispatcher(&quot;/cart.jsp&quot;).forward(request, response);&#125;</code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;清空购物车&quot;&gt;&lt;a href=&quot;#清空购物车&quot; class=&quot;headerlink&quot; title=&quot;清空购物车&quot;&gt;&lt;/a&gt;清空购物车&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;实现功能：&lt;/strong&gt;&lt;br&gt;用户点击购物车中的清空购物车链接时，删除所有购物项，总金额清零。&lt;br&gt;&lt;img src=&quot;/2022/01/15/%E6%B8%85%E7%A9%BA%E8%B4%AD%E7%89%A9%E8%BD%A6/1.PNG&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="项目经历" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/"/>
    
    <category term="JavaWeb" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/"/>
    
    <category term="基于JavaWeb的网上购物商城" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/"/>
    
    <category term="清空购物车" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/%E6%B8%85%E7%A9%BA%E8%B4%AD%E7%89%A9%E8%BD%A6/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
    <category term="基于JavaWeb的网上购物商城" scheme="http://example.com/tags/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/"/>
    
    <category term="清空购物车" scheme="http://example.com/tags/%E6%B8%85%E7%A9%BA%E8%B4%AD%E7%89%A9%E8%BD%A6/"/>
    
  </entry>
  
  <entry>
    <title>基于JavaWeb的网上购物商城 | 删除购物车中的商品</title>
    <link href="http://example.com/2022/01/15/%E5%88%A0%E9%99%A4%E8%B4%AD%E7%89%A9%E8%BD%A6%E4%B8%AD%E7%9A%84%E5%95%86%E5%93%81/"/>
    <id>http://example.com/2022/01/15/%E5%88%A0%E9%99%A4%E8%B4%AD%E7%89%A9%E8%BD%A6%E4%B8%AD%E7%9A%84%E5%95%86%E5%93%81/</id>
    <published>2022-01-16T05:13:54.000Z</published>
    <updated>2022-01-16T06:06:33.626Z</updated>
    
    <content type="html"><![CDATA[<h1 id="删除购物车中的商品"><a href="#删除购物车中的商品" class="headerlink" title="删除购物车中的商品"></a>删除购物车中的商品</h1><p><strong>实现功能：</strong><br>用户点击购物车中购物项后面的删除将这个购物项删除，总计金额减去当前购物项小计。<br><img src="/2022/01/15/%E5%88%A0%E9%99%A4%E8%B4%AD%E7%89%A9%E8%BD%A6%E4%B8%AD%E7%9A%84%E5%95%86%E5%93%81/1.PNG"></p><span id="more"></span><p><strong>cart.jsp</strong><br>为删除链接增加onclick属性，并使用js实现delCart方法。</p><pre><code>&lt;td&gt;    &lt;a href=&quot;javascript:;&quot; class=&quot;delete&quot; onclick=&quot;delCart(&#39;$&#123;en.value.pro.pid&#125;&#39;, &#39;$&#123;en.value.subTotal&#125;&#39;)&quot;&gt;删除&lt;/a&gt;&lt;/td&gt;......&lt;script type=&quot;text/javascript&quot;&gt;    function delCart(pid, money)&#123;        location.href=&quot;$&#123;pageContext.request.contextPath&#125;/product?method=delCart&amp;pid=&quot;+pid+&quot;&amp;money=&quot;+money;    &#125;&lt;/script&gt;</code></pre><p><strong>ProductServlet.java</strong><br>在ProductServlet.java的doGet方法中添加delCart的判断，并完成delCart方法。</p><pre><code>public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;    String method = request.getParameter(&quot;method&quot;);    if(&quot;getProById&quot;.equals(method)) &#123;        getProById(request, response);    &#125;else if(&quot;findListByCate&quot;.equals(method)) &#123;        findListByCate(request, response);    &#125;else if(&quot;cart&quot;.equals(method)) &#123;        cart(request, response);    &#125;else if(&quot;delCart&quot;.equals(method)) &#123;        delCart(request, response);    &#125;&#125;public void delCart(HttpServletRequest request, HttpServletResponse response) &#123;    // TODO Auto-generated method stub    try &#123;        String pid = request.getParameter(&quot;pid&quot;);        String money = request.getParameter(&quot;money&quot;);        //获取购物车        HttpSession session = request.getSession();        Cart cart = (Cart) session.getAttribute(&quot;cart&quot;);        HashMap&lt;String, CartItem&gt; map = cart.getMap();        CartItem c = map.remove(pid);        double subTotal = c.getSubTotal();        //购物车金额-小计        cart.setSubMoney(cart.getSubMoney()-subTotal);        //返回购物车页面        request.getRequestDispatcher(&quot;/cart.jsp&quot;).forward(request, response);    &#125; catch (Exception e) &#123;        // TODO Auto-generated catch block        e.printStackTrace();    &#125; &#125;</code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;删除购物车中的商品&quot;&gt;&lt;a href=&quot;#删除购物车中的商品&quot; class=&quot;headerlink&quot; title=&quot;删除购物车中的商品&quot;&gt;&lt;/a&gt;删除购物车中的商品&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;实现功能：&lt;/strong&gt;&lt;br&gt;用户点击购物车中购物项后面的删除将这个购物项删除，总计金额减去当前购物项小计。&lt;br&gt;&lt;img src=&quot;/2022/01/15/%E5%88%A0%E9%99%A4%E8%B4%AD%E7%89%A9%E8%BD%A6%E4%B8%AD%E7%9A%84%E5%95%86%E5%93%81/1.PNG&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="项目经历" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/"/>
    
    <category term="JavaWeb" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/"/>
    
    <category term="基于JavaWeb的网上购物商城" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/"/>
    
    <category term="删除购物车中的商品" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/%E5%88%A0%E9%99%A4%E8%B4%AD%E7%89%A9%E8%BD%A6%E4%B8%AD%E7%9A%84%E5%95%86%E5%93%81/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
    <category term="基于JavaWeb的网上购物商城" scheme="http://example.com/tags/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/"/>
    
    <category term="删除购物车中的商品" scheme="http://example.com/tags/%E5%88%A0%E9%99%A4%E8%B4%AD%E7%89%A9%E8%BD%A6%E4%B8%AD%E7%9A%84%E5%95%86%E5%93%81/"/>
    
  </entry>
  
  <entry>
    <title>基于JavaWeb的网上购物商城 | 购物车</title>
    <link href="http://example.com/2022/01/15/%E8%B4%AD%E7%89%A9%E8%BD%A6/"/>
    <id>http://example.com/2022/01/15/%E8%B4%AD%E7%89%A9%E8%BD%A6/</id>
    <published>2022-01-16T04:18:23.000Z</published>
    <updated>2022-01-16T04:35:26.867Z</updated>
    
    <content type="html"><![CDATA[<h1 id="购物车"><a href="#购物车" class="headerlink" title="购物车"></a>购物车</h1><p><strong>实现功能：</strong><br>用户在登录状态下可以将商品加入购物车（如下图所示）。<br><img src="/2022/01/15/%E8%B4%AD%E7%89%A9%E8%BD%A6/1.PNG"></p><span id="more"></span><p><strong>product_info.jsp</strong><br>（1）给购物车按钮增加onclick属性。</p><pre><code>&lt;div style=&quot;margin: 20px 0 10px 0;; text-align: center;&quot;&gt;    &lt;a href=&quot;#&quot;&gt; &lt;input        style=&quot;background: url(&#39;./images/product.gif&#39;) no-repeat scroll 0 -600px rgba(0, 0, 0, 0); height: 36px; width: 127px;&quot;        value=&quot;加入购物车&quot; type=&quot;button&quot; onclick=&quot;cart()&quot;&gt;    &lt;/a&gt; &amp;nbsp;收藏商品&lt;/div&gt;</code></pre><p>（2）使用js编写cart()</p><pre><code>&lt;script type=&quot;text/javascript&quot;&gt;    function cart()&#123;        location.href=&quot;$&#123;pageContext.request.contextPath&#125;/product?method=cart&amp;pid=$&#123;p.pid&#125;&amp;proNumber=&quot;+$(&quot;#quantity&quot;).val();    &#125;&lt;/script&gt;</code></pre><p><strong>CartItem.java</strong><br>一个购物项（由一个商品、数量、小计构成）<br><img src="/2022/01/15/%E8%B4%AD%E7%89%A9%E8%BD%A6/2.PNG"></p><pre><code>package com.oracle.bean;public class CartItem &#123;    private Product pro = new Product();    private double subTotal;    private int count;    public CartItem() &#123;        super();        // TODO Auto-generated constructor stub    &#125;    public CartItem(Product pro, double subTotal, int count) &#123;        super();        this.pro = pro;        this.subTotal = subTotal;        this.count = count;    &#125;    public Product getPro() &#123;        return pro;    &#125;    public void setPro(Product pro) &#123;        this.pro = pro;    &#125;    public double getSubTotal() &#123;        return subTotal;    &#125;    public void setSubTotal(double subTotal) &#123;        this.subTotal = subTotal;    &#125;    public int getCount() &#123;        return count;    &#125;    public void setCount(int count) &#123;        this.count = count;    &#125;    &#125;</code></pre><p><strong>Cart.java</strong><br>购物车（由一个存储许多购物项的Map集合、总计金额构成）<br><img src="/2022/01/15/%E8%B4%AD%E7%89%A9%E8%BD%A6/3.PNG"></p><pre><code>package com.oracle.bean;import java.util.HashMap;import java.util.List;public class Cart &#123;    private HashMap&lt;String, CartItem&gt; map = new HashMap&lt;&gt;();    private double subMoney;    public Cart() &#123;        super();        // TODO Auto-generated constructor stub    &#125;    public Cart(HashMap&lt;String, CartItem&gt; map, double subMoney) &#123;        super();        this.map = map;        this.subMoney = subMoney;    &#125;    public HashMap&lt;String, CartItem&gt; getMap() &#123;        return map;    &#125;    public void setMap(HashMap&lt;String, CartItem&gt; map) &#123;        this.map = map;    &#125;    public double getSubMoney() &#123;        return subMoney;    &#125;    public void setSubMoney(double subMoney) &#123;        this.subMoney = subMoney;    &#125;    &#125;</code></pre><p><strong>ProductServlet.java</strong><br>在ProductServlet的doGet方法中添加购物车的判断并完成cart方法。</p><pre><code>public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;    String method = request.getParameter(&quot;method&quot;);    if(&quot;getProById&quot;.equals(method)) &#123;        getProById(request, response);    &#125;else if(&quot;findListByCate&quot;.equals(method)) &#123;        findListByCate(request, response);    &#125;else if(&quot;cart&quot;.equals(method)) &#123;        cart(request, response);    &#125;&#125;public void cart(HttpServletRequest request, HttpServletResponse response) &#123;    // TODO Auto-generated method stub    //接收前台参数    try &#123;        String pid = request.getParameter(&quot;pid&quot;);        String pn = request.getParameter(&quot;proNumber&quot;);        int proNumber = Integer.parseInt(pn);        //查询商品信息        ProductService ps = new ProductService();        Product pro = ps.getProById(pid);                //从session中获取购物车        HttpSession session = request.getSession();        Cart cart = (Cart)session.getAttribute(&quot;cart&quot;);        //判断用户是否登录        User user = (User)session.getAttribute(&quot;user&quot;);        if(user==null) &#123;            //跳转到首页            request.getRequestDispatcher(&quot;/login.jsp&quot;).forward(request, response);            return;        &#125;                //判断购物车是否为空        if(cart==null) &#123;            //创建一个新的购物车            cart = new Cart();        &#125;        //否则有数据    有数据的话添加商品        HashMap&lt;String, CartItem&gt; map = cart.getMap();        if(map.containsKey(pid)) &#123;            //购物车中已经存在当前要购买的商品            //获取购物车中商品的数量            CartItem ci = map.get(pid);            //获取购物车中商品的数量            int count = ci.getCount();            //购物车商品数量+需要购买的商品的数量=总数            int newCount = count+proNumber;            //商品小计            double subTotal = newCount * pro.getShop_price();                        ci.setCount(newCount);            ci.setSubTotal(subTotal);            map.put(pid, ci);        &#125;else &#123;            //购物车中不存在购买的商品            CartItem ca = new CartItem();            ca.setPro(pro);            ca.setCount(proNumber);            ca.setSubTotal(proNumber*pro.getShop_price());            map.put(pid, ca);        &#125;        //定义变量存储总计        double totalMoney=0.0;        Set&lt;String&gt; keySet = map.keySet();        for(String key:keySet) &#123;            CartItem cc = map.get(key);            totalMoney+=cc.getSubTotal();        &#125;        cart.setSubMoney(totalMoney);        cart.setMap(map);                //把购物车放入session中        session.setAttribute(&quot;cart&quot;, cart);                //请求转发到购物车页面解析        request.getRequestDispatcher(&quot;/cart.jsp&quot;).forward(request, response);            &#125; catch (Exception e) &#123;        // TODO Auto-generated catch block        e.printStackTrace();    &#125;&#125;public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;    String method = request.getParameter(&quot;method&quot;);    if(&quot;getProById&quot;.equals(method)) &#123;        getProById(request, response);    &#125;else if(&quot;findListByCate&quot;.equals(method)) &#123;        findListByCate(request, response);    &#125;else if(&quot;cart&quot;.equals(method)) &#123;        cart(request, response);    &#125;&#125;public void cart(HttpServletRequest request, HttpServletResponse response) &#123;    // TODO Auto-generated method stub    //接收前台参数    try &#123;        String pid = request.getParameter(&quot;pid&quot;);        String pn = request.getParameter(&quot;proNumber&quot;);        int proNumber = Integer.parseInt(pn);        //查询商品信息        ProductService ps = new ProductService();        Product pro = ps.getProById(pid);                //从session中获取购物车        HttpSession session = request.getSession();        Cart cart = (Cart)session.getAttribute(&quot;cart&quot;);        //判断用户是否登录        User user = (User)session.getAttribute(&quot;user&quot;);        if(user==null) &#123;            //跳转到首页            request.getRequestDispatcher(&quot;/login.jsp&quot;).forward(request, response);            return;        &#125;                //判断购物车是否为空        if(cart==null) &#123;            //创建一个新的购物车            cart = new Cart();        &#125;        //否则有数据    有数据的话添加商品        HashMap&lt;String, CartItem&gt; map = cart.getMap();        if(map.containsKey(pid)) &#123;            //购物车中已经存在当前要购买的商品            //获取购物车中商品的数量            CartItem ci = map.get(pid);            //获取购物车中商品的数量            int count = ci.getCount();            //购物车商品数量+需要购买的商品的数量=总数            int newCount = count+proNumber;            //商品小计            double subTotal = newCount * pro.getShop_price();                        ci.setCount(newCount);            ci.setSubTotal(subTotal);            map.put(pid, ci);        &#125;else &#123;            //购物车中不存在购买的商品            CartItem ca = new CartItem();            ca.setPro(pro);            ca.setCount(proNumber);            ca.setSubTotal(proNumber*pro.getShop_price());            map.put(pid, ca);        &#125;        //定义变量存储总计        double totalMoney=0.0;        Set&lt;String&gt; keySet = map.keySet();        for(String key:keySet) &#123;            CartItem cc = map.get(key);            totalMoney+=cc.getSubTotal();        &#125;        cart.setSubMoney(totalMoney);        cart.setMap(map);                //把购物车放入session中        session.setAttribute(&quot;cart&quot;, cart);                //请求转发到购物车页面解析        request.getRequestDispatcher(&quot;/cart.jsp&quot;).forward(request, response);            &#125; catch (Exception e) &#123;        // TODO Auto-generated catch block        e.printStackTrace();    &#125;&#125;</code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;购物车&quot;&gt;&lt;a href=&quot;#购物车&quot; class=&quot;headerlink&quot; title=&quot;购物车&quot;&gt;&lt;/a&gt;购物车&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;实现功能：&lt;/strong&gt;&lt;br&gt;用户在登录状态下可以将商品加入购物车（如下图所示）。&lt;br&gt;&lt;img src=&quot;/2022/01/15/%E8%B4%AD%E7%89%A9%E8%BD%A6/1.PNG&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="项目经历" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/"/>
    
    <category term="JavaWeb" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/"/>
    
    <category term="基于JavaWeb的网上购物商城" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/"/>
    
    <category term="购物车" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/%E8%B4%AD%E7%89%A9%E8%BD%A6/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
    <category term="基于JavaWeb的网上购物商城" scheme="http://example.com/tags/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/"/>
    
    <category term="购物车" scheme="http://example.com/tags/%E8%B4%AD%E7%89%A9%E8%BD%A6/"/>
    
  </entry>
  
  <entry>
    <title>基于JavaWeb的网上购物商城 | 分页</title>
    <link href="http://example.com/2022/01/15/%E5%88%86%E9%A1%B5-1/"/>
    <id>http://example.com/2022/01/15/%E5%88%86%E9%A1%B5-1/</id>
    <published>2022-01-15T12:23:05.000Z</published>
    <updated>2022-01-15T12:50:33.097Z</updated>
    
    <content type="html"><![CDATA[<h1 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h1><p><strong>实现功能</strong>：<br>当我们点击首页菜单栏的商品类别链接时，显示该分类下一定数量的商品，当该分类的总商品数大于这个数量，就会由几页数据，此时我们再点击页码时浏览器显示对应页的商品。<br><strong>实现分页功能需要的数据：</strong></p><table><thead><tr><th>数据</th><th>获取/计算方式</th></tr></thead><tbody><tr><td>当前页展示的数据(List<Product>)</Product></td><td>select * from product limit (当前页-1)*每页显示几条 每页显示几条</td></tr><tr><td>每页显示几条数据</td><td>自定义</td></tr><tr><td>当前页</td><td>从前台传递</td></tr><tr><td>总页数</td><td>总条数/每页显示多少条</td></tr><tr><td>总条数</td><td>使用count关键字    select count(*) form product</td></tr></tbody></table><p><strong>header.jsp</strong><br>修改属性class=”nav navbar-nav”的ul下面的菜单栏代码</p><pre><code>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;    pageEncoding=&quot;UTF-8&quot;%&gt;&lt;%@taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot;%&gt;&lt;!DOCTYPE html&gt;&lt;!-- 登录 注册 购物车... --&gt;&lt;div class=&quot;container-fluid&quot;&gt;    &lt;div class=&quot;col-md-4&quot;&gt;        &lt;img src=&quot;img/logo2.png&quot; /&gt;    &lt;/div&gt;    &lt;div class=&quot;col-md-5&quot;&gt;        &lt;img src=&quot;img/header.png&quot; /&gt;    &lt;/div&gt;    &lt;div class=&quot;col-md-3&quot; style=&quot;padding-top:20px&quot;&gt;        &lt;ol class=&quot;list-inline&quot;&gt;            &lt;c:if test=&quot;$&#123;empty user&#125;&quot;&gt;                &lt;li&gt;&lt;a href=&quot;login.jsp&quot;&gt;登录&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a href=&quot;register.jsp&quot;&gt;注册&lt;/a&gt;&lt;/li&gt;            &lt;/c:if&gt;            &lt;c:if test=&quot;$&#123;not empty user&#125;&quot;&gt;                &lt;li&gt;$&#123;user.username&#125;&lt;/li&gt;                &lt;li&gt;&lt;a href=&quot;cart.jsp&quot;&gt;购物车&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a href=&quot;order_list.jsp&quot;&gt;我的订单&lt;/a&gt;&lt;/li&gt;            &lt;/c:if&gt;        &lt;/ol&gt;    &lt;/div&gt;&lt;/div&gt;&lt;!-- 导航条 --&gt;&lt;div class=&quot;container-fluid&quot;&gt;    &lt;nav class=&quot;navbar navbar-inverse&quot;&gt;        &lt;div class=&quot;container-fluid&quot;&gt;            &lt;!-- Brand and toggle get grouped for better mobile display --&gt;            &lt;div class=&quot;navbar-header&quot;&gt;                &lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#bs-example-navbar-collapse-1&quot; aria-expanded=&quot;false&quot;&gt;                    &lt;span class=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt;                    &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;                    &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;                    &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;                &lt;/button&gt;                &lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&gt;首页&lt;/a&gt;            &lt;/div&gt;            &lt;div class=&quot;collapse navbar-collapse&quot; id=&quot;bs-example-navbar-collapse-1&quot;&gt;                &lt;ul class=&quot;nav navbar-nav&quot;&gt;                    &lt;c:forEach items=&quot;$&#123;clist&#125;&quot; var=&quot;cate&quot;&gt;                        &lt;li&gt;&lt;a href=&quot;$&#123;pageContext.request.contextPath&#125;/product?method=findListByCate&amp;cid=$&#123;cate.cid&#125;&amp;pageNumber=1&quot;&gt;$&#123;cate.cname&#125;&lt;/a&gt;&lt;/li&gt;                    &lt;/c:forEach&gt;                &lt;/ul&gt;                &lt;form class=&quot;navbar-form navbar-right&quot; role=&quot;search&quot;&gt;                    &lt;div class=&quot;form-group&quot;&gt;                        &lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;Search&quot;&gt;                    &lt;/div&gt;                    &lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;Submit&lt;/button&gt;                &lt;/form&gt;            &lt;/div&gt;        &lt;/div&gt;    &lt;/nav&gt;&lt;/div&gt;</code></pre><p><strong>product_list.jsp</strong><br>修改分页部分的代码</p><pre><code>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;    pageEncoding=&quot;UTF-8&quot;%&gt;&lt;%@taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;&lt;title&gt;会员登录&lt;/title&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;css/bootstrap.min.css&quot; type=&quot;text/css&quot; /&gt;&lt;script src=&quot;js/jquery-1.11.3.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;script src=&quot;js/bootstrap.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;!-- 引入自定义css文件 style.css --&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;css/style.css&quot; type=&quot;text/css&quot; /&gt;&lt;style&gt;body &#123;    margin-top: 20px;    margin: 0 auto;    width: 100%;&#125;.carousel-inner .item img &#123;    width: 100%;    height: 300px;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;!-- 引入header.jsp --&gt;    &lt;jsp:include page=&quot;/header.jsp&quot;&gt;&lt;/jsp:include&gt;    &lt;div class=&quot;row&quot; style=&quot;width: 1210px; margin: 0 auto;&quot;&gt;                &lt;c:forEach items=&quot;$&#123;pb.list&#125;&quot; var=&quot;pro&quot;&gt;            &lt;div class=&quot;col-md-2&quot;&gt;                &lt;a href=&quot;$&#123;pageContext.request.contextPath&#125;/product?method=getProById&amp;pid=$&#123;pro.pid&#125;&quot;&gt;                     &lt;img src=&quot;$&#123;pageContext.request.contextPath&#125;/$&#123;pro.pimage&#125;&quot; width=&quot;170&quot; height=&quot;170&quot; style=&quot;display: inline-block;&quot;&gt;                &lt;/a&gt;                &lt;p&gt;                    &lt;a href=&quot;product_info.html&quot; style=&#39;color: green&#39;&gt;$&#123;pro.pname&#125;&lt;/a&gt;                &lt;/p&gt;                &lt;p&gt;                    &lt;font color=&quot;#FF0000&quot;&gt;商城价：&amp;yen;$&#123;pro.shop_price&#125;&lt;/font&gt;                &lt;/p&gt;            &lt;/div&gt;        &lt;/c:forEach&gt;    &lt;/div&gt;    &lt;!--分页 --&gt;    &lt;div style=&quot;width: 380px; margin: 0 auto; margin-top: 50px;&quot;&gt;        &lt;ul class=&quot;pagination&quot; style=&quot;text-align: center; margin-top: 10px;&quot;&gt;            &lt;li class=&quot;disabled&quot;&gt;&lt;a href=&quot;#&quot; aria-label=&quot;Previous&quot;&gt;&lt;span                    aria-hidden=&quot;true&quot;&gt;&amp;laquo;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;            &lt;c:forEach begin=&quot;1&quot; end=&quot;$&#123;pb.totalCount&#125;&quot; step=&quot;1&quot; var=&quot;n&quot;&gt;                &lt;li&gt;&lt;a href=&quot;$&#123;pageContext.request.contextPath&#125;/product?method=findListByCate&amp;cid=$&#123;cid&#125;&amp;pageNumber=$&#123;n&#125;&quot;&gt;$&#123;n&#125;&lt;/a&gt;&lt;/li&gt;            &lt;/c:forEach&gt;            &lt;li&gt;&lt;a href=&quot;#&quot; aria-label=&quot;Next&quot;&gt; &lt;span aria-hidden=&quot;true&quot;&gt;&amp;raquo;&lt;/span&gt;            &lt;/a&gt;&lt;/li&gt;        &lt;/ul&gt;    &lt;/div&gt;    &lt;!-- 分页结束 --&gt;    &lt;!-- 引入footer.jsp --&gt;    &lt;jsp:include page=&quot;/footer.jsp&quot;&gt;&lt;/jsp:include&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><strong>PageBean.java</strong></p><pre><code>package com.oracle.bean;import java.util.ArrayList;import java.util.List;public class PageBean &#123;    private List&lt;Product&gt; list = new ArrayList&lt;&gt;();//显示当前页数据 select * form product limit    private int pageSize;//每页显示几条数据 自定义    private int pageNumber;//当前页 从前台传递过来    private int totalCount;//(int)Math.ceil(totalSize*1.0/pageSize)    private int totalSize;//总条数 select count(*) form product    public List&lt;Product&gt; getList() &#123;        return list;    &#125;    public void setList(List&lt;Product&gt; list) &#123;        this.list = list;    &#125;    public int getPageSize() &#123;        return pageSize;    &#125;    public void setPageSize(int pageSize) &#123;        this.pageSize = pageSize;    &#125;    public int getPageNumber() &#123;        return pageNumber;    &#125;    public void setPageNumber(int pageNumber) &#123;        this.pageNumber = pageNumber;    &#125;    public int getTotalCount() &#123;        return (int)Math.ceil(totalSize*1.0/pageSize);    &#125;    public void setTotalCount(int totalCount) &#123;        this.totalCount = totalCount;    &#125;    public int getTotalSize() &#123;        return totalSize;    &#125;    public void setTotalSize(int totalSize) &#123;        this.totalSize = totalSize;    &#125;        //获取index索引的方法    public int getIndex() &#123;        return (pageNumber-1)*pageSize;    &#125;    public PageBean(int pageSize, int pageNumber) &#123;        super();        this.pageSize = pageSize;        this.pageNumber = pageNumber;    &#125;&#125;</code></pre><p><strong>ProductServlet.java</strong><br>变更ProductServlet.java中的findListByCate方法代码如下：</p><pre><code>public void findListByCate(HttpServletRequest request, HttpServletResponse response) &#123;        // TODO Auto-generated method stub        try &#123;            String pn = request.getParameter(&quot;pageNumber&quot;);            int pageNumber = Integer.parseInt(pn);            int pageSize = 4;                        String cid = request.getParameter(&quot;cid&quot;);            ProductService ps = new ProductService();                        //List&lt;Product&gt; plist = ps.findListByCate(cid);            PageBean pb = ps.findListByCate(cid, pageNumber, pageSize);                        request.setAttribute(&quot;cid&quot;, cid);            request.setAttribute(&quot;pb&quot;, pb);            request.getRequestDispatcher(&quot;/product_list.jsp&quot;).forward(request, response);        &#125; catch (Exception e) &#123;            // TODO Auto-generated catch block            e.printStackTrace();        &#125;        &#125;</code></pre><p><strong>ProductService.java</strong><br>变更ProductService.java中的findListByCate方法代码如下：</p><pre><code>public PageBean findListByCate(String cid, int pageNumber, int pageSize) throws SQLException &#123;        // TODO Auto-generated method stub        ProductDao pd = new ProductDao();        //List&lt;Product&gt; plist = pd.findListByCate(cid);                //查询每页显示的数据        List&lt;Product&gt; plist = pd.findListByCate(cid, pageNumber, pageSize);                //查询总条数        int count = pd.getCount(cid);        PageBean pb = new PageBean(pageSize, pageNumber);        pb.setList(plist);        pb.setTotalSize(count);                return pb;    &#125;</code></pre><p><strong>ProductDao.java</strong><br>修改ProductDao.java中的findListByCate方法代码并添加getCount方法如下：</p><pre><code>public List&lt;Product&gt; findListByCate(String cid, int pageNumber, int pageSize) throws SQLException &#123;    // TODO Auto-generated method stub    QueryRunner qr = new QueryRunner(DataSourceUtils.getDataSource());        PageBean pb = new PageBean(pageSize, pageNumber);        String sql = &quot;select * from product where cid=? and pflag=? order by pdate desc limit ?,?&quot;;        List&lt;Product&gt; plist = qr.query(sql, new BeanListHandler&lt;&gt;(Product.class), cid, 0, pb.getIndex(), pb.getPageSize());    return plist;&#125;public int getCount(String cid) throws SQLException &#123;    // TODO Auto-generated method stub    QueryRunner qr = new QueryRunner(DataSourceUtils.getDataSource());        String sql = &quot;select count(*) from product where cid=?&quot;;        int count = ((Long) qr.query(sql, new ScalarHandler(), cid)).intValue();    return count;&#125;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;分页&quot;&gt;&lt;a href=&quot;#分页&quot; class=&quot;headerlink&quot; title=&quot;分页&quot;&gt;&lt;/a&gt;分页&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;实现功能&lt;/strong&gt;：&lt;br&gt;当我们点击首页菜单栏的商品类别链接时，显示该分类下一定数量的商品，当该分类的总商品数大于</summary>
      
    
    
    
    <category term="项目经历" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/"/>
    
    <category term="JavaWeb" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/"/>
    
    <category term="基于JavaWeb的网上购物商城" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/"/>
    
    <category term="分页" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/%E5%88%86%E9%A1%B5/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
    <category term="基于JavaWeb的网上购物商城" scheme="http://example.com/tags/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/"/>
    
    <category term="分页" scheme="http://example.com/tags/%E5%88%86%E9%A1%B5/"/>
    
  </entry>
  
  <entry>
    <title>基于JavaWeb的网上购物商城 | 商品详情页展示及分类商品列表显示</title>
    <link href="http://example.com/2022/01/14/%E5%95%86%E5%93%81%E8%AF%A6%E6%83%85%E9%A1%B5%E5%B1%95%E7%A4%BA%E5%8F%8A%E5%88%86%E7%B1%BB%E5%95%86%E5%93%81%E5%88%97%E8%A1%A8%E6%98%BE%E7%A4%BA/"/>
    <id>http://example.com/2022/01/14/%E5%95%86%E5%93%81%E8%AF%A6%E6%83%85%E9%A1%B5%E5%B1%95%E7%A4%BA%E5%8F%8A%E5%88%86%E7%B1%BB%E5%95%86%E5%93%81%E5%88%97%E8%A1%A8%E6%98%BE%E7%A4%BA/</id>
    <published>2022-01-15T05:51:59.000Z</published>
    <updated>2022-01-15T06:48:15.121Z</updated>
    
    <content type="html"><![CDATA[<h1 id="商品详情页展示及分类商品列表显示"><a href="#商品详情页展示及分类商品列表显示" class="headerlink" title="商品详情页展示及分类商品列表显示"></a>商品详情页展示及分类商品列表显示</h1><p><strong>实现功能：</strong><br>1）点击某一个商品，网页显示商品的详情信息<br><strong>改动index.jsp页面中的热门商品部分的代码,展示商品详情页</strong></p><span id="more"></span><pre><code>&lt;!-- 热门商品 --&gt;&lt;div class=&quot;container-fluid&quot;&gt;    &lt;div class=&quot;col-md-12&quot;&gt;        &lt;h2&gt;热门商品&amp;nbsp;&amp;nbsp;&lt;img src=&quot;img/title2.jpg&quot;/&gt;&lt;/h2&gt;    &lt;/div&gt;    &lt;div class=&quot;col-md-2&quot; style=&quot;border:1px solid #E7E7E7;border-right:0;padding:0;&quot;&gt;        &lt;img src=&quot;products/hao/big01.jpg&quot; width=&quot;205&quot; height=&quot;404&quot; style=&quot;display: inline-block;&quot;/&gt;    &lt;/div&gt;    &lt;div class=&quot;col-md-10&quot;&gt;        &lt;div class=&quot;col-md-6&quot; style=&quot;text-align:center;height:200px;padding:0px;&quot;&gt;            &lt;a href=&quot;product_info.htm&quot;&gt;                &lt;img src=&quot;products/hao/middle01.jpg&quot; width=&quot;516px&quot; height=&quot;200px&quot; style=&quot;display: inline-block;&quot;&gt;            &lt;/a&gt;        &lt;/div&gt;                &lt;c:forEach items=&quot;$&#123;list&#125;&quot; var=&quot;pro&quot;&gt;            &lt;div class=&quot;col-md-2&quot; style=&quot;text-align:center;height:200px;padding:10px 0px;&quot;&gt;                &lt;a href=&quot;product_info.htm&quot;&gt;                    &lt;img src=&quot;$&#123;pageContext.request.contextPath&#125;/$&#123;pro.pimage&#125;&quot; width=&quot;130&quot; height=&quot;130&quot; style=&quot;display: inline-block;&quot;&gt;                &lt;/a&gt;                &lt;p&gt;&lt;a href=&quot;$&#123;pageContext.request.contextPath&#125;/product?method=getProById&amp;pid=$&#123;pro.pid&#125;&quot; style=&#39;color:#666&#39;&gt;$&#123;pro.pname&#125;&lt;/a&gt;&lt;/p&gt;                &lt;p&gt;&lt;font color=&quot;#E4393C&quot; style=&quot;font-size:16px&quot;&gt;&amp;yen;$&#123;pro.shop_price&#125;&lt;/font&gt;&lt;/p&gt;            &lt;/div&gt;        &lt;/c:forEach&gt;    &lt;/div&gt;&lt;/div&gt;</code></pre><p><strong>product_info.jsp</strong><br>改动product_info.jsp的代码动态显示商品的详情信息。</p><pre><code>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;    pageEncoding=&quot;UTF-8&quot;%&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;&lt;title&gt;会员登录&lt;/title&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;css/bootstrap.min.css&quot; type=&quot;text/css&quot; /&gt;&lt;script src=&quot;js/jquery-1.11.3.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;script src=&quot;js/bootstrap.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;!-- 引入自定义css文件 style.css --&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;css/style.css&quot; type=&quot;text/css&quot; /&gt;&lt;style&gt;body &#123;    margin-top: 20px;    margin: 0 auto;&#125;.carousel-inner .item img &#123;    width: 100%;    height: 300px;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;!-- 引入header.jsp --&gt;    &lt;jsp:include page=&quot;/header.jsp&quot;&gt;&lt;/jsp:include&gt;    &lt;div class=&quot;container&quot;&gt;        &lt;div class=&quot;row&quot;&gt;            &lt;div style=&quot;margin: 0 auto; width: 950px;&quot;&gt;                &lt;div class=&quot;col-md-6&quot;&gt;                    &lt;img style=&quot;opacity: 1; width: 400px; height: 350px;&quot; title=&quot;&quot;                        class=&quot;medium&quot;                        src=&quot;$&#123;pageContext.request.contextPath&#125;/$&#123;p.pimage&#125;&quot;&gt;                &lt;/div&gt;                &lt;div class=&quot;col-md-6&quot;&gt;                    &lt;div&gt;                        &lt;strong&gt;$&#123;p.pname&#125;&lt;/strong&gt;                    &lt;/div&gt;                    &lt;div                        style=&quot;border-bottom: 1px dotted #dddddd; width: 350px; margin: 10px 0 10px 0;&quot;&gt;                        &lt;div&gt;编号：$&#123;p.pid&#125;&lt;/div&gt;                    &lt;/div&gt;                    &lt;div style=&quot;margin: 10px 0 10px 0;&quot;&gt;                        亿家价: &lt;strong style=&quot;color: #ef0101;&quot;&gt;￥：$&#123;p.shop_price&#125;元/份&lt;/strong&gt; 参 考 价：                        &lt;del&gt;￥$&#123;p.market_price&#125;元/份&lt;/del&gt;                    &lt;/div&gt;                    &lt;div style=&quot;margin: 10px 0 10px 0;&quot;&gt;                        促销: &lt;a target=&quot;_blank&quot; title=&quot;限时抢购 (2014-07-30 ~ 2015-01-01)&quot;                            style=&quot;background-color: #f07373;&quot;&gt;限时抢购&lt;/a&gt;                    &lt;/div&gt;                    &lt;div                        style=&quot;padding: 10px; border: 1px solid #e7dbb1; width: 330px; margin: 15px 0 10px 0;; background-color: #fffee6;&quot;&gt;                        &lt;div style=&quot;margin: 5px 0 10px 0;&quot;&gt;白色&lt;/div&gt;                        &lt;div                            style=&quot;border-bottom: 1px solid #faeac7; margin-top: 20px; padding-left: 10px;&quot;&gt;                            购买数量: &lt;input id=&quot;quantity&quot; name=&quot;quantity&quot; value=&quot;1&quot;                                maxlength=&quot;4&quot; size=&quot;10&quot; type=&quot;text&quot;&gt;                        &lt;/div&gt;                        &lt;div style=&quot;margin: 20px 0 10px 0;; text-align: center;&quot;&gt;                            &lt;a href=&quot;cart.htm&quot;&gt; &lt;input                                style=&quot;background: url(&#39;./images/product.gif&#39;) no-repeat scroll 0 -600px rgba(0, 0, 0, 0); height: 36px; width: 127px;&quot;                                value=&quot;加入购物车&quot; type=&quot;button&quot;&gt;                            &lt;/a&gt; &amp;nbsp;收藏商品                        &lt;/div&gt;                    &lt;/div&gt;                &lt;/div&gt;            &lt;/div&gt;            &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;            &lt;div style=&quot;width: 950px; margin: 0 auto;&quot;&gt;                &lt;div                    style=&quot;background-color: #d3d3d3; width: 930px; padding: 10px 10px; margin: 10px 0 10px 0;&quot;&gt;                    &lt;strong&gt;商品介绍&lt;/strong&gt;                &lt;/div&gt;                &lt;div&gt;                    &lt;img                        src=&quot;image/r___________renleipic_01/bigPic139f030b-d68b-41dd-be6d-b94cc568d3c5.jpg&quot;&gt;                &lt;/div&gt;                &lt;div                    style=&quot;background-color: #d3d3d3; width: 930px; padding: 10px 10px; margin: 10px 0 10px 0;&quot;&gt;                    &lt;strong&gt;商品参数&lt;/strong&gt;                &lt;/div&gt;                &lt;div style=&quot;margin-top: 10px; width: 900px;&quot;&gt;                    &lt;table class=&quot;table table-bordered&quot;&gt;                        &lt;tbody&gt;                            &lt;tr class=&quot;active&quot;&gt;                                &lt;th colspan=&quot;2&quot;&gt;基本参数&lt;/th&gt;                            &lt;/tr&gt;                            &lt;tr&gt;                                &lt;th width=&quot;10%&quot;&gt;级别&lt;/th&gt;                                &lt;td width=&quot;30%&quot;&gt;标准&lt;/td&gt;                            &lt;/tr&gt;                            &lt;tr&gt;                                &lt;th width=&quot;10%&quot;&gt;标重&lt;/th&gt;                                &lt;td&gt;500&lt;/td&gt;                            &lt;/tr&gt;                            &lt;tr&gt;                                &lt;th width=&quot;10%&quot;&gt;浮动&lt;/th&gt;                                &lt;td&gt;200&lt;/td&gt;                            &lt;/tr&gt;                        &lt;/tbody&gt;                    &lt;/table&gt;                &lt;/div&gt;                                            &lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;    &lt;!-- 引入footer.jsp --&gt;    &lt;jsp:include page=&quot;/footer.jsp&quot;&gt;&lt;/jsp:include&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><strong>ProductServlet.java</strong></p><pre><code>package com.oracle.servlet;import java.io.IOException;import java.sql.SQLException;import java.util.List;import javax.servlet.ServletException;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import com.oracle.bean.Product;import com.oracle.service.ProductService;public class ProductServlet extends HttpServlet &#123;    private static final long serialVersionUID = 1L;    public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;        String method = request.getParameter(&quot;method&quot;);        if(&quot;getProById&quot;.equals(method)) &#123;            getProById(request, response);        &#125;else if(&quot;findListByCate&quot;.equals(method)) &#123;            findListByCate(request, response);        &#125;    &#125;    public void findListByCate(HttpServletRequest request, HttpServletResponse response) &#123;        // TODO Auto-generated method stub        try &#123;            String cid = request.getParameter(&quot;cid&quot;);            ProductService ps = new ProductService();            List&lt;Product&gt; plist = ps.findListByCate(cid);                        request.setAttribute(&quot;plist&quot;, plist);            request.getRequestDispatcher(&quot;/product_list.jsp&quot;).forward(request, response);        &#125; catch (Exception e) &#123;            // TODO Auto-generated catch block            e.printStackTrace();        &#125;            &#125;    public void getProById(HttpServletRequest request, HttpServletResponse response) &#123;        // TODO Auto-generated method stub        try &#123;            String pid = request.getParameter(&quot;pid&quot;);                        ProductService ps = new ProductService();            Product p = ps.getProById(pid);                        request.setAttribute(&quot;p&quot;, p);            request.getRequestDispatcher(&quot;/product_info.jsp&quot;).forward(request, response);                    &#125; catch (Exception e) &#123;            // TODO Auto-generated catch block            e.printStackTrace();        &#125;            &#125;    public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;        doGet(request, response);    &#125;&#125;</code></pre><p><strong>ProductService.java</strong></p><pre><code>package com.oracle.service;import java.sql.SQLException;import java.util.List;import com.oracle.bean.Category;import com.oracle.bean.Product;import com.oracle.dao.ProductDao;public class ProductService &#123;    public List&lt;Product&gt; findProList() throws SQLException &#123;        // TODO Auto-generated method stub        ProductDao pd = new ProductDao();        List&lt;Product&gt; list = pd.findProList();        return list;    &#125;    public List&lt;Category&gt; findCateList() throws SQLException &#123;        // TODO Auto-generated method stub        ProductDao pd = new ProductDao();        List&lt;Category&gt; clist = pd.findCateList();        return clist;    &#125;    public Product getProById(String pid) throws SQLException &#123;        // TODO Auto-generated method stub        ProductDao pd = new ProductDao();        Product p = pd.getProById(pid);        return p;    &#125;    public List&lt;Product&gt; findListByCate(String cid) throws SQLException &#123;        // TODO Auto-generated method stub        ProductDao pd = new ProductDao();        List&lt;Product&gt; plist = pd.findListByCate(cid);        return plist;    &#125;&#125;</code></pre><p><strong>ProductDao.java</strong></p><pre><code>package com.oracle.dao;import java.sql.SQLException;import java.util.List;import org.apache.commons.dbutils.QueryRunner;import org.apache.commons.dbutils.handlers.BeanHandler;import org.apache.commons.dbutils.handlers.BeanListHandler;import com.oracle.bean.Category;import com.oracle.bean.Product;import com.oracle.utils.DataSourceUtils;public class ProductDao &#123;    public List&lt;Product&gt; findProList() throws SQLException &#123;        // TODO Auto-generated method stub        QueryRunner qr = new QueryRunner(DataSourceUtils.getDataSource());                String sql = &quot;select * from product where pflag=? order by pdate desc limit 0,9&quot;;                List&lt;Product&gt; list = qr.query(sql, new BeanListHandler&lt;&gt;(Product.class), 0);        return list;    &#125;    public List&lt;Category&gt; findCateList() throws SQLException &#123;        // TODO Auto-generated method stub        QueryRunner qr = new QueryRunner(DataSourceUtils.getDataSource());                String sql = &quot;select * from category&quot;;                List&lt;Category&gt; clist = qr.query(sql, new BeanListHandler&lt;&gt;(Category.class));        return clist;    &#125;    public Product getProById(String pid) throws SQLException &#123;        // TODO Auto-generated method stub        QueryRunner qr = new QueryRunner(DataSourceUtils.getDataSource());                String sql = &quot;select * from product where pid=?&quot;;                Product p = qr.query(sql, new BeanHandler&lt;&gt;(Product.class), pid);        return p;    &#125;    public List&lt;Product&gt; findListByCate(String cid) throws SQLException &#123;        // TODO Auto-generated method stub        QueryRunner qr = new QueryRunner(DataSourceUtils.getDataSource());                String sql = &quot;select * from product where cid=? and pflag=? order by pdate desc&quot;;                List&lt;Product&gt; plist = qr.query(sql, new BeanListHandler&lt;&gt;(Product.class), cid, 0);        return plist;    &#125;&#125;</code></pre><p>2）点击菜单栏的商品类别显示对应类别的商品（与（1）都使用上面列出的ProductServlet/ProductService/ProductDao）<br><strong>header.jsp</strong></p><pre><code>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;    pageEncoding=&quot;UTF-8&quot;%&gt;&lt;%@taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot;%&gt;&lt;!DOCTYPE html&gt;&lt;!-- 登录 注册 购物车... --&gt;&lt;div class=&quot;container-fluid&quot;&gt;    &lt;div class=&quot;col-md-4&quot;&gt;        &lt;img src=&quot;img/logo2.png&quot; /&gt;    &lt;/div&gt;    &lt;div class=&quot;col-md-5&quot;&gt;        &lt;img src=&quot;img/header.png&quot; /&gt;    &lt;/div&gt;    &lt;div class=&quot;col-md-3&quot; style=&quot;padding-top:20px&quot;&gt;        &lt;ol class=&quot;list-inline&quot;&gt;            &lt;c:if test=&quot;$&#123;empty user&#125;&quot;&gt;                &lt;li&gt;&lt;a href=&quot;login.jsp&quot;&gt;登录&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a href=&quot;register.jsp&quot;&gt;注册&lt;/a&gt;&lt;/li&gt;            &lt;/c:if&gt;            &lt;c:if test=&quot;$&#123;not empty user&#125;&quot;&gt;                &lt;li&gt;$&#123;user.username&#125;&lt;/li&gt;                &lt;li&gt;&lt;a href=&quot;cart.jsp&quot;&gt;购物车&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a href=&quot;order_list.jsp&quot;&gt;我的订单&lt;/a&gt;&lt;/li&gt;            &lt;/c:if&gt;        &lt;/ol&gt;    &lt;/div&gt;&lt;/div&gt;&lt;!-- 导航条 --&gt;&lt;div class=&quot;container-fluid&quot;&gt;    &lt;nav class=&quot;navbar navbar-inverse&quot;&gt;        &lt;div class=&quot;container-fluid&quot;&gt;            &lt;!-- Brand and toggle get grouped for better mobile display --&gt;            &lt;div class=&quot;navbar-header&quot;&gt;                &lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#bs-example-navbar-collapse-1&quot; aria-expanded=&quot;false&quot;&gt;                    &lt;span class=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt;                    &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;                    &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;                    &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;                &lt;/button&gt;                &lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&gt;首页&lt;/a&gt;            &lt;/div&gt;            &lt;div class=&quot;collapse navbar-collapse&quot; id=&quot;bs-example-navbar-collapse-1&quot;&gt;                &lt;ul class=&quot;nav navbar-nav&quot;&gt;                    &lt;c:forEach items=&quot;$&#123;clist&#125;&quot; var=&quot;cate&quot;&gt;                        &lt;li&gt;&lt;a href=&quot;$&#123;pageContext.request.contextPath&#125;/product?method=findListByCate&amp;cid=$&#123;cate.cid&#125;&quot;&gt;$&#123;cate.cname&#125;&lt;/a&gt;&lt;/li&gt;                    &lt;/c:forEach&gt;                &lt;/ul&gt;                &lt;form class=&quot;navbar-form navbar-right&quot; role=&quot;search&quot;&gt;                    &lt;div class=&quot;form-group&quot;&gt;                        &lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;Search&quot;&gt;                    &lt;/div&gt;                    &lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;Submit&lt;/button&gt;                &lt;/form&gt;            &lt;/div&gt;        &lt;/div&gt;    &lt;/nav&gt;&lt;/div&gt;</code></pre><p><strong>product_list.jsp</strong></p><pre><code>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;    pageEncoding=&quot;UTF-8&quot;%&gt;&lt;%@taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;&lt;title&gt;会员登录&lt;/title&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;css/bootstrap.min.css&quot; type=&quot;text/css&quot; /&gt;&lt;script src=&quot;js/jquery-1.11.3.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;script src=&quot;js/bootstrap.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;!-- 引入自定义css文件 style.css --&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;css/style.css&quot; type=&quot;text/css&quot; /&gt;&lt;style&gt;body &#123;    margin-top: 20px;    margin: 0 auto;    width: 100%;&#125;.carousel-inner .item img &#123;    width: 100%;    height: 300px;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;!-- 引入header.jsp --&gt;    &lt;jsp:include page=&quot;/header.jsp&quot;&gt;&lt;/jsp:include&gt;    &lt;div class=&quot;row&quot; style=&quot;width: 1210px; margin: 0 auto;&quot;&gt;                &lt;c:forEach items=&quot;$&#123;plist&#125;&quot; var=&quot;pro&quot;&gt;            &lt;div class=&quot;col-md-2&quot;&gt;                &lt;a href=&quot;$&#123;pageContext.request.contextPath&#125;/product?method=getProById&amp;pid=$&#123;pro.pid&#125;&quot;&gt;                     &lt;img src=&quot;$&#123;pageContext.request.contextPath&#125;/$&#123;pro.pimage&#125;&quot; width=&quot;170&quot; height=&quot;170&quot; style=&quot;display: inline-block;&quot;&gt;                &lt;/a&gt;                &lt;p&gt;                    &lt;a href=&quot;product_info.html&quot; style=&#39;color: green&#39;&gt;$&#123;pro.pname&#125;&lt;/a&gt;                &lt;/p&gt;                &lt;p&gt;                    &lt;font color=&quot;#FF0000&quot;&gt;商城价：&amp;yen;$&#123;pro.shop_price&#125;&lt;/font&gt;                &lt;/p&gt;            &lt;/div&gt;        &lt;/c:forEach&gt;    &lt;/div&gt;    &lt;!--分页 --&gt;    &lt;div style=&quot;width: 380px; margin: 0 auto; margin-top: 50px;&quot;&gt;        &lt;ul class=&quot;pagination&quot; style=&quot;text-align: center; margin-top: 10px;&quot;&gt;            &lt;li class=&quot;disabled&quot;&gt;&lt;a href=&quot;#&quot; aria-label=&quot;Previous&quot;&gt;&lt;span                    aria-hidden=&quot;true&quot;&gt;&amp;laquo;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;            &lt;li class=&quot;active&quot;&gt;&lt;a href=&quot;#&quot;&gt;1&lt;/a&gt;&lt;/li&gt;            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;2&lt;/a&gt;&lt;/li&gt;            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;3&lt;/a&gt;&lt;/li&gt;            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;4&lt;/a&gt;&lt;/li&gt;            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;5&lt;/a&gt;&lt;/li&gt;            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;6&lt;/a&gt;&lt;/li&gt;            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;7&lt;/a&gt;&lt;/li&gt;            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;8&lt;/a&gt;&lt;/li&gt;            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;9&lt;/a&gt;&lt;/li&gt;            &lt;li&gt;&lt;a href=&quot;#&quot; aria-label=&quot;Next&quot;&gt; &lt;span aria-hidden=&quot;true&quot;&gt;&amp;raquo;&lt;/span&gt;            &lt;/a&gt;&lt;/li&gt;        &lt;/ul&gt;    &lt;/div&gt;    &lt;!-- 分页结束 --&gt;    &lt;!-- 引入footer.jsp --&gt;    &lt;jsp:include page=&quot;/footer.jsp&quot;&gt;&lt;/jsp:include&gt;&lt;/body&gt;&lt;/html&gt;</code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;商品详情页展示及分类商品列表显示&quot;&gt;&lt;a href=&quot;#商品详情页展示及分类商品列表显示&quot; class=&quot;headerlink&quot; title=&quot;商品详情页展示及分类商品列表显示&quot;&gt;&lt;/a&gt;商品详情页展示及分类商品列表显示&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;实现功能：&lt;/strong&gt;&lt;br&gt;1）点击某一个商品，网页显示商品的详情信息&lt;br&gt;&lt;strong&gt;改动index.jsp页面中的热门商品部分的代码,展示商品详情页&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="项目经历" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/"/>
    
    <category term="JavaWeb" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/"/>
    
    <category term="基于JavaWeb的网上购物商城" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/"/>
    
    <category term="商品详情页展示及分类商品列表显示" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/%E5%95%86%E5%93%81%E8%AF%A6%E6%83%85%E9%A1%B5%E5%B1%95%E7%A4%BA%E5%8F%8A%E5%88%86%E7%B1%BB%E5%95%86%E5%93%81%E5%88%97%E8%A1%A8%E6%98%BE%E7%A4%BA/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
    <category term="基于JavaWeb的网上购物商城" scheme="http://example.com/tags/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/"/>
    
  </entry>
  
  <entry>
    <title>基于JavaWeb的网上购物商城 | 菜单栏信息展示</title>
    <link href="http://example.com/2022/01/14/%E8%8F%9C%E5%8D%95%E6%A0%8F%E4%BF%A1%E6%81%AF%E5%B1%95%E7%A4%BA/"/>
    <id>http://example.com/2022/01/14/%E8%8F%9C%E5%8D%95%E6%A0%8F%E4%BF%A1%E6%81%AF%E5%B1%95%E7%A4%BA/</id>
    <published>2022-01-15T03:08:47.000Z</published>
    <updated>2022-01-15T03:22:13.511Z</updated>
    
    <content type="html"><![CDATA[<h1 id="菜单栏信息展示"><a href="#菜单栏信息展示" class="headerlink" title="菜单栏信息展示"></a>菜单栏信息展示</h1><p>实现功能：在网站首页的菜单栏显示所有的商品分类（登录/不登录状态下都会显示）—使用Filter实现<br>注：<br>（1）本功能的实现与首页热门商品展示类似<br>（2）需要将web.xml的LoginFilter的url-pattern路径配置为/*</p><span id="more"></span><p><strong>LoginFilter.java</strong><br>在实现首页热门商品展示的代码中进行功能添加(在LoginFilter.java的doFlter方法中添加如下码)</p><pre><code>public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)            throws IOException, ServletException &#123;        // TODO Auto-generated method stub        try &#123;            //收集首页数据            ProductService ps = new ProductService();            List&lt;Product&gt; list = ps.findProList();                        //收集导航栏信息            List&lt;Category&gt; clist = ps.findCateList();                        request.setAttribute(&quot;clist&quot;, clist);            request.setAttribute(&quot;list&quot;, list);            chain.doFilter(request, response);        &#125; catch (SQLException e) &#123;            // TODO Auto-generated catch block            e.printStackTrace();        &#125;    &#125;</code></pre><p><strong>创建Category.java</strong></p><pre><code>package com.oracle.bean;public class Category &#123;    private String cid;    private String cname;    public Category() &#123;        super();        // TODO Auto-generated constructor stub    &#125;    public Category(String cid, String cname) &#123;        super();        this.cid = cid;        this.cname = cname;    &#125;    public String getCid() &#123;        return cid;    &#125;    public void setCid(String cid) &#123;        this.cid = cid;    &#125;    public String getCname() &#123;        return cname;    &#125;    public void setCname(String cname) &#123;        this.cname = cname;    &#125;    &#125;</code></pre><p><strong>ProductService.java</strong><br>在实现首页热门商品展示的代码中进行功能添加(在ProductService.java中添加如下代码)</p><pre><code>public List&lt;Category&gt; findCateList() throws SQLException &#123;        // TODO Auto-generated method stub        ProductDao pd = new ProductDao();        List&lt;Category&gt; clist = pd.findCateList();        return clist;    &#125;    </code></pre><p><strong>ProductDao.java</strong><br>在实现首页热门商品展示的代码中进行功能添加(在ProductDao.java中添加如下代码)</p><pre><code>public List&lt;Category&gt; findCateList() throws SQLException &#123;        // TODO Auto-generated method stub        QueryRunner qr = new QueryRunner(DataSourceUtils.getDataSource());                String sql = &quot;select * from category&quot;;                List&lt;Category&gt; clist = qr.query(sql, new BeanListHandler&lt;&gt;(Category.class));        return clist;    &#125;</code></pre><p><strong>header.jsp</strong><br>修改header.jsp中的对应代码（如下所示）</p><pre><code>&lt;ul class=&quot;nav navbar-nav&quot;&gt;    &lt;c:forEach items=&quot;$&#123;clist&#125;&quot; var=&quot;cate&quot;&gt;        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;$&#123;cate.cname&#125;&lt;/a&gt;&lt;/li&gt;    &lt;/c:forEach&gt;&lt;/ul&gt;</code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;菜单栏信息展示&quot;&gt;&lt;a href=&quot;#菜单栏信息展示&quot; class=&quot;headerlink&quot; title=&quot;菜单栏信息展示&quot;&gt;&lt;/a&gt;菜单栏信息展示&lt;/h1&gt;&lt;p&gt;实现功能：在网站首页的菜单栏显示所有的商品分类（登录/不登录状态下都会显示）—使用Filter实现&lt;br&gt;注：&lt;br&gt;（1）本功能的实现与首页热门商品展示类似&lt;br&gt;（2）需要将web.xml的LoginFilter的url-pattern路径配置为/*&lt;/p&gt;</summary>
    
    
    
    <category term="项目经历" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/"/>
    
    <category term="JavaWeb" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/"/>
    
    <category term="基于JavaWeb的网上购物商城" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/"/>
    
    <category term="菜单栏信息展示" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/%E8%8F%9C%E5%8D%95%E6%A0%8F%E4%BF%A1%E6%81%AF%E5%B1%95%E7%A4%BA/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
    <category term="基于JavaWeb的网上购物商城" scheme="http://example.com/tags/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/"/>
    
  </entry>
  
  <entry>
    <title>基于JavaWeb的网上购物商城 | 首页热门商品展示</title>
    <link href="http://example.com/2022/01/14/%E9%A6%96%E9%A1%B5%E7%83%AD%E9%97%A8%E5%95%86%E5%93%81%E5%B1%95%E7%A4%BA/"/>
    <id>http://example.com/2022/01/14/%E9%A6%96%E9%A1%B5%E7%83%AD%E9%97%A8%E5%95%86%E5%93%81%E5%B1%95%E7%A4%BA/</id>
    <published>2022-01-15T02:19:07.000Z</published>
    <updated>2022-01-15T02:31:21.776Z</updated>
    
    <content type="html"><![CDATA[<h1 id="首页热门商品展示"><a href="#首页热门商品展示" class="headerlink" title="首页热门商品展示"></a>首页热门商品展示</h1><p>实现功能：在网站首页显示热门商品或最新上架商品（登录/不登录状态下都会显示）—使用Filter实现</p><span id="more"></span><p><strong>LoginFilter.java(src/com.oracle.filter)</strong></p><pre><code>package com.oracle.filter;import java.io.IOException;import java.sql.SQLException;import java.util.List;import javax.servlet.Filter;import javax.servlet.FilterChain;import javax.servlet.FilterConfig;import javax.servlet.ServletException;import javax.servlet.ServletRequest;import javax.servlet.ServletResponse;import com.oracle.bean.Product;import com.oracle.service.ProductService;public class LoginFilter implements Filter&#123;    @Override    public void destroy() &#123;        // TODO Auto-generated method stub            &#125;    @Override    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)            throws IOException, ServletException &#123;        // TODO Auto-generated method stub        try &#123;            //收集首页数据            ProductService ps = new ProductService();            List&lt;Product&gt; list = ps.findProList();                        request.setAttribute(&quot;list&quot;, list);                        chain.doFilter(request, response);//放行        &#125; catch (SQLException e) &#123;            // TODO Auto-generated catch block            e.printStackTrace();        &#125;    &#125;    @Override    public void init(FilterConfig arg0) throws ServletException &#123;        // TODO Auto-generated method stub            &#125;&#125;</code></pre><p><strong>Product.java(src/com.oracle.bean)</strong></p><pre><code>package com.oracle.bean;public class Product &#123;////Field Type Comment//pidvar char(64) NOT NULL//pname varchar(50) NULL//market_price double NULL//shop_price double NULL//pimage varchar(200) NULL//pdate date NULL//is_hot int(11) NULL//pdesc varchar(255) NULL//pflag int(11) NULL//cid varchar(64) NULL    private String pid;    private String pname;    private double market_price;    private double shop_price;    private String pimage;    private String pdate;    private int is_hot;    private String pdesc;    private int pflag;    private String cid;    public Product() &#123;        super();        // TODO Auto-generated constructor stub    &#125;    public Product(String pid, String pname, double market_price, double shop_price, String pimage, String pdate,            int is_hot, String pdesc, int pflag, String cid) &#123;        super();        this.pid = pid;        this.pname = pname;        this.market_price = market_price;        this.shop_price = shop_price;        this.pimage = pimage;        this.pdate = pdate;        this.is_hot = is_hot;        this.pdesc = pdesc;        this.pflag = pflag;        this.cid = cid;    &#125;    public String getPid() &#123;        return pid;    &#125;    public void setPid(String pid) &#123;        this.pid = pid;    &#125;    public String getPname() &#123;        return pname;    &#125;    public void setPname(String pname) &#123;        this.pname = pname;    &#125;    public double getMarket_price() &#123;        return market_price;    &#125;    public void setMarket_price(double market_price) &#123;        this.market_price = market_price;    &#125;    public double getShop_price() &#123;        return shop_price;    &#125;    public void setShop_price(double shop_price) &#123;        this.shop_price = shop_price;    &#125;    public String getPimage() &#123;        return pimage;    &#125;    public void setPimage(String pimage) &#123;        this.pimage = pimage;    &#125;    public String getPdate() &#123;        return pdate;    &#125;    public void setPdate(String pdate) &#123;        this.pdate = pdate;    &#125;    public int getIs_hot() &#123;        return is_hot;    &#125;    public void setIs_hot(int is_hot) &#123;        this.is_hot = is_hot;    &#125;    public String getPdesc() &#123;        return pdesc;    &#125;    public void setPdesc(String pdesc) &#123;        this.pdesc = pdesc;    &#125;    public int getPflag() &#123;        return pflag;    &#125;    public void setPflag(int pflag) &#123;        this.pflag = pflag;    &#125;    public String getCid() &#123;        return cid;    &#125;    public void setCid(String cid) &#123;        this.cid = cid;    &#125;&#125;</code></pre><p><strong>ProductService.java(src/com.oracle.service)</strong></p><pre><code>package com.oracle.service;import java.sql.SQLException;import java.util.List;import com.oracle.bean.Product;import com.oracle.dao.ProductDao;public class ProductService &#123;    public List&lt;Product&gt; findProList() throws SQLException &#123;        // TODO Auto-generated method stub        ProductDao pd = new ProductDao();        List&lt;Product&gt; list = pd.findProList();        return list;    &#125;&#125;</code></pre><p><strong>ProductDao.java(src/com.oracle.dao)</strong></p><pre><code>package com.oracle.dao;import java.sql.SQLException;import java.util.List;import org.apache.commons.dbutils.QueryRunner;import org.apache.commons.dbutils.handlers.BeanListHandler;import com.oracle.bean.Product;import com.oracle.utils.DataSourceUtils;public class ProductDao &#123;    public List&lt;Product&gt; findProList() throws SQLException &#123;        // TODO Auto-generated method stub        QueryRunner qr = new QueryRunner(DataSourceUtils.getDataSource());                String sql = &quot;select * from product where pflag=? order by pdate desc limit 0,9&quot;;                List&lt;Product&gt; list = qr.query(sql, new BeanListHandler&lt;&gt;(Product.class), 0);        return list;    &#125;&#125;</code></pre><p><strong>index.jsp</strong>(WebContent/)<br>在热门商品部分使用jstl标签和el表达式解析查询到的数据。</p><pre><code>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;    pageEncoding=&quot;UTF-8&quot;%&gt;&lt;%@taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;    &lt;head&gt;        &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;        &lt;title&gt;oracle商城首页&lt;/title&gt;        &lt;link rel=&quot;stylesheet&quot; href=&quot;css/bootstrap.min.css&quot; type=&quot;text/css&quot; /&gt;        &lt;script src=&quot;js/jquery-1.11.3.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;        &lt;script src=&quot;js/bootstrap.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;    &lt;/head&gt;    &lt;body&gt;        &lt;div class=&quot;container-fluid&quot;&gt;            &lt;!-- 引入header.jsp --&gt;            &lt;jsp:include page=&quot;/header.jsp&quot;&gt;&lt;/jsp:include&gt;            &lt;!-- 轮播图 --&gt;            &lt;div class=&quot;container-fluid&quot;&gt;                &lt;div id=&quot;carousel-example-generic&quot; class=&quot;carousel slide&quot; data-ride=&quot;carousel&quot;&gt;                    &lt;!-- 轮播图的中的小点 --&gt;                    &lt;ol class=&quot;carousel-indicators&quot;&gt;                        &lt;li data-target=&quot;#carousel-example-generic&quot; data-slide-to=&quot;0&quot; class=&quot;active&quot;&gt;&lt;/li&gt;                        &lt;li data-target=&quot;#carousel-example-generic&quot; data-slide-to=&quot;1&quot;&gt;&lt;/li&gt;                        &lt;li data-target=&quot;#carousel-example-generic&quot; data-slide-to=&quot;2&quot;&gt;&lt;/li&gt;                    &lt;/ol&gt;                    &lt;!-- 轮播图的轮播图片 --&gt;                    &lt;div class=&quot;carousel-inner&quot; role=&quot;listbox&quot;&gt;                        &lt;div class=&quot;item active&quot;&gt;                            &lt;img src=&quot;img/1.jpg&quot;&gt;                            &lt;div class=&quot;carousel-caption&quot;&gt;                                &lt;!-- 轮播图上的文字 --&gt;                            &lt;/div&gt;                        &lt;/div&gt;                        &lt;div class=&quot;item&quot;&gt;                            &lt;img src=&quot;img/2.jpg&quot;&gt;                            &lt;div class=&quot;carousel-caption&quot;&gt;                                &lt;!-- 轮播图上的文字 --&gt;                            &lt;/div&gt;                        &lt;/div&gt;                        &lt;div class=&quot;item&quot;&gt;                            &lt;img src=&quot;img/3.jpg&quot;&gt;                            &lt;div class=&quot;carousel-caption&quot;&gt;                                &lt;!-- 轮播图上的文字 --&gt;                            &lt;/div&gt;                        &lt;/div&gt;                    &lt;/div&gt;                    &lt;!-- 上一张 下一张按钮 --&gt;                    &lt;a class=&quot;left carousel-control&quot; href=&quot;#carousel-example-generic&quot; role=&quot;button&quot; data-slide=&quot;prev&quot;&gt;                        &lt;span class=&quot;glyphicon glyphicon-chevron-left&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;                        &lt;span class=&quot;sr-only&quot;&gt;Previous&lt;/span&gt;                    &lt;/a&gt;                    &lt;a class=&quot;right carousel-control&quot; href=&quot;#carousel-example-generic&quot; role=&quot;button&quot; data-slide=&quot;next&quot;&gt;                        &lt;span class=&quot;glyphicon glyphicon-chevron-right&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;                        &lt;span class=&quot;sr-only&quot;&gt;Next&lt;/span&gt;                    &lt;/a&gt;                &lt;/div&gt;            &lt;/div&gt;                        &lt;!-- 热门商品 --&gt;            &lt;div class=&quot;container-fluid&quot;&gt;                &lt;div class=&quot;col-md-12&quot;&gt;                    &lt;h2&gt;热门商品&amp;nbsp;&amp;nbsp;&lt;img src=&quot;img/title2.jpg&quot;/&gt;&lt;/h2&gt;                &lt;/div&gt;                &lt;div class=&quot;col-md-2&quot; style=&quot;border:1px solid #E7E7E7;border-right:0;padding:0;&quot;&gt;                    &lt;img src=&quot;products/hao/big01.jpg&quot; width=&quot;205&quot; height=&quot;404&quot; style=&quot;display: inline-block;&quot;/&gt;                &lt;/div&gt;                &lt;div class=&quot;col-md-10&quot;&gt;                    &lt;div class=&quot;col-md-6&quot; style=&quot;text-align:center;height:200px;padding:0px;&quot;&gt;                        &lt;a href=&quot;product_info.htm&quot;&gt;                            &lt;img src=&quot;products/hao/middle01.jpg&quot; width=&quot;516px&quot; height=&quot;200px&quot; style=&quot;display: inline-block;&quot;&gt;                        &lt;/a&gt;                    &lt;/div&gt;                                        &lt;c:forEach items=&quot;$&#123;list&#125;&quot; var=&quot;pro&quot;&gt;                        &lt;div class=&quot;col-md-2&quot; style=&quot;text-align:center;height:200px;padding:10px 0px;&quot;&gt;                            &lt;a href=&quot;product_info.htm&quot;&gt;                                &lt;img src=&quot;$&#123;pageContext.request.contextPath&#125;/$&#123;pro.pimage&#125;&quot; width=&quot;130&quot; height=&quot;130&quot; style=&quot;display: inline-block;&quot;&gt;                            &lt;/a&gt;                            &lt;p&gt;&lt;a href=&quot;product_info.html&quot; style=&#39;color:#666&#39;&gt;$&#123;pro.pname&#125;&lt;/a&gt;&lt;/p&gt;                            &lt;p&gt;&lt;font color=&quot;#E4393C&quot; style=&quot;font-size:16px&quot;&gt;&amp;yen;$&#123;pro.shop_price&#125;&lt;/font&gt;&lt;/p&gt;                        &lt;/div&gt;                    &lt;/c:forEach&gt;                &lt;/div&gt;            &lt;/div&gt;                        &lt;!-- 广告条 --&gt;            &lt;div class=&quot;container-fluid&quot;&gt;                &lt;img src=&quot;products/hao/ad.jpg&quot; width=&quot;100%&quot;/&gt;            &lt;/div&gt;                        &lt;!-- 最新商品 --&gt;            &lt;div class=&quot;container-fluid&quot;&gt;                &lt;div class=&quot;col-md-12&quot;&gt;                    &lt;h2&gt;最新商品&amp;nbsp;&amp;nbsp;&lt;img src=&quot;img/title2.jpg&quot;/&gt;&lt;/h2&gt;                &lt;/div&gt;                &lt;div class=&quot;col-md-2&quot; style=&quot;border:1px solid #E7E7E7;border-right:0;padding:0;&quot;&gt;                    &lt;img src=&quot;products/hao/big01.jpg&quot; width=&quot;205&quot; height=&quot;404&quot; style=&quot;display: inline-block;&quot;/&gt;                &lt;/div&gt;                &lt;div class=&quot;col-md-10&quot;&gt;                    &lt;div class=&quot;col-md-6&quot; style=&quot;text-align:center;height:200px;padding:0px;&quot;&gt;                        &lt;a href=&quot;product_info.htm&quot;&gt;                            &lt;img src=&quot;products/hao/middle01.jpg&quot; width=&quot;516px&quot; height=&quot;200px&quot; style=&quot;display: inline-block;&quot;&gt;                        &lt;/a&gt;                    &lt;/div&gt;                                    &lt;div class=&quot;col-md-2&quot; style=&quot;text-align:center;height:200px;padding:10px 0px;&quot;&gt;                        &lt;a href=&quot;product_info.htm&quot;&gt;                            &lt;img src=&quot;products/hao/small03.jpg&quot; width=&quot;130&quot; height=&quot;130&quot; style=&quot;display: inline-block;&quot;&gt;                        &lt;/a&gt;                        &lt;p&gt;&lt;a href=&quot;product_info.html&quot; style=&#39;color:#666&#39;&gt;冬瓜&lt;/a&gt;&lt;/p&gt;                        &lt;p&gt;&lt;font color=&quot;#E4393C&quot; style=&quot;font-size:16px&quot;&gt;&amp;yen;299.00&lt;/font&gt;&lt;/p&gt;                    &lt;/div&gt;                        &lt;div class=&quot;col-md-2&quot; style=&quot;text-align:center;height:200px;padding:10px 0px;&quot;&gt;                        &lt;a href=&quot;product_info.htm&quot;&gt;                            &lt;img src=&quot;products/hao/small04.jpg&quot; width=&quot;130&quot; height=&quot;130&quot; style=&quot;display: inline-block;&quot;&gt;                        &lt;/a&gt;                        &lt;p&gt;&lt;a href=&quot;product_info.html&quot; style=&#39;color:#666&#39;&gt;冬瓜&lt;/a&gt;&lt;/p&gt;                        &lt;p&gt;&lt;font color=&quot;#E4393C&quot; style=&quot;font-size:16px&quot;&gt;&amp;yen;299.00&lt;/font&gt;&lt;/p&gt;                    &lt;/div&gt;                    &lt;div class=&quot;col-md-2 yes-right-border&quot; style=&quot;text-align:center;height:200px;padding:10px 0px;&quot;&gt;                        &lt;a href=&quot;product_info.htm&quot;&gt;                            &lt;img src=&quot;products/hao/small05.jpg&quot; width=&quot;130&quot; height=&quot;130&quot; style=&quot;display: inline-block;&quot;&gt;                        &lt;/a&gt;                        &lt;p&gt;&lt;a href=&quot;product_info.html&quot; style=&#39;color:#666&#39;&gt;冬瓜&lt;/a&gt;&lt;/p&gt;                        &lt;p&gt;&lt;font color=&quot;#E4393C&quot; style=&quot;font-size:16px&quot;&gt;&amp;yen;299.00&lt;/font&gt;&lt;/p&gt;                    &lt;/div&gt;                                        &lt;div class=&quot;col-md-2&quot; style=&quot;text-align:center;height:200px;padding:10px 0px;&quot;&gt;                        &lt;a href=&quot;product_info.htm&quot;&gt;                            &lt;img src=&quot;products/hao/small03.jpg&quot; width=&quot;130&quot; height=&quot;130&quot; style=&quot;display: inline-block;&quot;&gt;                        &lt;/a&gt;                        &lt;p&gt;&lt;a href=&quot;product_info.html&quot; style=&#39;color:#666&#39;&gt;冬瓜&lt;/a&gt;&lt;/p&gt;                        &lt;p&gt;&lt;font color=&quot;#E4393C&quot; style=&quot;font-size:16px&quot;&gt;&amp;yen;299.00&lt;/font&gt;&lt;/p&gt;                    &lt;/div&gt;                        &lt;div class=&quot;col-md-2&quot; style=&quot;text-align:center;height:200px;padding:10px 0px;&quot;&gt;                        &lt;a href=&quot;product_info.htm&quot;&gt;                            &lt;img src=&quot;products/hao/small04.jpg&quot; width=&quot;130&quot; height=&quot;130&quot; style=&quot;display: inline-block;&quot;&gt;                        &lt;/a&gt;                        &lt;p&gt;&lt;a href=&quot;product_info.html&quot; style=&#39;color:#666&#39;&gt;冬瓜&lt;/a&gt;&lt;/p&gt;                        &lt;p&gt;&lt;font color=&quot;#E4393C&quot; style=&quot;font-size:16px&quot;&gt;&amp;yen;299.00&lt;/font&gt;&lt;/p&gt;                    &lt;/div&gt;                    &lt;div class=&quot;col-md-2 yes-right-border&quot; style=&quot;text-align:center;height:200px;padding:10px 0px;&quot;&gt;                        &lt;a href=&quot;product_info.htm&quot;&gt;                            &lt;img src=&quot;products/hao/small05.jpg&quot; width=&quot;130&quot; height=&quot;130&quot; style=&quot;display: inline-block;&quot;&gt;                        &lt;/a&gt;                        &lt;p&gt;&lt;a href=&quot;product_info.html&quot; style=&#39;color:#666&#39;&gt;冬瓜&lt;/a&gt;&lt;/p&gt;                        &lt;p&gt;&lt;font color=&quot;#E4393C&quot; style=&quot;font-size:16px&quot;&gt;&amp;yen;299.00&lt;/font&gt;&lt;/p&gt;                    &lt;/div&gt;                    &lt;div class=&quot;col-md-2&quot; style=&quot;text-align:center;height:200px;padding:10px 0px;&quot;&gt;                        &lt;a href=&quot;product_info.htm&quot;&gt;                            &lt;img src=&quot;products/hao/small03.jpg&quot; width=&quot;130&quot; height=&quot;130&quot; style=&quot;display: inline-block;&quot;&gt;                        &lt;/a&gt;                        &lt;p&gt;&lt;a href=&quot;product_info.html&quot; style=&#39;color:#666&#39;&gt;冬瓜&lt;/a&gt;&lt;/p&gt;                        &lt;p&gt;&lt;font color=&quot;#E4393C&quot; style=&quot;font-size:16px&quot;&gt;&amp;yen;299.00&lt;/font&gt;&lt;/p&gt;                    &lt;/div&gt;                        &lt;div class=&quot;col-md-2&quot; style=&quot;text-align:center;height:200px;padding:10px 0px;&quot;&gt;                        &lt;a href=&quot;product_info.htm&quot;&gt;                            &lt;img src=&quot;products/hao/small04.jpg&quot; width=&quot;130&quot; height=&quot;130&quot; style=&quot;display: inline-block;&quot;&gt;                        &lt;/a&gt;                        &lt;p&gt;&lt;a href=&quot;product_info.html&quot; style=&#39;color:#666&#39;&gt;冬瓜&lt;/a&gt;&lt;/p&gt;                        &lt;p&gt;&lt;font color=&quot;#E4393C&quot; style=&quot;font-size:16px&quot;&gt;&amp;yen;299.00&lt;/font&gt;&lt;/p&gt;                    &lt;/div&gt;                    &lt;div class=&quot;col-md-2 yes-right-border&quot; style=&quot;text-align:center;height:200px;padding:10px 0px;&quot;&gt;                        &lt;a href=&quot;product_info.htm&quot;&gt;                            &lt;img src=&quot;products/hao/small05.jpg&quot; width=&quot;130&quot; height=&quot;130&quot; style=&quot;display: inline-block;&quot;&gt;                        &lt;/a&gt;                        &lt;p&gt;&lt;a href=&quot;product_info.html&quot; style=&#39;color:#666&#39;&gt;冬瓜&lt;/a&gt;&lt;/p&gt;                        &lt;p&gt;&lt;font color=&quot;#E4393C&quot; style=&quot;font-size:16px&quot;&gt;&amp;yen;299.00&lt;/font&gt;&lt;/p&gt;                    &lt;/div&gt;                &lt;/div&gt;            &lt;/div&gt;                                    &lt;!-- 引入footer.jsp --&gt;            &lt;jsp:include page=&quot;/footer.jsp&quot;&gt;&lt;/jsp:include&gt;                    &lt;/div&gt;    &lt;/body&gt;&lt;/html&gt;</code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;首页热门商品展示&quot;&gt;&lt;a href=&quot;#首页热门商品展示&quot; class=&quot;headerlink&quot; title=&quot;首页热门商品展示&quot;&gt;&lt;/a&gt;首页热门商品展示&lt;/h1&gt;&lt;p&gt;实现功能：在网站首页显示热门商品或最新上架商品（登录/不登录状态下都会显示）—使用Filter实现&lt;/p&gt;</summary>
    
    
    
    <category term="项目经历" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/"/>
    
    <category term="JavaWeb" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/"/>
    
    <category term="基于JavaWeb的网上购物商城" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/"/>
    
    <category term="首页热门商品展示" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/%E9%A6%96%E9%A1%B5%E7%83%AD%E9%97%A8%E5%95%86%E5%93%81%E5%B1%95%E7%A4%BA/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
    <category term="基于JavaWeb的网上购物商城" scheme="http://example.com/tags/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/"/>
    
  </entry>
  
  <entry>
    <title>基于JavaWeb的网上购物商城 | 登录成功后网页头部显示用户名</title>
    <link href="http://example.com/2022/01/13/%E7%99%BB%E5%BD%95%E6%88%90%E5%8A%9F%E5%90%8E%E7%BD%91%E9%A1%B5%E5%A4%B4%E9%83%A8%E6%98%BE%E7%A4%BA%E7%94%A8%E6%88%B7%E5%90%8D/"/>
    <id>http://example.com/2022/01/13/%E7%99%BB%E5%BD%95%E6%88%90%E5%8A%9F%E5%90%8E%E7%BD%91%E9%A1%B5%E5%A4%B4%E9%83%A8%E6%98%BE%E7%A4%BA%E7%94%A8%E6%88%B7%E5%90%8D/</id>
    <published>2022-01-14T03:25:06.000Z</published>
    <updated>2022-01-14T03:38:01.165Z</updated>
    
    <content type="html"><![CDATA[<h1 id="登录成功后网页头部显示用户名"><a href="#登录成功后网页头部显示用户名" class="headerlink" title="登录成功后网页头部显示用户名"></a>登录成功后网页头部显示用户名</h1><p>要实现登录成功后在网页头部显示用户名，只需在登录成功后将当前用户存入session,然后在登录页面使用jstl语法判断用户状态，<br>登录成功则显示用户名。</p><ol><li>在UserServlet.java中添加将当前用户加入session中的代码<br>public void login(HttpServletRequest request, HttpServletResponse response) {<pre><code> ...... if(user!=null) &#123;     HttpSession session = request.getSession();     session.setAttribute(&quot;user&quot;, user);//将当前用户(User)加入session          request.getRequestDispatcher(&quot;/index.jsp&quot;).forward(request, response); &#125; ......</code></pre> }</li><li>修改header.jsp代码<br>使用jstl代码判断当前用户是否为空，若为空，显示登录注册链接，若不为空显示用户名等信息。</li></ol><pre><code>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;    pageEncoding=&quot;UTF-8&quot;%&gt;&lt;%@taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot;%&gt;&lt;!DOCTYPE html&gt;&lt;!-- 登录 注册 购物车... --&gt;&lt;div class=&quot;container-fluid&quot;&gt;    &lt;div class=&quot;col-md-4&quot;&gt;        &lt;img src=&quot;img/logo2.png&quot; /&gt;    &lt;/div&gt;    &lt;div class=&quot;col-md-5&quot;&gt;        &lt;img src=&quot;img/header.png&quot; /&gt;    &lt;/div&gt;    &lt;div class=&quot;col-md-3&quot; style=&quot;padding-top:20px&quot;&gt;        &lt;ol class=&quot;list-inline&quot;&gt;            &lt;c:if test=&quot;$&#123;empty user&#125;&quot;&gt;                &lt;li&gt;&lt;a href=&quot;login.jsp&quot;&gt;登录&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a href=&quot;register.jsp&quot;&gt;注册&lt;/a&gt;&lt;/li&gt;            &lt;/c:if&gt;            &lt;c:if test=&quot;$&#123;not empty user&#125;&quot;&gt;                &lt;li&gt;$&#123;user.username&#125;&lt;/li&gt;                &lt;li&gt;&lt;a href=&quot;cart.jsp&quot;&gt;购物车&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a href=&quot;order_list.jsp&quot;&gt;我的订单&lt;/a&gt;&lt;/li&gt;            &lt;/c:if&gt;        &lt;/ol&gt;    &lt;/div&gt;&lt;/div&gt;&lt;!-- 导航条 --&gt;&lt;div class=&quot;container-fluid&quot;&gt;    &lt;nav class=&quot;navbar navbar-inverse&quot;&gt;        &lt;div class=&quot;container-fluid&quot;&gt;            &lt;!-- Brand and toggle get grouped for better mobile display --&gt;            &lt;div class=&quot;navbar-header&quot;&gt;                &lt;button type=&quot;button&quot; class=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#bs-example-navbar-collapse-1&quot; aria-expanded=&quot;false&quot;&gt;                    &lt;span class=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt;                    &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;                    &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;                    &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;                &lt;/button&gt;                &lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&gt;首页&lt;/a&gt;            &lt;/div&gt;            &lt;div class=&quot;collapse navbar-collapse&quot; id=&quot;bs-example-navbar-collapse-1&quot;&gt;                &lt;ul class=&quot;nav navbar-nav&quot;&gt;                    &lt;li class=&quot;active&quot;&gt;&lt;a href=&quot;product_list.htm&quot;&gt;手机数码&lt;span class=&quot;sr-only&quot;&gt;(current)&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;                    &lt;li&gt;&lt;a href=&quot;#&quot;&gt;电脑办公&lt;/a&gt;&lt;/li&gt;                    &lt;li&gt;&lt;a href=&quot;#&quot;&gt;电脑办公&lt;/a&gt;&lt;/li&gt;                    &lt;li&gt;&lt;a href=&quot;#&quot;&gt;电脑办公&lt;/a&gt;&lt;/li&gt;                &lt;/ul&gt;                &lt;form class=&quot;navbar-form navbar-right&quot; role=&quot;search&quot;&gt;                    &lt;div class=&quot;form-group&quot;&gt;                        &lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;Search&quot;&gt;                    &lt;/div&gt;                    &lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;Submit&lt;/button&gt;                &lt;/form&gt;            &lt;/div&gt;        &lt;/div&gt;    &lt;/nav&gt;&lt;/div&gt;</code></pre><ol start="3"><li>效果<br><img src="/2022/01/13/%E7%99%BB%E5%BD%95%E6%88%90%E5%8A%9F%E5%90%8E%E7%BD%91%E9%A1%B5%E5%A4%B4%E9%83%A8%E6%98%BE%E7%A4%BA%E7%94%A8%E6%88%B7%E5%90%8D/1.PNG"></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;登录成功后网页头部显示用户名&quot;&gt;&lt;a href=&quot;#登录成功后网页头部显示用户名&quot; class=&quot;headerlink&quot; title=&quot;登录成功后网页头部显示用户名&quot;&gt;&lt;/a&gt;登录成功后网页头部显示用户名&lt;/h1&gt;&lt;p&gt;要实现登录成功后在网页头部显示用户名，只需在</summary>
      
    
    
    
    <category term="项目经历" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/"/>
    
    <category term="JavaWeb" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/"/>
    
    <category term="基于JavaWeb的网上购物商城" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/"/>
    
    <category term="登录成功后网页头部显示用户名" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E5%8E%86/JavaWeb/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/%E7%99%BB%E5%BD%95%E6%88%90%E5%8A%9F%E5%90%8E%E7%BD%91%E9%A1%B5%E5%A4%B4%E9%83%A8%E6%98%BE%E7%A4%BA%E7%94%A8%E6%88%B7%E5%90%8D/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
    <category term="基于JavaWeb的网上购物商城" scheme="http://example.com/tags/%E5%9F%BA%E4%BA%8EJavaWeb%E7%9A%84%E7%BD%91%E4%B8%8A%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E/"/>
    
  </entry>
  
</feed>
