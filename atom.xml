<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>victory的博客</title>
  
  <subtitle>长安一片月，万户捣衣声</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-06-26T13:13:04.735Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>victory-liao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据结构 | 数据结构测试</title>
    <link href="http://example.com/2024/06/26/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%B5%8B%E8%AF%95/"/>
    <id>http://example.com/2024/06/26/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%B5%8B%E8%AF%95/</id>
    <published>2024-06-26T13:09:39.000Z</published>
    <updated>2024-06-26T13:13:04.735Z</updated>
    
    
    
    
    <category term="计算机基础" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数据结构" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="数据结构测试" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="数据结构" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>操作系统 | 操作系统测试</title>
    <link href="http://example.com/2024/06/26/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%B5%8B%E8%AF%95/"/>
    <id>http://example.com/2024/06/26/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%B5%8B%E8%AF%95/</id>
    <published>2024-06-26T13:09:28.000Z</published>
    <updated>2024-06-26T13:12:30.037Z</updated>
    
    
    
    
    <category term="计算机基础" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="操作系统" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="操作系统测试" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="操作系统" scheme="http://example.com/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="OS" scheme="http://example.com/tags/OS/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理 | 计算机组成原理测试</title>
    <link href="http://example.com/2024/06/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E6%B5%8B%E8%AF%95/"/>
    <id>http://example.com/2024/06/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E6%B5%8B%E8%AF%95/</id>
    <published>2024-06-26T13:09:19.000Z</published>
    <updated>2024-06-26T13:11:51.178Z</updated>
    
    
    
    
    <category term="计算机基础" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    <category term="计算机组成原理" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="计算机组成原理测试" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="计算机组成原理" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Github | github个人主页美化</title>
    <link href="http://example.com/2024/06/26/github%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5%E7%BE%8E%E5%8C%96/"/>
    <id>http://example.com/2024/06/26/github%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5%E7%BE%8E%E5%8C%96/</id>
    <published>2024-06-26T12:03:41.000Z</published>
    <updated>2024-06-26T12:13:56.520Z</updated>
    
    <content type="html"><![CDATA[<p>如何美化github的个人主页？</p><span id="more"></span><p>github个人主页美化主要分为两步：</p><ol><li><p>创建名称与github用户名相同的仓库（public），并在仓库中创建README.md</p></li><li><p>自定义README.md中的内容，以达到美化个人主页的目的</p></li></ol><p>快速美化方式：</p><p>找到已美化的github个人主页，粘贴到自己仓库的README.md中并加以修改</p><p>推荐：<a href="https://github.com/lhccong">lhccong (聪ζ) (github.com)</a>，如有侵权请联系删除。</p><p>参考教程：</p><p><a href="https://blog.csdn.net/weixin_62651706/article/details/137957144">GitHub 个人主页的究极美化攻略：当一个外链战士（万字详述）_github的外链-CSDN博客</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;如何美化github的个人主页？&lt;/p&gt;</summary>
    
    
    
    <category term="开发工具" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    <category term="Git" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/Git/"/>
    
    <category term="github个人主页美化" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/Git/github%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5%E7%BE%8E%E5%8C%96/"/>
    
    
    <category term="github" scheme="http://example.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>ssh | ssh登录服务器</title>
    <link href="http://example.com/2024/06/17/ssh%E7%99%BB%E5%BD%95%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://example.com/2024/06/17/ssh%E7%99%BB%E5%BD%95%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2024-06-17T13:02:52.000Z</published>
    <updated>2024-06-26T12:22:24.179Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SSH-使用密钥登录服务器"><a href="#SSH-使用密钥登录服务器" class="headerlink" title="SSH 使用密钥登录服务器"></a>SSH 使用密钥登录服务器</h2><p>在使用git维护github仓库的代码/文档前，需要先登录github服务器，登录的方式有两种：</p><ul><li><p>密码登录</p><p>该方式需要每次登录时需要手动输入密码，比较麻烦</p></li><li><p>秘钥登录</p><p>通过在github服务器配置客户端的公钥用于用户验证。</p></li></ul><span id="more"></span><p>​    密钥：公钥 + 私钥，用于非对称加密和解密。公钥可以公开分享，用于加密数据或验证签名。私钥必须保密，用于解密数据或创建签名。使用公钥或私钥加密的数据，只能由另一个密钥解密。</p><p>​    github ssh key配置过程：</p><ol><li>点击github主页个人头像</li><li>进入设置（settings）</li><li>点击设置页面左侧的SSH and GPG keys</li><li>点击“New SSH keys”按钮</li><li>将本地公钥复制到“Key”区域中</li><li>点击Add SSH key完成ssh key配置</li></ol><p>参考文章：</p><p><a href="https://cloud.tencent.com/developer/article/1780788">Linux系列 | SSH 如何使用密钥登录服务器-腾讯云开发者社区-腾讯云 (tencent.com)</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;SSH-使用密钥登录服务器&quot;&gt;&lt;a href=&quot;#SSH-使用密钥登录服务器&quot; class=&quot;headerlink&quot; title=&quot;SSH 使用密钥登录服务器&quot;&gt;&lt;/a&gt;SSH 使用密钥登录服务器&lt;/h2&gt;&lt;p&gt;在使用git维护github仓库的代码/文档前，需要先登录github服务器，登录的方式有两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;密码登录&lt;/p&gt;
&lt;p&gt;该方式需要每次登录时需要手动输入密码，比较麻烦&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;秘钥登录&lt;/p&gt;
&lt;p&gt;通过在github服务器配置客户端的公钥用于用户验证。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="开发工具" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    <category term="ssh" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/ssh/"/>
    
    <category term="ssh登录服务器" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/ssh/ssh%E7%99%BB%E5%BD%95%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
    <category term="ssh" scheme="http://example.com/tags/ssh/"/>
    
    <category term="远程访问" scheme="http://example.com/tags/%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/"/>
    
    <category term="验证" scheme="http://example.com/tags/%E9%AA%8C%E8%AF%81/"/>
    
    <category term="签名" scheme="http://example.com/tags/%E7%AD%BE%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>wifi设置双频合一</title>
    <link href="http://example.com/2024/06/04/wifi%E8%AE%BE%E7%BD%AE%E5%8F%8C%E9%A2%91%E5%90%88%E4%B8%80/"/>
    <id>http://example.com/2024/06/04/wifi%E8%AE%BE%E7%BD%AE%E5%8F%8C%E9%A2%91%E5%90%88%E4%B8%80/</id>
    <published>2024-06-04T11:39:26.000Z</published>
    <updated>2024-06-17T13:06:27.292Z</updated>
    
    <content type="html"><![CDATA[<p>家里装网线通常需要自备路由器并对路由器进行一些设置，其中重要的一项设置是2.4g和5g双频合一。</p><span id="more"></span><p>需关掉wifi双频合一功能。</p><p><strong>两个频段的优缺点</strong>：2.4g频段覆盖范围广、穿墙能力强但是干扰较大。5g信号穿墙能力弱但干扰较小。</p><p><strong>推荐</strong>：将家里的低数据交换设备（智能门锁、洗衣机、冰箱等）连接2.4g频段信号，将高数据交换设备（手机、笔记本电脑等）连接5g频段信号。</p><p><strong>2.4g信道设置</strong>：选择重叠较小的1/6/11频段。</p><p><strong>功率设置</strong>：选择高功率。高功率的传输距离远、穿墙能力强、有更好的干扰抵抗能力。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;家里装网线通常需要自备路由器并对路由器进行一些设置，其中重要的一项设置是2.4g和5g双频合一。&lt;/p&gt;</summary>
    
    
    
    <category term="电脑使用小技巧" scheme="http://example.com/categories/%E7%94%B5%E8%84%91%E4%BD%BF%E7%94%A8%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
    <category term="wifi设置双频合一" scheme="http://example.com/categories/%E7%94%B5%E8%84%91%E4%BD%BF%E7%94%A8%E5%B0%8F%E6%8A%80%E5%B7%A7/wifi%E8%AE%BE%E7%BD%AE%E5%8F%8C%E9%A2%91%E5%90%88%E4%B8%80/"/>
    
    
    <category term="wifi" scheme="http://example.com/tags/wifi/"/>
    
    <category term="双频合一" scheme="http://example.com/tags/%E5%8F%8C%E9%A2%91%E5%90%88%E4%B8%80/"/>
    
  </entry>
  
  <entry>
    <title>Django | django自定义后台表单</title>
    <link href="http://example.com/2024/05/24/django%E8%87%AA%E5%AE%9A%E4%B9%89%E5%90%8E%E5%8F%B0%E8%A1%A8%E5%8D%95/"/>
    <id>http://example.com/2024/05/24/django%E8%87%AA%E5%AE%9A%E4%B9%89%E5%90%8E%E5%8F%B0%E8%A1%A8%E5%8D%95/</id>
    <published>2024-05-24T13:25:18.000Z</published>
    <updated>2024-05-24T13:28:44.026Z</updated>
    
    <content type="html"><![CDATA[<p>django自定义后台表单的显示方式。</p><span id="more"></span><p>以问题投票为例说明后台表单的自定义：</p><p>1.准备所需的模型类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> django.utils <span class="keyword">import</span> timezone</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Question</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    question_text = models.CharField(max_length=<span class="number">200</span>)</span><br><span class="line">    pub_date = models.DateTimeField(<span class="string">&quot;date published&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.question_text</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 定制布尔值字段的显式方式</span></span><br><span class="line"><span class="meta">    @admin.display(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="meta">        boolean=<span class="literal">True</span>,</span></span></span><br><span class="line"><span class="params"><span class="meta">        ordering=<span class="string">&quot;pub_date&quot;</span>,</span></span></span><br><span class="line"><span class="params"><span class="meta">        description=<span class="string">&quot;Published recently?&quot;</span>,</span></span></span><br><span class="line"><span class="params"><span class="meta">    </span>)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">was_published_recently</span>(<span class="params">self</span>):</span></span><br><span class="line">        now = timezone.now()</span><br><span class="line">        <span class="keyword">return</span> now - datetime.timedelta(days=<span class="number">1</span>) &lt;= self.pub_date &lt;= now</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Choice</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    question = models.ForeignKey(Question, on_delete=models.CASCADE)</span><br><span class="line">    choice_text = models.CharField(max_length=<span class="number">200</span>)</span><br><span class="line">    votes = models.IntegerField(default=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.choice_text</span><br></pre></td></tr></table></figure><p>2.自定义后台表单的显式方式</p><p>django后台访问：<code>ip:port/admin</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin  <span class="comment"># 导入django内置模型管理类</span></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Question, Choice  <span class="comment"># 导入自定义模型类</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChoiceInline</span>(<span class="params">admin.TabularInline</span>):</span></span><br><span class="line">    <span class="comment"># admin.TabularInline: 单行显示关联对象</span></span><br><span class="line">    <span class="comment"># admin.StackedInline: 多行显示关联对象</span></span><br><span class="line">    model = Choice</span><br><span class="line">    extra = <span class="number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义后台Question表单</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QuestionAdmin</span>(<span class="params">admin.ModelAdmin</span>):</span></span><br><span class="line">    <span class="comment"># 定义属性显式顺序</span></span><br><span class="line">    <span class="comment"># fields = [&quot;pub_date&quot;, &quot;question_text&quot;]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将模型类的属性划分成不同的信息区域，适用于模型类有多个属性且存在同类型属性</span></span><br><span class="line">    fieldsets = [</span><br><span class="line">        (<span class="literal">None</span>, &#123;<span class="string">&quot;fields&quot;</span>: [<span class="string">&quot;question_text&quot;</span>]&#125;),</span><br><span class="line">        (<span class="string">&quot;Date information&quot;</span>, &#123;<span class="string">&quot;fields&quot;</span>: [<span class="string">&quot;pub_date&quot;</span>]&#125;),</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 修改列表页中列表项的显式信息</span></span><br><span class="line">    list_display = [<span class="string">&quot;question_text&quot;</span>, <span class="string">&quot;pub_date&quot;</span>, <span class="string">&quot;was_published_recently&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 增加过滤器</span></span><br><span class="line">    list_filter = [<span class="string">&quot;pub_date&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 增加搜索框</span></span><br><span class="line">    search_fields = [<span class="string">&quot;question_text&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 分页，一页展示5个列表项</span></span><br><span class="line">    list_per_page = <span class="number">5</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 添加关联的对象</span></span><br><span class="line">    inlines = [ChoiceInline]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义后台Choice表单</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChoiceAdmin</span>(<span class="params">admin.ModelAdmin</span>):</span></span><br><span class="line">    fieldsets = [</span><br><span class="line">        (<span class="string">&quot;Question Information&quot;</span>, &#123;<span class="string">&quot;fields&quot;</span>: [<span class="string">&quot;question&quot;</span>]&#125;),</span><br><span class="line">        (<span class="string">&quot;Seletions Information&quot;</span>, &#123;<span class="string">&quot;fields&quot;</span>: [<span class="string">&quot;choice_text&quot;</span>]&#125;),</span><br><span class="line">        (<span class="string">&quot;Voting Information&quot;</span>, &#123;<span class="string">&quot;fields&quot;</span>: [<span class="string">&quot;votes&quot;</span>]&#125;),</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 增加搜索框</span></span><br><span class="line">    search_fields = [<span class="string">&quot;choice_text&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 增加过滤器</span></span><br><span class="line">    list_filter = [<span class="string">&quot;votes&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 列表项展示内容</span></span><br><span class="line">    list_display = [<span class="string">&quot;choice_text&quot;</span>, <span class="string">&quot;votes&quot;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 分页，一页展示5个列表项</span></span><br><span class="line">    list_per_page = <span class="number">5</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 字段（选项投票数）可编辑</span></span><br><span class="line">    list_editable = [<span class="string">&quot;votes&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将模型类注册到后台中进行管理</span></span><br><span class="line">admin.site.register(Question, QuestionAdmin)</span><br><span class="line">admin.site.register(Choice, ChoiceAdmin)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;django自定义后台表单的显示方式。&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    <category term="框架" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Django" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/Django/"/>
    
    <category term="django自定义后台表单" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/Django/django%E8%87%AA%E5%AE%9A%E4%B9%89%E5%90%8E%E5%8F%B0%E8%A1%A8%E5%8D%95/"/>
    
    
    <category term="Django" scheme="http://example.com/tags/Django/"/>
    
    <category term="后台表单" scheme="http://example.com/tags/%E5%90%8E%E5%8F%B0%E8%A1%A8%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>Django | django模板继承和模板引入</title>
    <link href="http://example.com/2024/05/24/django%E6%A8%A1%E6%9D%BF%E7%BB%A7%E6%89%BF%E5%92%8C%E6%A8%A1%E6%9D%BF%E5%BC%95%E5%85%A5/"/>
    <id>http://example.com/2024/05/24/django%E6%A8%A1%E6%9D%BF%E7%BB%A7%E6%89%BF%E5%92%8C%E6%A8%A1%E6%9D%BF%E5%BC%95%E5%85%A5/</id>
    <published>2024-05-24T13:25:05.000Z</published>
    <updated>2024-05-24T13:29:40.496Z</updated>
    
    <content type="html"><![CDATA[<p>Django提供html网页的继承和引入机制，减少重复代码。</p><span id="more"></span><p>模板继承：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends &quot;parent.html&quot; %&#125;</span><br></pre></td></tr></table></figure><p>模板引入：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include &#x27;header.html&#x27; %&#125;</span><br></pre></td></tr></table></figure><p>参考文章：<a href="https://blog.csdn.net/likunkun__/article/details/88080559">Django的html继承(extends)和引入(include)用法_django使用includehtml继承另一个html的数据-CSDN博客</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Django提供html网页的继承和引入机制，减少重复代码。&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    <category term="框架" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Django" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/Django/"/>
    
    <category term="django模板继承和模板引入" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/Django/django%E6%A8%A1%E6%9D%BF%E7%BB%A7%E6%89%BF%E5%92%8C%E6%A8%A1%E6%9D%BF%E5%BC%95%E5%85%A5/"/>
    
    
    <category term="Django" scheme="http://example.com/tags/Django/"/>
    
    <category term="模板继承" scheme="http://example.com/tags/%E6%A8%A1%E6%9D%BF%E7%BB%A7%E6%89%BF/"/>
    
    <category term="模板引入" scheme="http://example.com/tags/%E6%A8%A1%E6%9D%BF%E5%BC%95%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>Django | django模板</title>
    <link href="http://example.com/2024/05/24/django%E6%A8%A1%E6%9D%BF/"/>
    <id>http://example.com/2024/05/24/django%E6%A8%A1%E6%9D%BF/</id>
    <published>2024-05-24T13:24:43.000Z</published>
    <updated>2024-05-24T13:27:18.965Z</updated>
    
    <content type="html"><![CDATA[<p>使用django模板语言（DTL）动态生成页面内容。</p><span id="more"></span><p>模板包含<code>变量</code>和<code>标签</code>，变量在模板被执行时被替换为值，标签控制模板的逻辑。</p><p>模板中表示变量：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; variable &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--变量举例--&gt;</span></span><br><span class="line">&#123;&#123;student.name&#125;&#125;</span><br></pre></td></tr></table></figure><p>模板中表示标签：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--两种形式的标签--&gt;</span></span><br><span class="line">&#123;% tag %&#125; <span class="comment">&lt;!--单标签--&gt;</span></span><br><span class="line">&#123;% tag %&#125;...tag contents...&#123;% endtag %&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--常见标签--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--for--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">&#123;% for athlete in athlete_list %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; athlete.name &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--is、elif和else--&gt;</span></span><br><span class="line">&#123;% if athlete_list %&#125;</span><br><span class="line">    Number of athletes: &#123;&#123; athlete_list|length &#125;&#125;</span><br><span class="line">&#123;% elif athlete_in_locker_room_list %&#125;</span><br><span class="line">    Athletes should be out of the locker room soon!</span><br><span class="line">&#123;% else %&#125;</span><br><span class="line">    No athletes.</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>模板中的过滤器：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; variable|filter &#125;&#125;</span><br><span class="line">&#123;&#123; variable|filter1|filter2&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--过滤器距离--&gt;</span></span><br><span class="line">&#123;&#123; name|lower &#125;&#125;<span class="comment">&lt;!--这将显示 lower 过滤器过滤后的 &#123;&#123; name &#125;&#125; 变量的值，该过滤器将文本转换为小写。使用管道（|）来应用过滤器。--&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;使用django模板语言（DTL）动态生成页面内容。&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    <category term="框架" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Django" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/Django/"/>
    
    <category term="django模板" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/Django/django%E6%A8%A1%E6%9D%BF/"/>
    
    
    <category term="Django" scheme="http://example.com/tags/Django/"/>
    
    <category term="DTL" scheme="http://example.com/tags/DTL/"/>
    
    <category term="模板" scheme="http://example.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
    <category term="变量" scheme="http://example.com/tags/%E5%8F%98%E9%87%8F/"/>
    
    <category term="标签" scheme="http://example.com/tags/%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>Django | django模板搜索路径</title>
    <link href="http://example.com/2024/05/24/django%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/"/>
    <id>http://example.com/2024/05/24/django%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/</id>
    <published>2024-05-24T13:24:30.000Z</published>
    <updated>2024-05-24T13:31:10.878Z</updated>
    
    <content type="html"><![CDATA[<p>django搜索模板的路径分析。</p><span id="more"></span><p>django模板搜索路径的配置在[project_name]/[project_name]/settings.py中，如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;BACKEND&quot;: &quot;django.template.backends.django.DjangoTemplates&quot;,</span><br><span class="line">        &quot;DIRS&quot;: [BASE_DIR / &quot;templates&quot;],</span><br><span class="line">        &quot;APP_DIRS&quot;: True,</span><br><span class="line">        &quot;OPTIONS&quot;: &#123;</span><br><span class="line">            &quot;context_processors&quot;: [</span><br><span class="line">                &quot;django.template.context_processors.debug&quot;,</span><br><span class="line">                &quot;django.template.context_processors.request&quot;,</span><br><span class="line">                &quot;django.contrib.auth.context_processors.auth&quot;,</span><br><span class="line">                &quot;django.contrib.messages.context_processors.messages&quot;,</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>一个重要的点：<code>TEMPLATES</code>中 <code>DIRS</code>默认是空的，Django 是怎么找到默认的后台模板的？答：因为 <code>APP_DIRS</code>被置为 <code>True</code>，Django 会自动在每个应用包内递归查找 <code>templates/</code> 子目录。</p><p>自定义模板目录：若想让django搜索到自定义的模板目录，可将自定义目录添加在<code>DIRS</code>中。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;django搜索模板的路径分析。&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    <category term="框架" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Django" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/Django/"/>
    
    <category term="django查找模板" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/Django/django%E6%9F%A5%E6%89%BE%E6%A8%A1%E6%9D%BF/"/>
    
    
    <category term="Django" scheme="http://example.com/tags/Django/"/>
    
    <category term="DTL" scheme="http://example.com/tags/DTL/"/>
    
    <category term="模板" scheme="http://example.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
    <category term="模板搜索路径" scheme="http://example.com/tags/%E6%A8%A1%E6%9D%BF%E6%90%9C%E7%B4%A2%E8%B7%AF%E5%BE%84/"/>
    
  </entry>
  
  <entry>
    <title>Django | django模板中引入JS报错：$ is not defined</title>
    <link href="http://example.com/2024/05/23/JS%E6%8A%A5%E9%94%99/"/>
    <id>http://example.com/2024/05/23/JS%E6%8A%A5%E9%94%99/</id>
    <published>2024-05-23T13:20:49.000Z</published>
    <updated>2024-05-23T13:28:44.904Z</updated>
    
    <content type="html"><![CDATA[<p>在django模板中引入JS时报错“$ is not defined”，原因是因为没有引入JQuery，在模板中引入JQuery即可。</p><span id="more"></span><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    &#123;% load static %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcss.com/jquery/1.12.4/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;&#123;% static &#x27;polls/JS/script.js&#x27; %&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p>参考博客：<a href="https://blog.csdn.net/CSDN_fzs/article/details/106543522">【JavaScript】解决$ is not defined问题-CSDN博客</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在django模板中引入JS时报错“$ is not defined”，原因是因为没有引入JQuery，在模板中引入JQuery即可。&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    <category term="框架" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Django" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/Django/"/>
    
    <category term="django模板中引入JS报错：$ is not defined" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/Django/django%E6%A8%A1%E6%9D%BF%E4%B8%AD%E5%BC%95%E5%85%A5JS%E6%8A%A5%E9%94%99%EF%BC%9A-is-not-defined/"/>
    
    
    <category term="Django" scheme="http://example.com/tags/Django/"/>
    
    <category term="JS" scheme="http://example.com/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>Django | django引入静态资源</title>
    <link href="http://example.com/2024/05/23/django%E5%BC%95%E5%85%A5%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90/"/>
    <id>http://example.com/2024/05/23/django%E5%BC%95%E5%85%A5%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90/</id>
    <published>2024-05-23T13:20:17.000Z</published>
    <updated>2024-05-23T13:42:16.850Z</updated>
    
    <content type="html"><![CDATA[<ul><li>在django项目中引入静态资源（图片、CSS/JS文件）</li></ul><span id="more"></span><p>在使用django进行开发的过程中，要使用除html以外的静态文件（图片、CSS/JS文件），需要在django模板中进行引入，引入方式如下：</p><p>1.在项目中创建静态资源文件夹，结构如下</p><ul><li>[project name]<ul><li>[app_name]<ul><li>static<ul><li>[app_name]<ul><li>images</li><li>CSS</li><li>JS</li></ul></li></ul></li></ul></li></ul></li></ul><p>2.在django模板中引用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    &#123;% load static %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&#123;% static &#x27;polls/CSS/style.css&#x27; %&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcss.com/jquery/1.12.4/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;&#123;% static &#x27;polls/JS/script.js&#x27; %&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;在django项目中引入静态资源（图片、CSS/JS文件）&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    <category term="框架" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Django" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/Django/"/>
    
    <category term="django引入静态资源" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/Django/django%E5%BC%95%E5%85%A5%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90/"/>
    
    
    <category term="Django" scheme="http://example.com/tags/Django/"/>
    
    <category term="静态资源" scheme="http://example.com/tags/%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>Django | django通用视图</title>
    <link href="http://example.com/2024/05/23/django%E9%80%9A%E7%94%A8%E8%A7%86%E5%9B%BE/"/>
    <id>http://example.com/2024/05/23/django%E9%80%9A%E7%94%A8%E8%A7%86%E5%9B%BE/</id>
    <published>2024-05-23T13:19:52.000Z</published>
    <updated>2024-05-23T13:31:03.487Z</updated>
    
    <content type="html"><![CDATA[<ul><li>使用django通用视图简化代码</li></ul><span id="more"></span><p>使用django开发网站的常见情况是根据 URL 中的参数从数据库中获取数据、载入模板文件然后返回渲染后的模板。 由于这种情况特别常见，Django 提供一种快捷方式，叫做 <code>通用视图</code>系统。</p><p>1.<strong>修改[app_name]/urls.py中的URLconf</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">app_name = <span class="string">&quot;[app_name]&quot;</span></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&quot;&quot;</span>, views.IndexView.as_view(), name=<span class="string">&quot;index&quot;</span>),</span><br><span class="line">    <span class="comment"># ex: /[app_name]/1/</span></span><br><span class="line">    path(<span class="string">&quot;&lt;int:pk&gt;/&quot;</span>, views.DetailView.as_view(), name=<span class="string">&quot;detail&quot;</span>),</span><br><span class="line">    <span class="comment"># ex: /[app_name]/1/results/</span></span><br><span class="line">    path(<span class="string">&quot;&lt;int:pk&gt;/results/&quot;</span>, views.ResultsView.as_view(), name=<span class="string">&quot;results&quot;</span>),</span><br><span class="line">    <span class="comment"># ex: /[app_name]/1/vote/</span></span><br><span class="line">    path(<span class="string">&quot;&lt;int:question_id&gt;/vote/&quot;</span>, views.vote, name=<span class="string">&quot;vote&quot;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>2.<strong>使用通用视图</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db.models <span class="keyword">import</span> F</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponseRedirect</span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> get_object_or_404, render</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> reverse</span><br><span class="line"><span class="keyword">from</span> django.views <span class="keyword">import</span> generic</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Choice, Question</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexView</span>(<span class="params">generic.ListView</span>):</span></span><br><span class="line">    template_name = <span class="string">&quot;[app_name]/index.html&quot;</span></span><br><span class="line">    context_object_name = <span class="string">&quot;latest_question_list&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_queryset</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Return the last five published questions.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> Question.objects.order_by(<span class="string">&quot;-pub_date&quot;</span>)[:<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DetailView</span>(<span class="params">generic.DetailView</span>):</span></span><br><span class="line">    model = Question</span><br><span class="line">    template_name = <span class="string">&quot;[app_name]/detail.html&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ResultsView</span>(<span class="params">generic.DetailView</span>):</span></span><br><span class="line">    model = Question</span><br><span class="line">    template_name = <span class="string">&quot;[app_name]/results.html&quot;</span></span><br></pre></td></tr></table></figure><p>3.模型类（帮助理解URLconf和view）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> django.utils <span class="keyword">import</span> timezone</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Question</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    question_text = models.CharField(max_length=<span class="number">200</span>)</span><br><span class="line">    pub_date = models.DateTimeField(<span class="string">&quot;date published&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.question_text</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">was_published_recently</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.pub_date &gt;= timezone.now() - datetime.timedelta(days=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Choice</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    question = models.ForeignKey(Question, on_delete=models.CASCADE)</span><br><span class="line">    choice_text = models.CharField(max_length=<span class="number">200</span>)</span><br><span class="line">    votes = models.IntegerField(default=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.choice_text</span><br></pre></td></tr></table></figure><p>4.模板（帮助理解URLconf和view）</p><p>模板1：index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    &#123;% if latest_question_list %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        &#123;% for question in latest_question_list %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#123;% url &#x27;polls:detail&#x27; question.id %&#125;&quot;</span>&gt;</span>&#123;&#123; question.question_text &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    &#123;% else %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>No polls are available.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>模板2：detail.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; question.question_text &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&#123;% url &#x27;polls:vote&#x27; question.id %&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">&#123;% csrf_token %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">legend</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; question.question_text &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">    &#123;% if error_message %&#125;<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; error_message &#125;&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>&#123;% endif %&#125;</span><br><span class="line">    &#123;% for choice in question.choice_set.all %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;choice&quot;</span> <span class="attr">id</span>=<span class="string">&quot;choice&#123;&#123; forloop.counter &#125;&#125;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&#123;&#123; choice.id &#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;choice&#123;&#123; forloop.counter &#125;&#125;&quot;</span>&gt;</span>&#123;&#123; choice.choice_text &#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Vote&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>模板3：results.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; question.question_text &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        &#123;% for choice in question.choice_set.all %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; choice.choice_test &#125;&#125; -- &#123;&#123;choice.votes&#125;&#125; vote&#123;&#123; choice.votes|pluralize &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;使用django通用视图简化代码&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    <category term="框架" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Django" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/Django/"/>
    
    <category term="django通用视图" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/Django/django%E9%80%9A%E7%94%A8%E8%A7%86%E5%9B%BE/"/>
    
    
    <category term="Django" scheme="http://example.com/tags/Django/"/>
    
    <category term="通用视图" scheme="http://example.com/tags/%E9%80%9A%E7%94%A8%E8%A7%86%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>Django | django配置redis缓存</title>
    <link href="http://example.com/2024/05/23/django%E9%85%8D%E7%BD%AEredis%E7%BC%93%E5%AD%98/"/>
    <id>http://example.com/2024/05/23/django%E9%85%8D%E7%BD%AEredis%E7%BC%93%E5%AD%98/</id>
    <published>2024-05-23T13:19:28.000Z</published>
    <updated>2024-05-23T13:34:01.359Z</updated>
    
    <content type="html"><![CDATA[<ul><li>django配置redis作为缓存后端</li></ul><span id="more"></span><p>1.django项目中配置redis缓存后端</p><p>在[project_name]/[project_name]/settings.py中添加以下配置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">REDIS_HOST = <span class="string">&#x27;localhost&#x27;</span>  <span class="comment"># 主机ip</span></span><br><span class="line">REDIS_PORT = <span class="number">6379</span>  <span class="comment"># 端口号</span></span><br><span class="line">REDIS_DB = <span class="number">0</span>  <span class="comment"># 选择0号数据库</span></span><br><span class="line"><span class="comment"># 配置Django缓存后端为Redis</span></span><br><span class="line">CACHES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;BACKEND&#x27;</span>: <span class="string">&#x27;django_redis.cache.RedisCache&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;LOCATION&#x27;</span>: <span class="string">f&#x27;redis://<span class="subst">&#123;REDIS_HOST&#125;</span>:<span class="subst">&#123;REDIS_PORT&#125;</span>/<span class="subst">&#123;REDIS_DB&#125;</span>&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;OPTIONS&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;CLIENT_CLASS&#x27;</span>: <span class="string">&#x27;django_redis.client.DefaultClient&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;SERIALIZER&#x27;</span>: <span class="string">&#x27;django_redis.serializers.json.JSONSerializer&#x27;</span>,  <span class="comment"># 使用JSON序列化</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 配置Django的会话后端为Redis</span></span><br><span class="line">SESSION_ENGINE = <span class="string">&#x27;django.contrib.sessions.backends.cache&#x27;</span></span><br><span class="line">SESSION_CACHE_ALIAS = <span class="string">&#x27;default&#x27;</span></span><br></pre></td></tr></table></figure><p>2.查询数据库（先查缓存，再查数据库，缓存中不存在时从数据库查并将数据放入缓存）</p><p>在[project_name]/[app_name]/views.py中编写视图使用缓存</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">redisascache</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="comment"># 查缓存</span></span><br><span class="line">    data = cache.get(<span class="string">&#x27;my_key&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 缓存中不存在该数据，从数据库中查并将数据加入到缓存中</span></span><br><span class="line">    <span class="keyword">if</span> data <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        data = <span class="string">&quot;OK&quot;</span></span><br><span class="line"></span><br><span class="line">        cache.<span class="built_in">set</span>(<span class="string">&quot;my_key&quot;</span>, data, <span class="number">300</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 相应</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(data)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;django配置redis作为缓存后端&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    <category term="框架" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Django" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/Django/"/>
    
    <category term="django配置redis缓存" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/Django/django%E9%85%8D%E7%BD%AEredis%E7%BC%93%E5%AD%98/"/>
    
    
    <category term="Django" scheme="http://example.com/tags/Django/"/>
    
    <category term="redis" scheme="http://example.com/tags/redis/"/>
    
    <category term="缓存" scheme="http://example.com/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>Django | django配置mysql数据库</title>
    <link href="http://example.com/2024/05/23/django%E9%85%8D%E7%BD%AEmysql%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://example.com/2024/05/23/django%E9%85%8D%E7%BD%AEmysql%E6%95%B0%E6%8D%AE%E5%BA%93/</id>
    <published>2024-05-23T13:19:16.000Z</published>
    <updated>2024-05-23T13:34:57.680Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>django项目中配置mysql</p></li><li><p>使用django模型管理器查询数据库</p><span id="more"></span></li></ul><p>在django项目中配置mysql数据库：</p><ul><li><p>在django项目配置文件（[django_project_name]/[django_project_name]/setttings.py）中添加mysql的配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">&quot;default&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;ENGINE&quot;</span>: <span class="string">&quot;django.db.backends.mysql&quot;</span>,</span><br><span class="line">        <span class="string">&quot;USER&quot;</span>: <span class="string">&quot;root&quot;</span>,</span><br><span class="line">        <span class="string">&quot;PASSWORD&quot;</span>: <span class="string">&quot;root&quot;</span>,</span><br><span class="line">        <span class="string">&quot;NAME&quot;</span>: <span class="string">&quot;polls&quot;</span>,</span><br><span class="line">        <span class="string">&quot;HOST&quot;</span>: <span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;PORT&quot;</span>: <span class="string">&quot;3306&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ENGINE：数据库引擎</p><p>USER: mysql数据库用户名</p><p>PASSWORD: mysql数据库密码</p><p>NAME: 项目关联的mysql数据库（通过create database database_name charset=utf8创建的数据库）</p><p>HOST: 数据库所在主机的ip</p><p>PORT: 数据库所在主机的端口号</p></li></ul><p>使用django模型管理器查询数据库：</p><p>1.创建模型类（[django_project_name]/[app_name]/models.py）,以创建User类为例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    username = models.CharField(max_length=<span class="number">20</span>)</span><br><span class="line">    age = models.IntegerField()</span><br></pre></td></tr></table></figure><p>2.使用模型管理器查询数据库（[django_project_name]/[app_name]/views.py）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> User</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">look_up_users</span>(<span class="params">request</span>):</span></span><br><span class="line">    ......</span><br><span class="line">    user_list = User.objects.<span class="built_in">all</span>()</span><br><span class="line">    context = &#123;</span><br><span class="line">        <span class="string">&quot;user_list&quot;</span>: user_list,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&quot;[app_name]/templates/[app_name]/index.html&quot;</span>, context)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;django项目中配置mysql&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用django模型管理器查询数据库&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    <category term="框架" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/"/>
    
    <category term="Django" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/Django/"/>
    
    <category term="django配置mysql数据库" scheme="http://example.com/categories/python/%E6%A1%86%E6%9E%B6/Django/django%E9%85%8D%E7%BD%AEmysql%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="Django" scheme="http://example.com/tags/Django/"/>
    
    <category term="mysql" scheme="http://example.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Redis | windows系统安装redis</title>
    <link href="http://example.com/2024/05/22/windows%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85redis/"/>
    <id>http://example.com/2024/05/22/windows%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85redis/</id>
    <published>2024-05-22T11:52:14.000Z</published>
    <updated>2024-05-22T11:54:56.365Z</updated>
    
    <content type="html"><![CDATA[<p>redis安装教程可参考一下文章：</p><p><a href="https://blog.csdn.net/weixin_44893902/article/details/123087435">Window下Redis的安装和部署详细图文教程（Redis的安装和可视化工具的使用）_redis安装-CSDN博客</a></p><p>可选择文章中的zip压缩包方式下载安装，亲测有效！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;redis安装教程可参考一下文章：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_44893902/article/details/123087435&quot;&gt;Window下Redis的安装和部署详细图文教程（Redis的安装和可视化工</summary>
      
    
    
    
    <category term="Redis" scheme="http://example.com/categories/Redis/"/>
    
    <category term="windows系统安装redis" scheme="http://example.com/categories/Redis/windows%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85redis/"/>
    
    
    <category term="Redis" scheme="http://example.com/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>postman | postman接口测试工具安装及使用</title>
    <link href="http://example.com/2024/05/22/postman%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/2024/05/22/postman%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/</id>
    <published>2024-05-22T11:51:52.000Z</published>
    <updated>2024-05-22T11:57:55.133Z</updated>
    
    <content type="html"><![CDATA[<ul><li>windows安装Postman接口测试工具</li><li>postman测试工具的使用</li></ul><span id="more"></span><p>安装以及使用过程参考：<a href="https://blog.csdn.net/m0_61843874/article/details/123324727">PostMan——安装使用教程（图文详解）_postman安装教程-CSDN博客</a></p><p>postman工具可用于在网站开发过程中做接口测试，例如对GET/POST/DELETE等HTTP请求的测试。</p>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;windows安装Postman接口测试工具&lt;/li&gt;
&lt;li&gt;postman测试工具的使用&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    <category term="工具" scheme="http://example.com/categories/python/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="postman接口测试工具" scheme="http://example.com/categories/python/%E5%B7%A5%E5%85%B7/postman%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="postman" scheme="http://example.com/tags/postman/"/>
    
    <category term="接口测试" scheme="http://example.com/tags/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Git | git提交报错</title>
    <link href="http://example.com/2024/05/22/git%E6%8F%90%E4%BA%A4%E6%8A%A5%E9%94%99/"/>
    <id>http://example.com/2024/05/22/git%E6%8F%90%E4%BA%A4%E6%8A%A5%E9%94%99/</id>
    <published>2024-05-22T11:51:33.000Z</published>
    <updated>2024-06-26T12:14:04.638Z</updated>
    
    <content type="html"><![CDATA[<p>可通过关闭git HTTP代理，使用本机HTPP代理解决git提交或克隆报错。</p><span id="more"></span><p>报错信息如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fatal: unable to access &#x27;https://github.com/victory-liao/Note-Transfer-Station.git/&#x27;: Failed to connect to github.com port 443 after 21112 ms: Couldn&#x27;t connect to server</span><br></pre></td></tr></table></figure><p>关闭git HTTP代理（使用自己本机的代理，如果本机没有的话还是默认使用git HTTP代理）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//取消http代理</span><br><span class="line">git config --global --unset http.proxy</span><br><span class="line"></span><br><span class="line">//取消https代理 </span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure><p>注意：关闭git代理也不一定能解决问题，因为github是外网，提交报错也有可能是网络的问题。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;可通过关闭git HTTP代理，使用本机HTPP代理解决git提交或克隆报错。&lt;/p&gt;</summary>
    
    
    
    <category term="开发工具" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    <category term="Git" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/Git/"/>
    
    <category term="Git 提交或克隆报错" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/Git/Git-%E6%8F%90%E4%BA%A4%E6%88%96%E5%85%8B%E9%9A%86%E6%8A%A5%E9%94%99/"/>
    
    
    <category term="Git" scheme="http://example.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Some Ideas | 2024年5月坚持清单</title>
    <link href="http://example.com/2024/05/16/2024%E5%B9%B45%E6%9C%88%E5%9D%9A%E6%8C%81%E6%B8%85%E5%8D%95/"/>
    <id>http://example.com/2024/05/16/2024%E5%B9%B45%E6%9C%88%E5%9D%9A%E6%8C%81%E6%B8%85%E5%8D%95/</id>
    <published>2024-05-16T12:46:11.000Z</published>
    <updated>2024-06-26T12:28:23.198Z</updated>
    
    <content type="html"><![CDATA[<p>列下后两年的坚持清单，两年后回来更新，希望在后面的2年时间里能够不负时光。</p><span id="more"></span><ul><li><p>未来坚持清单</p><ul><li>坚持阅读2年，一年5本书</li><li>坚持健身2年，每周锻炼3次</li><li>坚持写笔记，每年发博客笔记&gt;300篇</li><li>以2年为周期，每2年掌握一个核心技能</li></ul></li><li><p>留下激励自己的两句话</p><ul><li>流水不争先，争的是滔滔不绝。人生没有奇迹，只有努力的轨迹。如果要说奇迹。那奇迹一定藏在坚持的背后。</li><li>希望我20几岁做的事情，会让我在30岁时，让我更加自信，更加从容，更加有光芒</li></ul></li><li><p>2026.5.16日回来更新这篇笔记。加油我自己，不负时光。</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;列下后两年的坚持清单，两年后回来更新，希望在后面的2年时间里能够不负时光。&lt;/p&gt;</summary>
    
    
    
    <category term="V Life" scheme="http://example.com/categories/V-Life/"/>
    
    <category term="Some Ideas" scheme="http://example.com/categories/V-Life/Some-Ideas/"/>
    
    <category term="2024年5月坚持清单" scheme="http://example.com/categories/V-Life/Some-Ideas/2024%E5%B9%B45%E6%9C%88%E5%9D%9A%E6%8C%81%E6%B8%85%E5%8D%95/"/>
    
    
    <category term="坚持清单" scheme="http://example.com/tags/%E5%9D%9A%E6%8C%81%E6%B8%85%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>Python | generator用于大文件读取</title>
    <link href="http://example.com/2024/05/16/generator%E7%94%A8%E4%BA%8E%E5%A4%A7%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/"/>
    <id>http://example.com/2024/05/16/generator%E7%94%A8%E4%BA%8E%E5%A4%A7%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/</id>
    <published>2024-05-16T12:42:50.000Z</published>
    <updated>2024-05-16T12:45:30.419Z</updated>
    
    <content type="html"><![CDATA[<p>python生成器最常见的应用是大文件的读取，节省内存空间。</p><span id="more"></span><p>以下是使用生成器读取大文件的python代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_in_chunks</span>(<span class="params">file_object, chunk_size=<span class="number">1024</span></span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Lazy function (generator) to read a file piece by piece.</span></span><br><span class="line"><span class="string">    Default chunk size: 1k.&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        data = file_object.read(chunk_size)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">yield</span> data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">process_data</span>(<span class="params">piece</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;piece of data is processing.&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;really_big_file.dat&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> piece <span class="keyword">in</span> read_in_chunks(f):</span><br><span class="line">    process_data(piece)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;python生成器最常见的应用是大文件的读取，节省内存空间。&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    <category term="基础" scheme="http://example.com/categories/python/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="生成器" scheme="http://example.com/categories/python/%E5%9F%BA%E7%A1%80/%E7%94%9F%E6%88%90%E5%99%A8/"/>
    
    
    <category term="生成器" scheme="http://example.com/tags/%E7%94%9F%E6%88%90%E5%99%A8/"/>
    
    <category term="大文件读取" scheme="http://example.com/tags/%E5%A4%A7%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/"/>
    
  </entry>
  
</feed>
