<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Victory&#39;s Blog</title>
  
  <subtitle>非淡泊无以明志，非宁静无以致远</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-08-17T14:07:45.993Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>victory-liao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SpringBoot集成Druid</title>
    <link href="http://example.com/2022/08/17/SpringBoot%E9%9B%86%E6%88%90Druid/"/>
    <id>http://example.com/2022/08/17/SpringBoot%E9%9B%86%E6%88%90Druid/</id>
    <published>2022-08-17T13:38:57.000Z</published>
    <updated>2022-08-17T14:07:45.993Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SpringBoot集成Druid"><a href="#SpringBoot集成Druid" class="headerlink" title="SpringBoot集成Druid"></a>SpringBoot集成Druid</h1><p>Java程序很大一部分要操作数据库，为了提高性能操作数据库的时候，又不得不使用数据库连接池。<br>Druid 是阿里巴巴开源平台上一个数据库连接池实现，结合了 C3P0、DBCP 等 DB 池的优点，同时加入了日志监控。<br>Druid 可以很好的监控 DB 池连接和 SQL 的执行情况，天生就是针对监控而生的 DB 连接池。<br>Druid已经在阿里巴巴部署了超过600个应用，经过一年多生产环境大规模部署的严苛考验。<br>Spring Boot 2.0 以上默认使用 Hikari 数据源，可以说 Hikari 与 Driud 都是当前 Java Web 上最优秀的数据源，我们来重点介绍 Spring Boot 如何集成 Druid 数据源，如何实现数据库监控。</p><p><a href="https://github.com/alibaba/druid/">Github地址</a></p><ul><li>项目目录<br><img src="/2022/08/17/SpringBoot%E9%9B%86%E6%88%90Druid/3.png"></li><li>添加Druid数据源依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>切换数据源并配置数据源；之前已经说过 Spring Boot 2.0 以上默认使用 com.zaxxer.hikari.HikariDataSource 数据源，但可以 通过 spring.datasource.type 指定数据源<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/test?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="comment">#SpringBoot默认是不注入这些的，需要自己绑定</span></span><br><span class="line">    <span class="comment">#druid数据源专有配置</span></span><br><span class="line">    <span class="attr">initialSize:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">minIdle:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">maxActive:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">maxWait:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">timeBetweenEvictionRunsMillis:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">minEvictableIdleTimeMillis:</span> <span class="number">300000</span></span><br><span class="line">    <span class="attr">validationQuery:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">    <span class="attr">testWhileIdle:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">testOnBorrow:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">testOnReturn:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">poolPreparedStatements:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#配置监控统计拦截的filters，stat：监控统计、log4j：日志记录、wall：防御sql注入</span></span><br><span class="line">    <span class="comment">#如果允许报错，java.lang.ClassNotFoundException: org.apache.Log4j.Properity</span></span><br><span class="line">    <span class="comment">#则导入log4j 依赖就行</span></span><br><span class="line">    <span class="attr">filters:</span> <span class="string">stat,wall</span> <span class="comment"># ,log4j</span></span><br><span class="line">    <span class="attr">maxPoolPreparedStatementPerConnectionSize:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">useGlobalDataSourceStat:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">connectionoProperties:</span> <span class="string">druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500</span></span><br></pre></td></tr></table></figure></li><li>现在需要程序员自己为 DruidDataSource 绑定全局配置文件中的参数，再添加到容器中，而不再使用 Spring Boot 的自动生成了；我们需要 自己添加 DruidDataSource 组件到容器中，并绑定属性；<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidConfig</span> </span>&#123;</span><br><span class="line">    <span class="comment">//绑定全局配置文件中的参数</span></span><br><span class="line">    <span class="meta">@ConfigurationProperties(prefix = &quot;spring.datasource&quot;)</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">druidDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>测试Druid数据源是否配置成功<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpringDataApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    DataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="comment">//查看默认的数据源</span></span><br><span class="line">        System.out.println(dataSource.getClass());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得数据库链接</span></span><br><span class="line">        Connection connection = dataSource.getConnection();</span><br><span class="line">        System.out.println(connection);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//关闭</span></span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>配置Druid数据源监控<br>Druid 数据源具有监控的功能，并提供了一个 web 界面方便用户查看，类似安装 路由器 时，人家也提供了一个默认的 web 页面。<br>所以第一步需要设置 Druid 的后台管理页面，比如 登录账号、密码 等；配置后台管理；<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 后台监控：相当于web.xml，配置ServletRegistrationBean</span></span><br><span class="line"><span class="comment">//因为SprintBoot内置了servlet容器，所以没有web.xml，替代方法ServletRegistrationBean</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ServletRegistrationBean <span class="title">statViewServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ServletRegistrationBean&lt;StatViewServlet&gt; bean = <span class="keyword">new</span> ServletRegistrationBean&lt;&gt;(<span class="keyword">new</span> StatViewServlet(), <span class="string">&quot;/druid/*&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 后台登录进行账号密码配置</span></span><br><span class="line">    HashMap&lt;String, String&gt; initParameters = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 增加配置，登录的key是固定的，loginUsername  loginPassword</span></span><br><span class="line">    initParameters.put(<span class="string">&quot;loginUsername&quot;</span>, <span class="string">&quot;admin&quot;</span>);</span><br><span class="line">    initParameters.put(<span class="string">&quot;loginPassword&quot;</span>, <span class="string">&quot;123456&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 允许谁可以访问，如果后面的参数为空代表谁都可以访问，指定参数只能指定的参数进行访问</span></span><br><span class="line">    initParameters.put(<span class="string">&quot;allow&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 禁止谁可以访问</span></span><br><span class="line">    <span class="comment">// initParameters.put(&quot;koko&quot;,&quot;192.168.43.21&quot;);</span></span><br><span class="line"></span><br><span class="line">    bean.setInitParameters(initParameters); <span class="comment">// 设置初始化参数</span></span><br><span class="line">    <span class="keyword">return</span> bean;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>配置完成后，就可以通过<a href="http://localhost:8080/druid/login.html%E8%AE%BF%E9%97%AE%E7%9B%91%E6%8E%A7%E9%A1%B5%E9%9D%A2">http://localhost:8080/druid/login.html访问监控页面</a><br><img src="/2022/08/17/SpringBoot%E9%9B%86%E6%88%90Druid/1.png"></li><li>登录成功后显示的监控页面<br><img src="/2022/08/17/SpringBoot%E9%9B%86%E6%88%90Druid/2.png"></li><li>配置 Druid web 监控 filter 过滤器<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//filter</span><br><span class="line">@Bean</span><br><span class="line">public FilterRegistrationBean webStatFileter()&#123;</span><br><span class="line">    FilterRegistrationBean bean = new FilterRegistrationBean();</span><br><span class="line"></span><br><span class="line">    bean.setFilter(new WebStatFilter());</span><br><span class="line"></span><br><span class="line">    //可以过滤那些请求呢？</span><br><span class="line"></span><br><span class="line">    Map&lt;String, String&gt; initParameters = new HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    //这些东西不进行统计</span><br><span class="line">    initParameters.put(&quot;exclusions&quot;, &quot;*.js,*.css,/druid/*&quot;);</span><br><span class="line"></span><br><span class="line">    return bean;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SpringBoot集成Druid&quot;&gt;&lt;a href=&quot;#SpringBoot集成Druid&quot; class=&quot;headerlink&quot; title=&quot;SpringBoot集成Druid&quot;&gt;&lt;/a&gt;SpringBoot集成Druid&lt;/h1&gt;&lt;p&gt;Java程序很大一部</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="框架" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/"/>
    
    <category term="SpringBoot" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/SpringBoot/"/>
    
    <category term="SpringBoot集成Druid" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/SpringBoot/SpringBoot%E9%9B%86%E6%88%90Druid/"/>
    
    
    <category term="SpringBoot" scheme="http://example.com/tags/SpringBoot/"/>
    
    <category term="SpringBoot集成Druid" scheme="http://example.com/tags/SpringBoot%E9%9B%86%E6%88%90Druid/"/>
    
    <category term="Druid" scheme="http://example.com/tags/Druid/"/>
    
    <category term="监控" scheme="http://example.com/tags/%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot | SpringBoot集成MyBatis</title>
    <link href="http://example.com/2022/08/17/SpringBoot%E9%9B%86%E6%88%90MyBatis/"/>
    <id>http://example.com/2022/08/17/SpringBoot%E9%9B%86%E6%88%90MyBatis/</id>
    <published>2022-08-17T13:14:26.000Z</published>
    <updated>2022-08-17T13:38:22.021Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SpringBoot集成MyBatis"><a href="#SpringBoot集成MyBatis" class="headerlink" title="SpringBoot集成MyBatis"></a>SpringBoot集成MyBatis</h1><ul><li>项目目录<br><img src="/2022/08/17/SpringBoot%E9%9B%86%E6%88%90MyBatis/1.png"></li><li>导入MyBatis所需要的依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--mybatis-springboot--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--lombok--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>数据库和表<br><img src="/2022/08/17/SpringBoot%E9%9B%86%E6%88%90MyBatis/2.png"></li><li>配置数据库连接信息(application.yaml)、配置mybatis<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="comment">#?serverTimezone=UTC解决时区的报错</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatis?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 整合mybatis</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.example.pojo</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:mybatis/mapper/*.xml</span></span><br></pre></td></tr></table></figure></li><li>创建实体类User.java（需要用到lombok）<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>创建Mapper接口UserMapper.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">queryUserList</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">User <span class="title">queryUserById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">addUser</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateUser</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteUser</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>创建映射文件UserMapper.xml<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.example.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--resultType=&quot;User&quot;和parameterType=&quot;User&quot;只有配置了type-aliases-package后才能起作用--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        select * from user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        insert into user (id, name, pwd) values (#&#123;id&#125;, #&#123;name&#125;, #&#123;pwd&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        update user set name=#&#123;name&#125;,pwd=#&#123;pwd&#125; where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">        delete from user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>编写UserController.java进行测试<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> com.example.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.websocket.server.PathParam;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/queryUserList&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">queryUserList</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;User&gt; userList = userMapper.queryUserList();</span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/queryUserById/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">queryUserById</span><span class="params">(<span class="meta">@PathVariable</span> Integer id)</span></span>&#123;</span><br><span class="line">        User user = userMapper.queryUserById(id);</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    @GetMapping(&quot;/addUser&quot;)  //http://localhost:8080/addUser?id=4&amp;name=wangmazi&amp;pwd=91011</span></span><br><span class="line"><span class="comment">//    public String addUser(@PathParam(&quot;id&quot;)Integer id, @PathParam(&quot;name&quot;)String name, @PathParam(&quot;pwd&quot;)String pwd)&#123;</span></span><br><span class="line"><span class="comment">//        userMapper.addUser(new User(id, name, pwd));</span></span><br><span class="line"><span class="comment">//        return &quot;ok&quot;;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/addUser/&#123;id&#125;/&#123;name&#125;/&#123;pwd&#125;&quot;)</span>  <span class="comment">//http://localhost:8080/addUser/4/wangmazi/123</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">addUser</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id, <span class="meta">@PathVariable(&quot;name&quot;)</span> String name, <span class="meta">@PathVariable(&quot;pwd&quot;)</span> String pwd)</span></span>&#123;</span><br><span class="line">        userMapper.addUser(<span class="keyword">new</span> User(id, name, pwd));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/updateUser&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">updateuser</span><span class="params">()</span></span>&#123;</span><br><span class="line">        userMapper.updateUser(<span class="keyword">new</span> User(<span class="number">5</span>, <span class="string">&quot;liuba&quot;</span>, <span class="string">&quot;325&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/deleteUser/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">deleteUser</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span></span>&#123;</span><br><span class="line">        userMapper.deleteUser(id);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SpringBoot集成MyBatis&quot;&gt;&lt;a href=&quot;#SpringBoot集成MyBatis&quot; class=&quot;headerlink&quot; title=&quot;SpringBoot集成MyBatis&quot;&gt;&lt;/a&gt;SpringBoot集成MyBatis&lt;/h1&gt;&lt;ul&gt;
</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="框架" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/"/>
    
    <category term="SpringBoot" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/SpringBoot/"/>
    
    <category term="SpringBoot集成MyBatis" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/SpringBoot/SpringBoot%E9%9B%86%E6%88%90MyBatis/"/>
    
    
    <category term="MyBatis" scheme="http://example.com/tags/MyBatis/"/>
    
    <category term="SpringBoot" scheme="http://example.com/tags/SpringBoot/"/>
    
    <category term="SpringBoot集成MyBatis" scheme="http://example.com/tags/SpringBoot%E9%9B%86%E6%88%90MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>SpringSecurity | 用户认证、授权、注销、权限控制</title>
    <link href="http://example.com/2022/08/15/SpringSecurity%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81%E5%92%8C%E6%8E%88%E6%9D%83/"/>
    <id>http://example.com/2022/08/15/SpringSecurity%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81%E5%92%8C%E6%8E%88%E6%9D%83/</id>
    <published>2022-08-16T03:04:49.000Z</published>
    <updated>2022-08-17T13:09:53.275Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SpringSecurity用户认证、授权、注销、权限控制"><a href="#SpringSecurity用户认证、授权、注销、权限控制" class="headerlink" title="SpringSecurity用户认证、授权、注销、权限控制"></a>SpringSecurity用户认证、授权、注销、权限控制</h1><ul><li><p>实现功能：授权不同的用户角色访问不同的模块，如下图所示：<br><img src="/2022/08/15/SpringSecurity%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81%E5%92%8C%E6%8E%88%E6%9D%83/1.png"></p></li><li><p>描述</p><ul><li>设置三个不同用户角色（victory,root,guest）</li><li>victory可以访问level2和leve3的内容，root可以访问页面的所有内容，guest只可以访问level1的内容，而且没有权限的模块在该用户登录时不显示。</li><li>没有登录时，点击三个模块的内容会跳转到登录页面</li></ul></li><li><p>页面<br><img src="/2022/08/15/SpringSecurity%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81%E5%92%8C%E6%8E%88%E6%9D%83/2.png"></p></li><li><p>依赖导入</p><ul><li>导入thymeleaf依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-spring5<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf.extras<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-extras-java8time<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>导入Web依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>导入security依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>项目目录<br><img src="/2022/08/15/SpringSecurity%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81%E5%92%8C%E6%8E%88%E6%9D%83/3.png"></p></li><li><p>编写RootController映射请求（跳转页面）</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RootController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&#123;&quot;/&quot;, &quot;/index&quot;&#125;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;toLogin&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toLogin</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;views/login&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/level1/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">level1</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> <span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;views/level1/&quot;</span>+id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/level2/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">level2</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> <span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;views/level2/&quot;</span>+id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/level3/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">level3</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> <span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;views/level3/&quot;</span>+id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>编写SecurityConfig配置SpringSecurity</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line">    <span class="comment">//授权</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//首页所有人可以访问，功能页只有对应有权限的人才能访问</span></span><br><span class="line">        <span class="comment">//请求授权的规则</span></span><br><span class="line">        <span class="comment">//链式编程</span></span><br><span class="line">        http.authorizeHttpRequests()</span><br><span class="line">                .antMatchers(<span class="string">&quot;/&quot;</span>).permitAll()</span><br><span class="line">                .antMatchers(<span class="string">&quot;/level1/**&quot;</span>).hasRole(<span class="string">&quot;vip1&quot;</span>)</span><br><span class="line">                .antMatchers(<span class="string">&quot;/level2/**&quot;</span>).hasRole(<span class="string">&quot;vip2&quot;</span>)</span><br><span class="line">                .antMatchers(<span class="string">&quot;/level3/**&quot;</span>).hasRole(<span class="string">&quot;vip3&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//没有权限默认会跳到登录页面</span></span><br><span class="line">        http.formLogin();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//防止网站攻击 get不安全，可以使用post springboot默认开启csrf(注销失败可能的原因)</span></span><br><span class="line">        http.csrf().disable(); <span class="comment">//关闭csrf功能</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//注销，跳到首页</span></span><br><span class="line">        http.logout().logoutSuccessUrl(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//认证</span></span><br><span class="line">    <span class="comment">//密码编码：PasswordEncoder</span></span><br><span class="line">    <span class="comment">//在Spring Security 5.0+新增了很多加密方法</span></span><br><span class="line">    <span class="comment">//报错 500 密码没有加密</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//这些数据正常应该从数据库中读</span></span><br><span class="line">        auth.inMemoryAuthentication().passwordEncoder(<span class="keyword">new</span> BCryptPasswordEncoder())</span><br><span class="line">                .withUser(<span class="string">&quot;victory&quot;</span>).password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">&quot;123&quot;</span>)).roles(<span class="string">&quot;vip2&quot;</span>, <span class="string">&quot;vip3&quot;</span>)</span><br><span class="line">                .and()</span><br><span class="line">                .withUser(<span class="string">&quot;root&quot;</span>).password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">&quot;123&quot;</span>)).roles(<span class="string">&quot;vip1&quot;</span>, <span class="string">&quot;vip2&quot;</span>, <span class="string">&quot;vip3&quot;</span>)</span><br><span class="line">                .and()</span><br><span class="line">                .withUser(<span class="string">&quot;guest&quot;</span>).password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">&quot;123&quot;</span>)).roles(<span class="string">&quot;vip1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>权限控制（没有权限的模块在该用户登录时不显示）<ul><li>导入依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf.extras<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-extras-springsecurity4<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>在页面中导入命名空间<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span> <span class="attr">xmlns:sec</span>=<span class="string">&quot;http://www.thymeleaf.org/thymeleaf-extras-springsecurity4&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>在页面中使用thymeleaf-security语法进行权限控制<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span> <span class="attr">xmlns:sec</span>=<span class="string">&quot;http://www.thymeleaf.org/thymeleaf-extras-springsecurity4&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, maximum-scale=1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--semantic-ui--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcss.com/semantic-ui/2.4.1/semantic.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/qinjiang/css/qinstyle.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--主容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui container&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui segment&quot;</span> <span class="attr">id</span>=<span class="string">&quot;index-header-nav&quot;</span> <span class="attr">th:fragment</span>=<span class="string">&quot;nav-menu&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui secondary menu&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>  <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/index&#125;&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--登录注销--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right menu&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--如果未登录--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;!isAuthenticated()&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/toLogin&#125;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;address card icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 登录</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--如果登录：用户名和注销--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;isAuthenticated()&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                    用户名：<span class="tag">&lt;<span class="name">span</span> <span class="attr">sec:authentication</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--角色：&lt;span sec:authentication=&quot;principal.getUsername()&quot;&gt;&lt;/span&gt;--&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/logout&#125;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;sign-out icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 注销</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui segment&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Spring Security Study by 秦疆<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui three column stackable grid&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--根据用户的角色动态的实现--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;column&quot;</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;vip1&#x27;)&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui raised segment&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span>Level 1<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/level1/1&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-1-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/level1/2&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-1-2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/level1/3&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-1-3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;column&quot;</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;vip2&#x27;)&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui raised segment&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span>Level 2<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/level2/1&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-2-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/level2/2&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-2-2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/level2/3&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-2-3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;column&quot;</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;vip3&#x27;)&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui raised segment&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span>Level 3<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/level3/1&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-3-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/level3/2&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-3-2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/level3/3&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-3-3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/qinjiang/js/jquery-3.1.1.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/qinjiang/js/semantic.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>thymeleaf security整合可能出现的错误<ul><li>thymeleaf security不生效，可以将SpringBoot版本降低到2.0.7.RELEASE</li><li>登录后出现WhiteLabel Error Page，Html文件中关于thymeleaf-security的代码有错误</li></ul></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SpringSecurity用户认证、授权、注销、权限控制&quot;&gt;&lt;a href=&quot;#SpringSecurity用户认证、授权、注销、权限控制&quot; class=&quot;headerlink&quot; title=&quot;SpringSecurity用户认证、授权、注销、权限控制&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="框架" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/"/>
    
    <category term="SpringSecurity" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/SpringSecurity/"/>
    
    <category term="用户认证、授权、注销、权限控制" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/SpringSecurity/%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81%E3%80%81%E6%8E%88%E6%9D%83%E3%80%81%E6%B3%A8%E9%94%80%E3%80%81%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/"/>
    
    
    <category term="SpringSecurity" scheme="http://example.com/tags/SpringSecurity/"/>
    
    <category term="认证" scheme="http://example.com/tags/%E8%AE%A4%E8%AF%81/"/>
    
    <category term="授权" scheme="http://example.com/tags/%E6%8E%88%E6%9D%83/"/>
    
    <category term="权限控制" scheme="http://example.com/tags/%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot | 常用的请求映射方式注解</title>
    <link href="http://example.com/2022/08/15/springboot%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AF%B7%E6%B1%82%E6%98%A0%E5%B0%84%E6%96%B9%E5%BC%8F%E6%B3%A8%E8%A7%A3/"/>
    <id>http://example.com/2022/08/15/springboot%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AF%B7%E6%B1%82%E6%98%A0%E5%B0%84%E6%96%B9%E5%BC%8F%E6%B3%A8%E8%A7%A3/</id>
    <published>2022-08-15T14:15:57.000Z</published>
    <updated>2022-08-16T01:14:45.515Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SpringBoot常用的请求映射方式注解"><a href="#SpringBoot常用的请求映射方式注解" class="headerlink" title="SpringBoot常用的请求映射方式注解"></a>SpringBoot常用的请求映射方式注解</h1><p>我们在处理web端应用的请求时，通常会使用如下几种方式进行请求映射，我们可以通过查看源码看到它们的真实面目。</p><ul><li>@RequestMapping</li></ul><pre><code>源码对注解的注释：Annotation for mapping web requests onto methods in request-handling classes with flexible method signatures.翻译：用于将web请求映射到具有灵活方法签名的请求处理类中的方法的注释。</code></pre><ul><li>@GetMapping</li></ul><pre><code>源码对注解的注释：Annotation for mapping HTTP GET requests onto specific handler methods.Specifically, @GetMapping is a composed annotation that acts as a shortcut for @RequestMapping(method = RequestMethod.GET).翻译：用于将HTTP GET请求映射到特定的请求处理方法的注释。具体来说，@GetMapping是一个组合注解，是@RequestMapping(method = RequestMethod.GET)的缩写。</code></pre><p><img src="/2022/08/15/springboot%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AF%B7%E6%B1%82%E6%98%A0%E5%B0%84%E6%96%B9%E5%BC%8F%E6%B3%A8%E8%A7%A3/1.png"></p><ul><li>@PostMapping</li></ul><pre><code>源码对注解的注释：Annotation for mapping HTTP POST requests onto specific handler methods.Specifically, @PostMapping is a composed annotation that acts as a shortcut for @RequestMapping(method = RequestMethod.POST).翻译：用于将HTTP POST请求映射到特定的请求处理方法的注释。具体来说，@PostMapping是一个组合注解，是@RequestMapping(method = RequestMethod.POST)的缩写。</code></pre><p><img src="/2022/08/15/springboot%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AF%B7%E6%B1%82%E6%98%A0%E5%B0%84%E6%96%B9%E5%BC%8F%E6%B3%A8%E8%A7%A3/2.png"></p><ul><li>@PutMapping</li></ul><pre><code>源码对注解的注释：Annotation for mapping HTTP PUT requests onto specific handler methods.Specifically, @PutMapping is a composed annotation that acts as a shortcut for @RequestMapping(method = RequestMethod.PUT).翻译：用于将HTTP PUT请求映射到特定的请求处理方法的注释。具体来说，@PutMapping是一个组合注解，是@RequestMapping(method = RequestMethod.PUT)的缩写。</code></pre><p><img src="/2022/08/15/springboot%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AF%B7%E6%B1%82%E6%98%A0%E5%B0%84%E6%96%B9%E5%BC%8F%E6%B3%A8%E8%A7%A3/3.png">    </p><ul><li>@DeleteMapping</li></ul><pre><code>源码对注解的注释：Annotation for mapping HTTP DELETE requests onto specific handler methods.Specifically, @DeleteMapping is a composed annotation that acts as a shortcut for @RequestMapping(method = RequestMethod.DELETE).翻译：用于将HTTP DELETE请求映射到特定的请求处理方法的注释。具体来说，@DeleteMapping是一个组合注解，是@RequestMapping(method = RequestMethod.DELETE)的缩写。</code></pre><p><img src="/2022/08/15/springboot%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AF%B7%E6%B1%82%E6%98%A0%E5%B0%84%E6%96%B9%E5%BC%8F%E6%B3%A8%E8%A7%A3/4.png"></p><ul><li>@PatchMapping</li></ul><pre><code>源码对注解的注释：Annotation for mapping HTTP PATCH requests onto specific handler methods.Specifically, @PatchMapping is a composed annotation that acts as a shortcut for @RequestMapping(method = RequestMethod.PATCH).翻译：用于将HTTP PATCH请求映射到特定的请求处理方法的注释。具体来说，@PatchMapping是一个组合注解，是@RequestMapping(method = RequestMethod.PATCH)的缩写。</code></pre><p><img src="/2022/08/15/springboot%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AF%B7%E6%B1%82%E6%98%A0%E5%B0%84%E6%96%B9%E5%BC%8F%E6%B3%A8%E8%A7%A3/5.png"></p><p>从源码注释和注解接口实现源代码可以得出以下结论：</p><ul><li>可以使用@RequestMapping注解并指定method属性对所有HTTP进行映射。</li><li>@XxxMapping注解是@RequestMapping(method=”XXX”)的缩写<ul><li>@GetMapping是@RequestMapping(method = RequestMethod.GET)的缩写</li><li>@PostMapping是@RequestMapping(method = RequestMethod.POST)的缩写</li><li>@PutMapping是@RequestMapping(method = RequestMethod.PUT)的缩写</li><li>@DeleteMapping是@RequestMapping(method = RequestMethod.DELETE)的缩写</li><li>@PatchMapping是@RequestMapping(method = RequestMethod.PATCH)的缩写</li></ul></li><li>推荐用法：在对特定的请求进行映射时，采用对应的注解。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SpringBoot常用的请求映射方式注解&quot;&gt;&lt;a href=&quot;#SpringBoot常用的请求映射方式注解&quot; class=&quot;headerlink&quot; title=&quot;SpringBoot常用的请求映射方式注解&quot;&gt;&lt;/a&gt;SpringBoot常用的请求映射方式注解&lt;/</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="框架" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/"/>
    
    <category term="SpringBoot" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/SpringBoot/"/>
    
    <category term="常用的请求映射方式注解" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/SpringBoot/%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AF%B7%E6%B1%82%E6%98%A0%E5%B0%84%E6%96%B9%E5%BC%8F%E6%B3%A8%E8%A7%A3/"/>
    
    
    <category term="SpringBoot" scheme="http://example.com/tags/SpringBoot/"/>
    
    <category term="请求映射" scheme="http://example.com/tags/%E8%AF%B7%E6%B1%82%E6%98%A0%E5%B0%84/"/>
    
  </entry>
  
  <entry>
    <title>leetcode | 414.第三大的数</title>
    <link href="http://example.com/2022/08/13/%E7%AC%AC%E4%B8%89%E5%A4%A7%E7%9A%84%E6%95%B0/"/>
    <id>http://example.com/2022/08/13/%E7%AC%AC%E4%B8%89%E5%A4%A7%E7%9A%84%E6%95%B0/</id>
    <published>2022-08-13T14:04:59.000Z</published>
    <updated>2022-08-16T01:17:50.813Z</updated>
    
    <content type="html"><![CDATA[<h1 id="414-第三大的数"><a href="#414-第三大的数" class="headerlink" title="414.第三大的数"></a>414.第三大的数</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给你一个非空数组，返回此数组中 第三大的数 。如果不存在，则返回数组中最大的数。</p><ul><li><p>示例 1：<br>输入：[3, 2, 1]<br>输出：1<br>解释：第三大的数是 1 。</p></li><li><p>示例 2：<br>输入：[1, 2]<br>输出：2<br>解释：第三大的数不存在, 所以返回最大的数 2 。</p></li><li><p>示例 3：<br>输入：[2, 2, 3, 1]<br>输出：1<br>解释：注意，要求返回第三大的数，是指在所有不同数字中排第三大的数。<br>此例中存在两个值为 2 的数，它们都排第二。在所有不同数字中排第三大的数为 1 。</p></li></ul><p><a href="https://leetcode.cn/problems/third-maximum-number">题目链接</a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>排序<br>将nums数组排序后，从数组末尾返回第三大的数。</li><li>有序集合<br>遍历数组，同时用一个有序集合来维护数组中前三大的数。具体做法是每遍历一个数，就将其插入有序集合，若有序集合的大小超过 333，就删除集合中的最小元素。这样可以保证有序集合的大小至多为 333，且遍历结束后，若有序集合的大小为 333，其最小值就是数组中第三大的数；若有序集合的大小不足 333，那么就返回有序集合中的最大值。</li><li>一次遍历<br>遍历数组，并用三个变量a、b、c来维护数组中的最大值、次大值和第三大值，在遍历过程中更新这三个值即可。<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">thirdMax</span>(<span class="params">self, nums</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">排序（自己实现快速排序）</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quick_sort</span>(<span class="params">arr, low, high</span>):</span></span><br><span class="line"><span class="keyword">if</span> low &lt; high:</span><br><span class="line">pivot = partition(arr, low, high)</span><br><span class="line">quick_sort(arr, low, pivot - <span class="number">1</span>)</span><br><span class="line">quick_sort(arr, pivot + <span class="number">1</span>, high)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">partition</span>(<span class="params">arr, low, high</span>):</span></span><br><span class="line">pivot_key = arr[low]</span><br><span class="line"><span class="keyword">while</span> low &lt; high:</span><br><span class="line"><span class="keyword">while</span> low &lt; high <span class="keyword">and</span> arr[high] &gt;= pivot_key:</span><br><span class="line">high -= <span class="number">1</span></span><br><span class="line">arr[low], arr[high] = arr[high], arr[low]</span><br><span class="line"><span class="keyword">while</span> low &lt; high <span class="keyword">and</span> arr[low] &lt;= pivot_key:</span><br><span class="line">low += <span class="number">1</span></span><br><span class="line">arr[low], arr[high] = arr[high], arr[low]</span><br><span class="line"><span class="keyword">return</span> low</span><br><span class="line"></span><br><span class="line">quick_sort(nums, <span class="number">0</span>, <span class="built_in">len</span>(nums) - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">diff = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums) - <span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line"><span class="keyword">if</span> nums[i] != nums[i - <span class="number">1</span>]:</span><br><span class="line">diff += <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> diff == <span class="number">2</span>:</span><br><span class="line"><span class="keyword">return</span> nums[i-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> nums[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">thirdMax1</span>(<span class="params">self, nums</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;排序（直接调用排序方法）&quot;&quot;&quot;</span></span><br><span class="line">nums.sort(reverse=<span class="literal">True</span>)</span><br><span class="line">diff = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(nums)):</span><br><span class="line"><span class="keyword">if</span> nums[i] != nums[i-<span class="number">1</span>]:</span><br><span class="line">diff += <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> diff == <span class="number">3</span>:</span><br><span class="line"><span class="keyword">return</span> nums[i]</span><br><span class="line"><span class="keyword">return</span> nums[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">thirdMax2</span>(<span class="params">self, nums</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;有序集合&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> sortedcontainers <span class="keyword">import</span> SortedList</span><br><span class="line">s = SortedList()</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> nums:</span><br><span class="line"><span class="keyword">if</span> num <span class="keyword">not</span> <span class="keyword">in</span> s:</span><br><span class="line">s.add(num)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(s) &gt; <span class="number">3</span>:</span><br><span class="line">s.pop(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> s[<span class="number">0</span>] <span class="keyword">if</span> <span class="built_in">len</span>(s) == <span class="number">3</span> <span class="keyword">else</span> s[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">thirdMax3</span>(<span class="params">self, nums</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;一次遍历（用三个变量a,b,c来维护数组中的最大值、次大值和第三大值）&quot;&quot;&quot;</span></span><br><span class="line">a, b, c = <span class="built_in">float</span>(<span class="string">&#x27;-inf&#x27;</span>), <span class="built_in">float</span>(<span class="string">&#x27;-inf&#x27;</span>), <span class="built_in">float</span>(<span class="string">&#x27;-inf&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> nums:</span><br><span class="line"><span class="keyword">if</span> num &gt; a:</span><br><span class="line">a, b, c = num, a, b</span><br><span class="line"><span class="keyword">elif</span> a &gt; num &gt; b:</span><br><span class="line">b, c = num, b</span><br><span class="line"><span class="keyword">elif</span> b &gt; num &gt; c:</span><br><span class="line">c = num</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> a <span class="keyword">if</span> c == <span class="built_in">float</span>(<span class="string">&#x27;-inf&#x27;</span>) <span class="keyword">else</span> c</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">slt = Solution()</span><br><span class="line"><span class="comment"># third_max_num = slt.thirdMax([2, 2, 3, 1])</span></span><br><span class="line"><span class="comment"># third_max_num = slt.thirdMax1([2, 2, 3, 1])</span></span><br><span class="line"><span class="comment"># third_max_num = slt.thirdMax2([2, 2, 3, 1])</span></span><br><span class="line">third_max_num = slt.thirdMax3([<span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(third_max_num)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;414-第三大的数&quot;&gt;&lt;a href=&quot;#414-第三大的数&quot; class=&quot;headerlink&quot; title=&quot;414.第三大的数&quot;&gt;&lt;/a&gt;414.第三大的数&lt;/h1&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="算法刷题" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/"/>
    
    <category term="leetcode" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/"/>
    
    <category term="414.第三大的数" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/414-%E7%AC%AC%E4%B8%89%E5%A4%A7%E7%9A%84%E6%95%B0/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/tags/%E6%95%B0%E7%BB%84/"/>
    
    <category term="排序" scheme="http://example.com/tags/%E6%8E%92%E5%BA%8F/"/>
    
    <category term="有序集合" scheme="http://example.com/tags/%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88/"/>
    
    <category term="SortedList" scheme="http://example.com/tags/SortedList/"/>
    
    <category term="sortedcontainers" scheme="http://example.com/tags/sortedcontainers/"/>
    
  </entry>
  
  <entry>
    <title>json | python处理json数据</title>
    <link href="http://example.com/2022/08/13/python%E5%A4%84%E7%90%86json%E6%95%B0%E6%8D%AE/"/>
    <id>http://example.com/2022/08/13/python%E5%A4%84%E7%90%86json%E6%95%B0%E6%8D%AE/</id>
    <published>2022-08-13T12:37:49.000Z</published>
    <updated>2022-08-13T12:55:17.337Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python处理json数据"><a href="#python处理json数据" class="headerlink" title="python处理json数据"></a>python处理json数据</h1><p>找出以下json数据中children键对应列表为空的data键的id值。<br>例如以下示例children键对应的列表为空时，返回data键的id值：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;data&quot;</span>: &#123;<span class="attr">&quot;id&quot;</span>: <span class="number">1234</span>&#125;,</span><br><span class="line">    <span class="attr">&quot;children&quot;</span>: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>方法：<br>分析数据可知，该文本数组为字典类型的嵌套，故可以使用递归的方法解决。<br>首先全部输入文本就是一个大字典，因此递归函数输入为一个大字典，然后判断字典中children键对应的列表是否为空，<br>如果为空则将children键对应的data键的id加入结果列表，如果children键对应的列表（列表中的元素仍为字典）不为空，<br>则遍历列表中的字典，继续使用该递归函数进行处理，依次类推。</li><li>重要的一步<br>在处理json数据中极为重要的一步是将一个字符串表示的字典转换为python中的字典。<br>我们可以使用python中的内置模块json中的loads方法将一个字符串表示的字典转换为json数据，既python中的字典。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">json_data = json.loads(string_dict)</span><br></pre></td></tr></table></figure><span id="more"></span></li><li>输入：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">    <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;编程0615版本&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;0o246ba3ptq3cl2nk4fvaq2fcr&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">        <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;“录制视频作品”能力升级&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;46bjepg30ird0cion555r1ed13&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;作品H5页面&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;6i25gn6ps4spre3g4q6l02k0vg&quot;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;项目分享&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;b439a445-1e0e-45f1-80ef-9708e8aa5696&quot;</span></span><br><span class="line">              &#125;,</span><br><span class="line">              <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                  <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                    <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;不变&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;2d1d9bc0-deaf-403c-9cbb-fc018f12bd4d&quot;</span></span><br><span class="line">                  &#125;,</span><br><span class="line">                  <span class="attr">&quot;children&quot;</span>: []</span><br><span class="line">                &#125;</span><br><span class="line">              ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;视频分享&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;6f90564f-2102-4a00-95e8-c16a0ce69569&quot;</span></span><br><span class="line">              &#125;,</span><br><span class="line">              <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                  <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                    <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;页面下方增加试试运行程序按钮&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;6e909a32-80cb-4a5d-8c11-b82ca39ef651&quot;</span></span><br><span class="line">                  &#125;,</span><br><span class="line">                  <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                      <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                        <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                        <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;点击按钮跳转项目分享页面&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;a30a997b-5531-4f7b-8fc8-dd7fd0b1446e&quot;</span></span><br><span class="line">                      &#125;,</span><br><span class="line">                      <span class="attr">&quot;children&quot;</span>: []</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                      <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                        <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                        <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;题型验证&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;02a44ad1-95d1-4901-9345-10f4f8347b97&quot;</span></span><br><span class="line">                      &#125;,</span><br><span class="line">                      <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">                        &#123;</span><br><span class="line">                          <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;C++题目&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;40a0b6f1-c7d2-4b18-ae0b-aef1237e51db&quot;</span></span><br><span class="line">                          &#125;,</span><br><span class="line">                          <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">                            &#123;</span><br><span class="line">                              <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                                <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                                <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;有&quot;</span>,</span><br><span class="line">                                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;9bffb81a-a4f6-441f-a6b0-6f13b86e7ccc&quot;</span></span><br><span class="line">                              &#125;,</span><br><span class="line">                              <span class="attr">&quot;children&quot;</span>: []</span><br><span class="line">                            &#125;</span><br><span class="line">                          ]</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                          <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;python普通&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;e88f0fd1-120c-4867-bd89-d9d066d36ec9&quot;</span></span><br><span class="line">                          &#125;,</span><br><span class="line">                          <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">                            &#123;</span><br><span class="line">                              <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                                <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                                <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;有&quot;</span>,</span><br><span class="line">                                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;57795e2a-19bc-4992-9c38-81e8333f7ede&quot;</span></span><br><span class="line">                              &#125;,</span><br><span class="line">                              <span class="attr">&quot;children&quot;</span>: []</span><br><span class="line">                            &#125;</span><br><span class="line">                          ]</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                          <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;python超级&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;0905ce99-0c95-4c26-ba4e-46f1d3a8eeb6&quot;</span></span><br><span class="line">                          &#125;,</span><br><span class="line">                          <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">                            &#123;</span><br><span class="line">                              <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                                <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                                <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;没有&quot;</span>,</span><br><span class="line">                                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;b5b60820-5ace-4e23-9acc-4be2e9a0c2b8&quot;</span></span><br><span class="line">                              &#125;,</span><br><span class="line">                              <span class="attr">&quot;children&quot;</span>: []</span><br><span class="line">                            &#125;</span><br><span class="line">                          ]</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                          <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;前端&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;7fbbb053-0237-4e7e-8fac-868819efb651&quot;</span></span><br><span class="line">                          &#125;,</span><br><span class="line">                          <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">                            &#123;</span><br><span class="line">                              <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                                <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                                <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;没有&quot;</span>,</span><br><span class="line">                                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;a2c9b1e0-11a8-4847-965d-169823e979f4&quot;</span></span><br><span class="line">                              &#125;,</span><br><span class="line">                              <span class="attr">&quot;children&quot;</span>: []</span><br><span class="line">                            &#125;</span><br><span class="line">                          ]</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                          <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;Scratch题&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;0fdd6097-740f-4ea3-a591-27bdf8295d1c&quot;</span></span><br><span class="line">                          &#125;,</span><br><span class="line">                          <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">                            &#123;</span><br><span class="line">                              <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                                <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                                <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;有&quot;</span>,</span><br><span class="line">                                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;0a2df200-f11a-49da-9f3c-d3f093d78b84&quot;</span></span><br><span class="line">                              &#125;,</span><br><span class="line">                              <span class="attr">&quot;children&quot;</span>: []</span><br><span class="line">                            &#125;</span><br><span class="line">                          ]</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                          <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;Scratch简化题&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;01b03c7a-9a4c-4b74-aa6e-d4985010ffcd&quot;</span></span><br><span class="line">                          &#125;,</span><br><span class="line">                          <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">                            &#123;</span><br><span class="line">                              <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                                <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                                <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;有&quot;</span>,</span><br><span class="line">                                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;081ad0cb-5df8-4bea-ad9e-a787c0c4f90f&quot;</span></span><br><span class="line">                              &#125;,</span><br><span class="line">                              <span class="attr">&quot;children&quot;</span>: []</span><br><span class="line">                            &#125;</span><br><span class="line">                          ]</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                          <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;CodeMonkey题&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;fee1debf-75b5-40e1-b3ae-0c4657d2dada&quot;</span></span><br><span class="line">                          &#125;,</span><br><span class="line">                          <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">                            &#123;</span><br><span class="line">                              <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                                <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                                <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;没有&quot;</span>,</span><br><span class="line">                                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;c957f9cc-d547-4f84-8e01-1b5e51f433c1&quot;</span></span><br><span class="line">                              &#125;,</span><br><span class="line">                              <span class="attr">&quot;children&quot;</span>: []</span><br><span class="line">                            &#125;</span><br><span class="line">                          ]</span><br><span class="line">                        &#125;</span><br><span class="line">                      ]</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                      <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                        <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                        <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;位置验证&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;d801a744-7680-456d-a5c7-43a06a05662a&quot;</span></span><br><span class="line">                      &#125;,</span><br><span class="line">                      <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">                        &#123;</span><br><span class="line">                          <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;非在线课堂端&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;8174ef9d-b9c2-4e83-ba08-02bda754d8eb&quot;</span></span><br><span class="line">                          &#125;,</span><br><span class="line">                          <span class="attr">&quot;children&quot;</span>: []</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                          <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;社区&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;460baee8-8c50-4fd9-a108-6f12dc375b5d&quot;</span></span><br><span class="line">                          &#125;,</span><br><span class="line">                          <span class="attr">&quot;children&quot;</span>: []</span><br><span class="line">                        &#125;</span><br><span class="line">                      ]</span><br><span class="line">                    &#125;</span><br><span class="line">                  ]</span><br><span class="line">                &#125;</span><br><span class="line">              ]</span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>代码<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">input_dict = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">input_dict += line</span><br><span class="line"><span class="keyword">if</span> line[<span class="number">0</span>] == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(input_dict)</span><br><span class="line"></span><br><span class="line">json_data = json.loads(input_dict)</span><br><span class="line"></span><br><span class="line">result = []</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">recursion</span>(<span class="params">json_data</span>):</span></span><br><span class="line">curr_data = json_data[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line">curr_children = json_data[<span class="string">&#x27;children&#x27;</span>]</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(curr_children) &gt; <span class="number">0</span>:</span><br><span class="line"><span class="keyword">for</span> next_level_children <span class="keyword">in</span> curr_children:</span><br><span class="line">recursion(next_level_children)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">result.append(curr_data[<span class="string">&#x27;id&#x27;</span>])</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">recursion(json_data)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure></li><li>输出<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;2d1d9bc0-deaf-403c-9cbb-fc018f12bd4d&#x27;</span>, <span class="string">&#x27;a30a997b-5531-4f7b-8fc8-dd7fd0b1446e&#x27;</span>, <span class="string">&#x27;9bffb81a-a4f6-441f-a6b0-6f13b86e7ccc&#x27;</span>, <span class="string">&#x27;57795e2a-19bc-4992-9c38-81e8333f7ede&#x27;</span>, <span class="string">&#x27;b5b60820-5ace-4e23-9acc-4be2e9a0c2b8&#x27;</span>, <span class="string">&#x27;a2c9b1e0-11a8-4847-965d-169823e979f4&#x27;</span>, <span class="string">&#x27;0a2df200-f11a-49da-9f3c-d3f093d78b84&#x27;</span>, <span class="string">&#x27;081ad0cb-5df8-4bea-ad9e-a787c0c4f90f&#x27;</span>, <span class="string">&#x27;c957f9cc-d547-4f84-8e01-1b5e51f433c1&#x27;</span>, <span class="string">&#x27;8174ef9d-b9c2-4e83-ba08-02bda754d8eb&#x27;</span>, <span class="string">&#x27;460baee8-8c50-4fd9-a108-6f12dc375b5d&#x27;</span>]</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;python处理json数据&quot;&gt;&lt;a href=&quot;#python处理json数据&quot; class=&quot;headerlink&quot; title=&quot;python处理json数据&quot;&gt;&lt;/a&gt;python处理json数据&lt;/h1&gt;&lt;p&gt;找出以下json数据中children键对应列表为空的data键的id值。&lt;br&gt;例如以下示例children键对应的列表为空时，返回data键的id值：&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&amp;quot;data&amp;quot;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;attr&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1234&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&amp;quot;children&amp;quot;&lt;/span&gt;: []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;方法：&lt;br&gt;分析数据可知，该文本数组为字典类型的嵌套，故可以使用递归的方法解决。&lt;br&gt;首先全部输入文本就是一个大字典，因此递归函数输入为一个大字典，然后判断字典中children键对应的列表是否为空，&lt;br&gt;如果为空则将children键对应的data键的id加入结果列表，如果children键对应的列表（列表中的元素仍为字典）不为空，&lt;br&gt;则遍历列表中的字典，继续使用该递归函数进行处理，依次类推。&lt;/li&gt;
&lt;li&gt;重要的一步&lt;br&gt;在处理json数据中极为重要的一步是将一个字符串表示的字典转换为python中的字典。&lt;br&gt;我们可以使用python中的内置模块json中的loads方法将一个字符串表示的字典转换为json数据，既python中的字典。&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;json_data = json.loads(string_dict)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    <category term="内置模块" scheme="http://example.com/categories/python/%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/"/>
    
    <category term="json" scheme="http://example.com/categories/python/%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/json/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
    <category term="json" scheme="http://example.com/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>leetcode | 349.两个数组的交集</title>
    <link href="http://example.com/2022/08/11/%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86/"/>
    <id>http://example.com/2022/08/11/%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86/</id>
    <published>2022-08-12T03:57:01.000Z</published>
    <updated>2022-08-12T04:03:52.089Z</updated>
    
    <content type="html"><![CDATA[<h1 id="349-两个数组的交集"><a href="#349-两个数组的交集" class="headerlink" title="349.两个数组的交集"></a>349.两个数组的交集</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定两个数组 nums1 和 nums2 ，返回 它们的交集 。输出结果中的每个元素一定是 唯一 的。我们可以 不考虑输出结果的顺序 。</p><p>示例 1：<br>输入：nums1 = [1,2,2,1], nums2 = [2,2]<br>输出：[2]</p><p>示例 2：<br>输入：nums1 = [4,9,5], nums2 = [9,4,9,8,4]<br>输出：[9,4]<br>解释：[4,9] 也是可通过的</p><p><a href="https://leetcode.cn/problems/intersection-of-two-arrays">题目链接</a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>集合求交集</li><li>排序+双指针<br>对nums1、nums2进行排序，设置两个指针index1、index2分别指向两个数组的头部，并按以下步骤进行：<br>（1）如果元素相等则加入结果列表<br>（2）如果index1指向的元素小于index2指向的元素，则index1指针后移，否则index2指针后移<br>不断执行以上两个步骤，最后结果列表中的元素即为两个数字的交集。<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">集合操作</span></span><br><span class="line"><span class="string">1.求交集</span></span><br><span class="line"><span class="string">set1.intersection(set2)</span></span><br><span class="line"><span class="string">2.求差集</span></span><br><span class="line"><span class="string">set1.difference(set2)</span></span><br><span class="line"><span class="string">3.求并集</span></span><br><span class="line"><span class="string">set1.union(set2)</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">intersection</span>(<span class="params">self, nums1, nums2</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">集合求交集</span></span><br><span class="line"><span class="string">        :type nums1: List[int]</span></span><br><span class="line"><span class="string">        :type nums2: List[int]</span></span><br><span class="line"><span class="string">        :rtype: List[int]</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">list</span>(<span class="built_in">set</span>(nums1).intersection(<span class="built_in">set</span>(nums2)))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">intersection1</span>(<span class="params">self, nums1, nums2</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;排序+双指针&quot;&quot;&quot;</span></span><br><span class="line">nums1.sort()</span><br><span class="line">nums2.sort()</span><br><span class="line"></span><br><span class="line">index1 = <span class="number">0</span></span><br><span class="line">index2 = <span class="number">0</span></span><br><span class="line">intersection = <span class="built_in">list</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> index1 &lt; <span class="built_in">len</span>(nums1) <span class="keyword">and</span> index2 &lt; <span class="built_in">len</span>(nums2):</span><br><span class="line"><span class="keyword">if</span> nums1[index1] == nums2[index2]:</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> intersection <span class="keyword">or</span> nums1[index1] != intersection[-<span class="number">1</span>]:</span><br><span class="line">intersection.append(nums1[index1])</span><br><span class="line"></span><br><span class="line">index1 += <span class="number">1</span></span><br><span class="line">index2 += <span class="number">1</span></span><br><span class="line"><span class="keyword">elif</span> nums1[index1] &lt; nums2[index2]:</span><br><span class="line">index1 += <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">index2 += <span class="number">1</span></span><br><span class="line"><span class="keyword">return</span> intersection</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">slt = Solution()</span><br><span class="line">nums1 = [<span class="number">2</span>, <span class="number">1</span>]</span><br><span class="line">nums2 = [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line"><span class="comment"># inter = slt.intersection(nums1, nums2)</span></span><br><span class="line">inter = slt.intersection(nums1, nums2)</span><br><span class="line"><span class="built_in">print</span>(inter)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;349-两个数组的交集&quot;&gt;&lt;a href=&quot;#349-两个数组的交集&quot; class=&quot;headerlink&quot; title=&quot;349.两个数组的交集&quot;&gt;&lt;/a&gt;349.两个数组的交集&lt;/h1&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;</summary>
      
    
    
    
    <category term="算法刷题" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/"/>
    
    <category term="leetcode" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/"/>
    
    <category term="349.两个数组的交集" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/349-%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/tags/%E6%95%B0%E7%BB%84/"/>
    
    <category term="集合" scheme="http://example.com/tags/%E9%9B%86%E5%90%88/"/>
    
    <category term="交集" scheme="http://example.com/tags/%E4%BA%A4%E9%9B%86/"/>
    
    <category term="双指针" scheme="http://example.com/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
    <category term="排序" scheme="http://example.com/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>leetcode | 268.丢失的数字</title>
    <link href="http://example.com/2022/08/11/%E4%B8%A2%E5%A4%B1%E7%9A%84%E6%95%B0%E5%AD%97/"/>
    <id>http://example.com/2022/08/11/%E4%B8%A2%E5%A4%B1%E7%9A%84%E6%95%B0%E5%AD%97/</id>
    <published>2022-08-12T03:02:18.000Z</published>
    <updated>2022-08-12T03:24:48.532Z</updated>
    
    <content type="html"><![CDATA[<h1 id="268-丢失的数字"><a href="#268-丢失的数字" class="headerlink" title="268.丢失的数字"></a>268.丢失的数字</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个包含 [0, n] 中 n 个数的数组 nums ，找出 [0, n] 这个范围内没有出现在数组中的那个数。</p><p>示例 1：<br>输入：nums = [3,0,1]<br>输出：2<br>解释：n = 3，因为有 3 个数字，所以所有的数字都在范围 [0,3] 内。2 是丢失的数字，因为它没有出现在 nums 中。</p><p>示例 2：<br>输入：nums = [0,1]<br>输出：2<br>解释：n = 2，因为有 2 个数字，所以所有的数字都在范围 [0,2] 内。2 是丢失的数字，因为它没有出现在 nums 中。</p><p><a href="https://leetcode.cn/problems/missing-number">题目链接</a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>一次遍历<br>遍历0~n的数字，如果不在nums数组中，则将其返回。</li><li>排序<br>将数组排序之后，即可根据数组中每个下标处的元素是否和下标相等，得到丢失的数字。<br>注：如果长度为n的数组（下标为0~n-1）元素与下标都相等，则丢失元素为n</li><li>位运算<br>数组 nums 中有 n 个数，在这 n 个数的后面添加从 0 到 n 的每个整数，则添加了 n+1 个整数，共有 2n+1 个整数。<br>在 2n+1 个整数中，丢失的数字只在后面 n+1 个整数中出现一次，其余的数字在前面 n 个整数中（即数组中）和后面 n+1 个整数中各出现一次，即其余的数字都出现了两次。<br>根据出现的次数的奇偶性，可以使用按位异或运算得到丢失的数字。按位异或运算^满足交换律和结合律，且对任意整数 x 都满足 x^x=0 和 x^0=x。<br>由于上述 2n+1 个整数中，丢失的数字出现了一次，其余的数字都出现了两次，因此对上述 2n+1 个整数进行按位异或运算，结果即为丢失的数字。</li><li>数学<br>丢失的数字 = 0~n的和 - nums数组的和<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">missingNumber</span>(<span class="params">self, nums</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        一次遍历</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        遍历0~n，如果数字不在nums中，就将它返回</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums) + <span class="number">1</span>):</span><br><span class="line"><span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> nums:</span><br><span class="line"><span class="keyword">return</span> i</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">missingNumber1</span>(<span class="params">self, nums</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        将数组排序之后，即可根据数组中每个下标处的元素是否和下标相等，得到丢失的数字。</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        注：如果长度为n的数组（下标为0~n-1）元素与下标都相等，则丢失元素为n</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">nums.sort()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, num <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line"><span class="keyword">if</span> i != num:</span><br><span class="line"><span class="keyword">return</span> i</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">len</span>(nums)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">missingNumber2</span>(<span class="params">self, nums</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    位运算</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">xor = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, num <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line">xor ^= i ^ num</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> xor ^ <span class="built_in">len</span>(nums)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">missingNumber3</span>(<span class="params">self, nums</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">数学运算</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">n = <span class="built_in">len</span>(nums)</span><br><span class="line"></span><br><span class="line">total = (n*(n+<span class="number">1</span>)) // <span class="number">2</span></span><br><span class="line">nums_sum = <span class="built_in">sum</span>(nums)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> total - nums_sum</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">slt = Solution()</span><br><span class="line">nums = [<span class="number">3</span>, <span class="number">0</span>, <span class="number">1</span>]</span><br><span class="line"><span class="comment"># missing_number = slt.missingNumber(nums)</span></span><br><span class="line"><span class="comment"># missing_number = slt.missingNumber1(nums)</span></span><br><span class="line"><span class="comment"># missing_number = slt.missingNumber2(nums)</span></span><br><span class="line">missing_number = slt.missingNumber3(nums)</span><br><span class="line"><span class="built_in">print</span>(missing_number)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;268-丢失的数字&quot;&gt;&lt;a href=&quot;#268-丢失的数字&quot; class=&quot;headerlink&quot; title=&quot;268.丢失的数字&quot;&gt;&lt;/a&gt;268.丢失的数字&lt;/h1&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="算法刷题" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/"/>
    
    <category term="leetcode" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/"/>
    
    <category term="268.丢失的数字" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/268-%E4%B8%A2%E5%A4%B1%E7%9A%84%E6%95%B0%E5%AD%97/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>python | 文件操作</title>
    <link href="http://example.com/2022/08/09/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
    <id>http://example.com/2022/08/09/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</id>
    <published>2022-08-10T03:24:10.000Z</published>
    <updated>2022-08-10T03:55:39.493Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h1><p>由于我在之前上传的博客文件（markdown文件）中使用了缩进表示代码块，这中方式显示的代码块不够美观，最近发现可以使用<br><img src="/2022/08/09/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/1.png"><br>来表示python代码块，以这种方式表示的代码块非常美观。但是我的博客中可能有上百篇需要去修改，因此考虑使用python自动化修改，这个过程需要使用<strong>文件操作</strong>方面的知识，因此又将<strong>python文件操作</strong>相关知识又练习了一遍，然后再抽出时间去修改博客文件代码块的表示方式。</p><p><strong>注意：</strong> 在打开文件时，当mode选择’w+’,’a+’,’ab+’,’wb+’时，虽然官方文档说明这几种模式为可读可写，但是在使用这几种模式读文件时，读出内容为空，原因见以上示例中。</p><span id="more"></span><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.打开文件、文件读写、文件关闭</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">打开文件</span></span><br><span class="line"><span class="string">f = open(filename, mode)  # mode:r,w,a,rb,wb,ab,r+,w+,a+,rb+,wb+,ab+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">读文件</span></span><br><span class="line"><span class="string">f.readlines()  # 读取整个文件的内容，返回一个文件内容列表</span></span><br><span class="line"><span class="string">f.read(num)  # 读取num个字节的内容，如果不写则读取文件中全部内容</span></span><br><span class="line"><span class="string">f.readline()  # 读取文件中的一行内容</span></span><br><span class="line"><span class="string">f.readable()  # 文件是否可读</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">写文件</span></span><br><span class="line"><span class="string">f.write()  # 向文件中写入一行内容</span></span><br><span class="line"><span class="string">f.writelines(list)  # 向文件中写入多行内容,list为要写入文件的内容列表</span></span><br><span class="line"><span class="string">f.writable()  # 文件是否可写</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">关闭文件</span></span><br><span class="line"><span class="string">f.close()</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># 打开文件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试只读模式</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件存在</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">test_mode_r.txt</span></span><br><span class="line"><span class="string">content:</span></span><br><span class="line"><span class="string">test mode r</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">mode = <span class="string">&#x27;r&#x27;</span>  <span class="comment"># 只读模式，从头开始读</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_r.txt&#x27;</span>, mode)</span><br><span class="line"><span class="built_in">print</span>(f.readlines())  <span class="comment"># [&#x27;test mode r&#x27;]</span></span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件不存在</span></span><br><span class="line">mode = <span class="string">&#x27;r&#x27;</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_r1.txt&#x27;</span>, mode)  <span class="comment"># FileNotFoundError: [Errno 2] No such file or directory: &#x27;testt.txt&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试只写模式</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试文件存在时只写模式</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">test_mode_w.txt</span></span><br><span class="line"><span class="string">content:</span></span><br><span class="line"><span class="string">there are some texts.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">mode = <span class="string">&#x27;w&#x27;</span>  <span class="comment"># 只写模式，文件存在则覆盖，不存在创建新文件</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_w.txt&#x27;</span>, mode)</span><br><span class="line">f.writelines(<span class="string">&#x27;this is mode r test.&#x27;</span>)  <span class="comment"># 覆盖文件原有内容</span></span><br><span class="line">f.close()</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">result:</span></span><br><span class="line"><span class="string">this is mode r test.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试文件不存在时只写模式</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_w1.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">f.write(<span class="string">&quot;this is mode r test.&quot;</span>)</span><br><span class="line">f.close()</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">创建文件并写入文本</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">test_mode_w1.txt</span></span><br><span class="line"><span class="string">content:</span></span><br><span class="line"><span class="string">this is mode r test.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试追加模式</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试文件存在时追加模式</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">test_mode_a.txt</span></span><br><span class="line"><span class="string">context:</span></span><br><span class="line"><span class="string">there are some texts.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">mode = <span class="string">&#x27;a&#x27;</span>  <span class="comment"># 追加，文件已存在向文件中追加新内容，文件不存在则创建新文件</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_a.txt&#x27;</span>, mode)</span><br><span class="line">f.write(<span class="string">&#x27;\nthis is a test.&#x27;</span>)  <span class="comment"># 向文件末尾追加内容</span></span><br><span class="line">f.close()</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">test_mode_a.txt</span></span><br><span class="line"><span class="string">context:</span></span><br><span class="line"><span class="string">there are some texts.</span></span><br><span class="line"><span class="string">this is a test.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试文件不存在时追加模式</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_a1.txt&#x27;</span>, <span class="string">&#x27;a&#x27;</span>)  <span class="comment"># 新建test_mode_a1.txt文件</span></span><br><span class="line">f.write(<span class="string">&#x27;this is a test.\n&#x27;</span>)  <span class="comment"># 向文件末尾追加内容</span></span><br><span class="line">f.close()</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">test_mode_a1.txt</span></span><br><span class="line"><span class="string">content:</span></span><br><span class="line"><span class="string">this is a test.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试二进制只读</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件存在</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">test_mode_rb.txt</span></span><br><span class="line"><span class="string">content:</span></span><br><span class="line"><span class="string">this is mode rb test.</span></span><br><span class="line"><span class="string">this is mode rb test.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">mode = <span class="string">&#x27;rb&#x27;</span>  <span class="comment"># 二进制只读模式</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_rb.txt&#x27;</span>, mode)</span><br><span class="line"><span class="built_in">print</span>(f.readlines())  <span class="comment"># [b&#x27;this is mode rb test.\r\n&#x27;, b&#x27;this is mode rb test.&#x27;]</span></span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件不存在</span></span><br><span class="line">mode = <span class="string">&#x27;rb&#x27;</span>  <span class="comment"># 抛出文件不存在异常</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_rb1.txt&#x27;</span>, mode)  <span class="comment"># FileNotFoundError: [Errno 2] No such file or directory: &#x27;test_mode_rb1.txt&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试二进制只写</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件存在</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">test_mode_wb.txt</span></span><br><span class="line"><span class="string">content:</span></span><br><span class="line"><span class="string">there are some text.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">mode = <span class="string">&#x27;wb&#x27;</span>  <span class="comment"># 以二进制方式写入，若文件存在，则覆盖原有内容</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_wb.txt&#x27;</span>, mode)</span><br><span class="line">f.write(<span class="string">&#x27;binary writing&#x27;</span>.encode())</span><br><span class="line">f.close()</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">test_mode_wb.txt</span></span><br><span class="line"><span class="string">content:</span></span><br><span class="line"><span class="string">binary writing</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件不存在</span></span><br><span class="line">mode = <span class="string">&#x27;wb&#x27;</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_wb1.txt&#x27;</span>, mode)  <span class="comment"># 文件不存在时，创建新的文件，然后以二进制方式写入</span></span><br><span class="line">f.write(<span class="string">&#x27;this is mode wb test.&#x27;</span>.encode())</span><br><span class="line">f.close()</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">test_mode_wb.txt</span></span><br><span class="line"><span class="string">content:</span></span><br><span class="line"><span class="string">this is mode wb test.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试二进制方式追加</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件存在</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">test_mode_ab.txt</span></span><br><span class="line"><span class="string">content:</span></span><br><span class="line"><span class="string">there are some texts.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">mode = <span class="string">&#x27;ab&#x27;</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_ab.txt&#x27;</span>, mode)   <span class="comment"># 文件存在时，以二进制方式在文件末尾追加内容</span></span><br><span class="line">f.write(<span class="string">&#x27;\nthis is mode ab test.&#x27;</span>.encode())</span><br><span class="line">f.close()</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">test_mode_ab.txt</span></span><br><span class="line"><span class="string">content:</span></span><br><span class="line"><span class="string">there are some texts.</span></span><br><span class="line"><span class="string">this is mode ab test.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件不存在</span></span><br><span class="line">mode = <span class="string">&#x27;ab&#x27;</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_ab1.txt&#x27;</span>, mode)</span><br><span class="line">f.write(<span class="string">&#x27;this is mode ab test.&#x27;</span>.encode())</span><br><span class="line">f.close()</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">test_mode_ab1.txt</span></span><br><span class="line"><span class="string">    content:</span></span><br><span class="line"><span class="string">        this is mode ab test.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试r+</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件存在</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">test_mode_r+.txt</span></span><br><span class="line"><span class="string">content:</span></span><br><span class="line"><span class="string">there are some texts</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">mode = <span class="string">&#x27;r+&#x27;</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_r+.txt&#x27;</span>, mode)</span><br><span class="line"><span class="built_in">print</span>(f.readlines())  <span class="comment"># 读</span></span><br><span class="line">f.write(<span class="string">&#x27;\nthis is mode r+ test.&#x27;</span>)  <span class="comment"># 写</span></span><br><span class="line">f.close()</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">test_mode_r+.txt</span></span><br><span class="line"><span class="string">content:</span></span><br><span class="line"><span class="string">there are some texts.</span></span><br><span class="line"><span class="string">this is mode r+ test.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件不存在</span></span><br><span class="line">mode = <span class="string">&#x27;r+&#x27;</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_r+1.txt&#x27;</span>, mode)  <span class="comment"># FileNotFoundError: [Errno 2] No such file or directory: &#x27;test_mode_r+1.txt&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试w+</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件存在</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">test_mode_w+.txt</span></span><br><span class="line"><span class="string">    content:</span></span><br><span class="line"><span class="string">        there are some texts.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">mode = <span class="string">&#x27;w+&#x27;</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_w+.txt&#x27;</span>, mode)</span><br><span class="line">f.write(<span class="string">&#x27;this is mode w+ test.&#x27;</span>)  <span class="comment"># 文件中的内容变为：this is mode w+ test.</span></span><br><span class="line">f.close()</span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_w+.txt&#x27;</span>, mode)</span><br><span class="line"><span class="built_in">print</span>(f.tell())  <span class="comment"># 0</span></span><br><span class="line"><span class="built_in">print</span>(f.readlines())  <span class="comment"># []</span></span><br><span class="line">f.close()</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">注意：</span></span><br><span class="line"><span class="string">1）官方解释：w+模式打开一个文件用于文件读写</span></span><br><span class="line"><span class="string">2）我们读取出来的内容为空</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">我们可以看到我们使用f.tell()查看指针位置，指针的位置为0，既指向文件开头，</span></span><br><span class="line"><span class="string">同时，运行以w+方式打开文件的代码，打开文件发现内容为空，也既以w+方式打开文件，</span></span><br><span class="line"><span class="string">会将文件中的内容清空，因此我们读不到内容。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">总结：w+可以读文件（程序能够正常运行且不会抛出异常），但是读不出内容</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件不存在</span></span><br><span class="line">mode = <span class="string">&#x27;w+&#x27;</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_w+1.txt&#x27;</span>, mode)</span><br><span class="line">f.write(<span class="string">&#x27;this is mode w+ test.&#x27;</span>)  <span class="comment"># 文件内容变为：this is mode w+ test.</span></span><br><span class="line">f.close()</span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_w+1.txt&#x27;</span>, mode)</span><br><span class="line"><span class="built_in">print</span>(f.readlines())  <span class="comment"># []读取内容为空</span></span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试a+</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件存在</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">test_mode_a+.txt</span></span><br><span class="line"><span class="string">content:</span></span><br><span class="line"><span class="string">there are some texts.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">mode = <span class="string">&#x27;a+&#x27;</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_a+.txt&#x27;</span>, mode)</span><br><span class="line">f.write(<span class="string">&#x27;\nthis is mode a+ test.&#x27;</span>)</span><br><span class="line">f.close()</span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_a+.txt&#x27;</span>, mode)</span><br><span class="line"><span class="built_in">print</span>(f.readlines())  <span class="comment"># [] a+模式，打开文件后，指针指向文件末尾，故也读不出内容。</span></span><br><span class="line">f.close()</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">test_mode_a+.txt</span></span><br><span class="line"><span class="string">content:</span></span><br><span class="line"><span class="string">there are some texts.</span></span><br><span class="line"><span class="string">this is mode a+ test.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件不存在</span></span><br><span class="line">mode = <span class="string">&#x27;a+&#x27;</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_a+1.txt&#x27;</span>, mode)</span><br><span class="line">f.write(<span class="string">&#x27;this is mode a+ test.&#x27;</span>)</span><br><span class="line">f.close()</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">test_mode_a+1.txt</span></span><br><span class="line"><span class="string">content:</span></span><br><span class="line"><span class="string">this is mode a+ test.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试rb+</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件存在</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">test_mode_rb+.txt</span></span><br><span class="line"><span class="string">content:</span></span><br><span class="line"><span class="string">there are some texts.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">mode = <span class="string">&#x27;rb+&#x27;</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_rb+.txt&#x27;</span>, mode)</span><br><span class="line"><span class="built_in">print</span>(f.readlines())  <span class="comment"># [b&#x27;there are some texts.&#x27;]</span></span><br><span class="line">f.write(<span class="string">&#x27;\nthis is rb+ mode test.&#x27;</span>.encode())</span><br><span class="line">f.close()</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">test_mode_rb+.txt</span></span><br><span class="line"><span class="string">content:</span></span><br><span class="line"><span class="string">there are some texts.</span></span><br><span class="line"><span class="string">this is rb+ mode test.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件不存在</span></span><br><span class="line">mode = <span class="string">&#x27;rb+&#x27;</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_rb+1.txt&#x27;</span>, mode)  <span class="comment"># FileNotFoundError: [Errno 2] No such file or directory: &#x27;test_mode_rb+1.txt&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试wb+</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件存在</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">test_mode_wb+.txt</span></span><br><span class="line"><span class="string">content:</span></span><br><span class="line"><span class="string">there are some texts.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">mode = <span class="string">&#x27;wb+&#x27;</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_wb+.txt&#x27;</span>, mode)</span><br><span class="line">f.write(<span class="string">&#x27;this is wb+ mode test.&#x27;</span>.encode())  <span class="comment"># 文件内容变为：this is wb+ mode test.</span></span><br><span class="line">f.close()</span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_wb+.txt&#x27;</span>, mode)</span><br><span class="line"><span class="built_in">print</span>(f.readlines())  <span class="comment"># 与w+模式相同，打开文件时会清空文件内容，读不出内容</span></span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件不存在</span></span><br><span class="line">mode = <span class="string">&#x27;wb+&#x27;</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_wb+1.txt&#x27;</span>, mode)  <span class="comment"># 新建文件test_mode_wb+1.txt</span></span><br><span class="line">f.write(<span class="string">&#x27;this is wb+ mode test.&#x27;</span>.encode())  <span class="comment"># 向文件中写入内容</span></span><br><span class="line">f.close()</span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_wb+.txt&#x27;</span>, mode)</span><br><span class="line"><span class="built_in">print</span>(f.readlines())  <span class="comment"># 与w+模式相同，打开文件时会清空文件内容，读不出内容</span></span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试ab+</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件存在</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">test_mode_ab+.txt</span></span><br><span class="line"><span class="string">content:</span></span><br><span class="line"><span class="string">there are some texts.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">mode = <span class="string">&#x27;ab+&#x27;</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_ab+.txt&#x27;</span>, mode)  <span class="comment"># 打开文件</span></span><br><span class="line">f.write(<span class="string">&#x27;this is ab+ mode test.&#x27;</span>.encode())  <span class="comment"># 以二进制形式向文件末尾追加内容</span></span><br><span class="line">f.close()</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">test_mode_ab+.txt</span></span><br><span class="line"><span class="string">content:</span></span><br><span class="line"><span class="string">there are some texts.</span></span><br><span class="line"><span class="string">this is ab+ mode teset.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># 文件不存在</span></span><br><span class="line">mode = <span class="string">&#x27;ab+&#x27;</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test_mode_ab+1.txt&#x27;</span>, mode)  <span class="comment"># 新建test_mode_ab+1.txt文件</span></span><br><span class="line">f.write(<span class="string">&#x27;this is ab+ mode test.&#x27;</span>.encode())  <span class="comment"># 以二进制形式向文件中追加内容</span></span><br><span class="line">f.close()</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">test_mode_ab+1.txt</span></span><br><span class="line"><span class="string">content:</span></span><br><span class="line"><span class="string">this is ab+ mode test.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.文件的定位读写</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取当前读写位置</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;current_position.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">string = f.read(<span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(string)</span><br><span class="line">curr_pos = f.tell()  <span class="comment"># f.tell()获取当前读写的位置</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;当前文件指针位置：&quot;</span>, curr_pos)</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定位到某个位置</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">f.seek(offset, from)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">offset:偏移量</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">from:方向</span></span><br><span class="line"><span class="string">0：文件开头</span></span><br><span class="line"><span class="string">1：当前位置</span></span><br><span class="line"><span class="string">2：文件末尾</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;current_position.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">string = f.read(<span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;读取4个字节的字符串：&quot;</span>, string)</span><br><span class="line">curr_pos = f.tell()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;当前文件指针位置：&quot;</span>, curr_pos)</span><br><span class="line"><span class="comment"># f.seek(5, 0)</span></span><br><span class="line">f.seek(<span class="number">5</span>, <span class="number">1</span>)</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">报错：io.UnsupportedOperation: can&#x27;t do nonzero end-relative seeks</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">原因：没有以二进制方式打开文件，只允许从文件头开始计算相对位置，从其他位置计算相对位置会报错。</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;当前文件指针位置：&quot;</span>, f.tell())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.文件的重命名、删除</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件重命名</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.rename(<span class="string">&quot;old_name.txt&quot;</span>, <span class="string">&quot;new_name.txt&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除文件</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.remove(<span class="string">&quot;new_name.txt&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.文件夹操作</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建文件夹</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.mkdir(<span class="string">&quot;directory&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取当前目录</span></span><br><span class="line"><span class="built_in">print</span>(os.getcwd())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 改变默认目录</span></span><br><span class="line">os.chdir(<span class="string">r&quot;E:\my\python_project\leetcode\文件操作\directory&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(os.getcwd())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取目录列表</span></span><br><span class="line"><span class="built_in">print</span>(os.listdir(<span class="string">&quot;./&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># # 删除文件夹</span></span><br><span class="line">os.rmdir(<span class="string">&quot;directory&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;文件操作&quot;&gt;&lt;a href=&quot;#文件操作&quot; class=&quot;headerlink&quot; title=&quot;文件操作&quot;&gt;&lt;/a&gt;文件操作&lt;/h1&gt;&lt;p&gt;由于我在之前上传的博客文件（markdown文件）中使用了缩进表示代码块，这中方式显示的代码块不够美观，最近发现可以使用&lt;br&gt;&lt;img src=&quot;/2022/08/09/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/1.png&quot;&gt;&lt;br&gt;来表示python代码块，以这种方式表示的代码块非常美观。但是我的博客中可能有上百篇需要去修改，因此考虑使用python自动化修改，这个过程需要使用&lt;strong&gt;文件操作&lt;/strong&gt;方面的知识，因此又将&lt;strong&gt;python文件操作&lt;/strong&gt;相关知识又练习了一遍，然后再抽出时间去修改博客文件代码块的表示方式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt; 在打开文件时，当mode选择’w+’,’a+’,’ab+’,’wb+’时，虽然官方文档说明这几种模式为可读可写，但是在使用这几种模式读文件时，读出内容为空，原因见以上示例中。&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    <category term="基础" scheme="http://example.com/categories/python/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="文件操作" scheme="http://example.com/categories/python/%E5%9F%BA%E7%A1%80/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
    <category term="文件操作" scheme="http://example.com/tags/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>leetcode | 228.汇总区间</title>
    <link href="http://example.com/2022/08/06/%E6%B1%87%E6%80%BB%E5%8C%BA%E9%97%B4/"/>
    <id>http://example.com/2022/08/06/%E6%B1%87%E6%80%BB%E5%8C%BA%E9%97%B4/</id>
    <published>2022-08-06T13:35:31.000Z</published>
    <updated>2022-08-06T13:41:58.057Z</updated>
    
    <content type="html"><![CDATA[<h1 id="228-汇总区间"><a href="#228-汇总区间" class="headerlink" title="228.汇总区间"></a>228.汇总区间</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个  无重复元素 的 有序 整数数组 nums 。<br>返回数组中的连续区间范围列表。<br>列表中的每个区间范围 [a,b] 应该按如下格式输出：<br>    “a-&gt;b” ，如果 a != b<br>    “a” ，如果 a == b</p><p>示例 1：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [0,1,2,4,5,7]</span><br><span class="line">输出：[&quot;0-&gt;2&quot;,&quot;4-&gt;5&quot;,&quot;7&quot;]</span><br><span class="line">解释：区间范围是：</span><br><span class="line">[0,2] --&gt; &quot;0-&gt;2&quot;</span><br><span class="line">[4,5] --&gt; &quot;4-&gt;5&quot;</span><br><span class="line">[7,7] --&gt; &quot;7&quot;</span><br></pre></td></tr></table></figure><p><a href="https://leetcode.cn/problems/summary-ranges">题目链接</a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>一次遍历<br>我们从数组的位置 0 出发，向右遍历。每次遇到相邻元素之间的差值大于 1 时，我们就找到了一个区间。遍历完数组之后，就能得到一系列的区间的列表。<br>在遍历过程中，维护下标 low 和 high 分别记录区间的起点和终点，对于任何区间都有 low≤high。当得到一个区间时，根据 low 和 high 的值生成区间的字符串表示。<br>(1)当 low&lt;high 时，区间的字符串表示为 “low→high”；<br>(2)当 low=high 时，区间的字符串表示为 “low”。<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">summaryRanges</span>(<span class="params">self, nums</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :rtype: List[str]</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> nums:</span><br><span class="line"><span class="keyword">return</span> []</span><br><span class="line">result = []</span><br><span class="line">temp_list = [nums[<span class="number">0</span>]]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(nums)):</span><br><span class="line"><span class="keyword">if</span> nums[i] == nums[i - <span class="number">1</span>] + <span class="number">1</span>:</span><br><span class="line">temp_list.append(nums[i])</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">if</span> temp_list[<span class="number">0</span>] == temp_list[-<span class="number">1</span>]:</span><br><span class="line">result.append(<span class="built_in">str</span>(temp_list[<span class="number">0</span>]))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">result.append(<span class="built_in">str</span>(temp_list[<span class="number">0</span>]) + <span class="string">&quot;-&gt;&quot;</span> + <span class="built_in">str</span>(temp_list[-<span class="number">1</span>]))</span><br><span class="line">temp_list = <span class="built_in">list</span>()</span><br><span class="line">temp_list.append(nums[i])</span><br><span class="line"><span class="keyword">if</span> temp_list:</span><br><span class="line"><span class="keyword">if</span> temp_list[<span class="number">0</span>] == temp_list[-<span class="number">1</span>]:</span><br><span class="line">result.append(<span class="built_in">str</span>(temp_list[<span class="number">0</span>]))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">result.append(<span class="built_in">str</span>(temp_list[<span class="number">0</span>]) + <span class="string">&quot;-&gt;&quot;</span> + <span class="built_in">str</span>(temp_list[-<span class="number">1</span>]))</span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">summaryRanges1</span>(<span class="params">self, nums</span>):</span></span><br><span class="line">result = []</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">n = <span class="built_in">len</span>(nums)</span><br><span class="line"><span class="keyword">while</span> i &lt; n:</span><br><span class="line">low = i</span><br><span class="line">i += <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> i &lt; n <span class="keyword">and</span> nums[i] == nums[i - <span class="number">1</span>] + <span class="number">1</span>:</span><br><span class="line">i += <span class="number">1</span></span><br><span class="line">high = i - <span class="number">1</span></span><br><span class="line">temp = <span class="built_in">str</span>(nums[low])</span><br><span class="line"><span class="keyword">if</span> low &lt; high:</span><br><span class="line">temp += <span class="string">&quot;-&gt;&quot;</span></span><br><span class="line">temp += <span class="built_in">str</span>(nums[high])</span><br><span class="line">result.append(temp)</span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">slt = Solution()</span><br><span class="line">nums = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>]</span><br><span class="line"><span class="comment"># nums = [0, 2, 3, 4, 6, 8, 9]</span></span><br><span class="line"><span class="comment"># nums = []</span></span><br><span class="line"><span class="comment"># result = slt.summaryRanges(nums)</span></span><br><span class="line">result = slt.summaryRanges1(nums)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;228-汇总区间&quot;&gt;&lt;a href=&quot;#228-汇总区间&quot; class=&quot;headerlink&quot; title=&quot;228.汇总区间&quot;&gt;&lt;/a&gt;228.汇总区间&lt;/h1&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="算法刷题" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/"/>
    
    <category term="leetcode" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/"/>
    
    <category term="228.汇总区间" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/228-%E6%B1%87%E6%80%BB%E5%8C%BA%E9%97%B4/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>leetcode | 219.存在重复元素2</title>
    <link href="http://example.com/2022/08/03/%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A02/"/>
    <id>http://example.com/2022/08/03/%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A02/</id>
    <published>2022-08-03T14:23:32.000Z</published>
    <updated>2022-08-03T14:33:39.781Z</updated>
    
    <content type="html"><![CDATA[<h1 id="219-存在重复元素2"><a href="#219-存在重复元素2" class="headerlink" title="219.存在重复元素2"></a>219.存在重复元素2</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给你一个整数数组 nums 和一个整数 k ，判断数组中是否存在两个 不同的索引 i 和 j ，满足 nums[i] == nums[j] 且 abs(i - j) &lt;= k 。如果存在，返回 true ；否则，返回 false 。</p><p>示例 1：<br>输入：nums = [1,2,3,1], k = 3<br>输出：true</p><p>示例 2：<br>输入：nums = [1,0,1,1], k = 1<br>输出：true</p><p>示例 3：<br>输入：nums = [1,2,3,1,2,3], k = 2<br>输出：false</p><p><a href="https://leetcode.cn/problems/contains-duplicate-ii">题目链接</a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>哈希表<br>使用哈希表存储每一个元素的最大下表，在遍历元素的过程中，如果该元素已存在于哈希表中，则判断该元素当前下标减去该元素的最大下标，如果差值小于k，则返回True;<br>如果遍历过程中没有找到为相等元素且下标之差小于k的情况，则返回False。</li><li>滑动窗口<br>数组 nums 中的每个长度不超过 k+1 的滑动窗口，同一个滑动窗口中的任意两个下标差的绝对值不超过 k。如果存在一个滑动窗口，其中有重复元素，则存在两个不同的下标 i 和 j 满足 nums[i]=nums[j] 且 ∣i−j∣≤k。如果所有滑动窗口中都没有重复元素，则不存在符合要求的下标。因此，只要遍历每个滑动窗口，判断滑动窗口中是否有重复元素即可。<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">containsNearbyDuplicate</span>(<span class="params">self, nums, k</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">超出时间限制</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :type k: int</span></span><br><span class="line"><span class="string">        :rtype: bool</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">dict1 = <span class="built_in">dict</span>()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums)):</span><br><span class="line"><span class="keyword">if</span> nums[i] <span class="keyword">not</span> <span class="keyword">in</span> dict1.keys():</span><br><span class="line">dict1[nums[i]] = [i]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">dict1[nums[i]].append(i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> dict1.keys():</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(dict1[key])):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i+<span class="number">1</span>, <span class="built_in">len</span>(dict1[key])):</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">abs</span>(dict1[key][i]-dict1[key][j]) &lt;= k:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">containsNearbyDuplicate1</span>(<span class="params">self, nums, k</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;超出时间限制&quot;&quot;&quot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="built_in">len</span>(nums)-<span class="number">1</span>:</span><br><span class="line">j = i + <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> j &lt; <span class="built_in">len</span>(nums):</span><br><span class="line"><span class="keyword">if</span> nums[i] == nums[j] <span class="keyword">and</span> <span class="built_in">abs</span>(i-j) &lt;= k:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">j += <span class="number">1</span></span><br><span class="line">i += <span class="number">1</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">containsNearbyDuplicate2</span>(<span class="params">self, nums, k</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;哈希表&quot;&quot;&quot;</span></span><br><span class="line">pos = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i, num <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line"><span class="keyword">if</span> num <span class="keyword">in</span> pos <span class="keyword">and</span> i - pos[num] &lt;= k:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">pos[num] = i</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">containsNearbyDuplicate3</span>(<span class="params">self, nums, k</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;集合&quot;&quot;&quot;</span></span><br><span class="line">s = <span class="built_in">set</span>()</span><br><span class="line"><span class="keyword">for</span> i, num <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line"><span class="keyword">if</span> i &gt; k:</span><br><span class="line">s.remove(nums[i - k - <span class="number">1</span>])</span><br><span class="line"><span class="keyword">if</span> num <span class="keyword">in</span> s:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">s.add(num)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">slt = Solution()</span><br><span class="line"><span class="comment"># print(slt.containsNearbyDuplicate1([1, 2, 3, 1], 3))</span></span><br><span class="line"><span class="comment"># print(slt.containsNearbyDuplicate1([1, 0, 1, 1], 1))</span></span><br><span class="line"><span class="comment"># print(slt.containsNearbyDuplicate1([1, 2, 3, 1, 2, 3], 2))</span></span><br><span class="line"><span class="comment"># print(slt.containsNearbyDuplicate1([99, 99], 2))</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(slt.containsNearbyDuplicate2([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>], <span class="number">3</span>))</span><br><span class="line"><span class="built_in">print</span>(slt.containsNearbyDuplicate2([<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>], <span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(slt.containsNearbyDuplicate2([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], <span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(slt.containsNearbyDuplicate2([<span class="number">99</span>, <span class="number">99</span>], <span class="number">2</span>))</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;219-存在重复元素2&quot;&gt;&lt;a href=&quot;#219-存在重复元素2&quot; class=&quot;headerlink&quot; title=&quot;219.存在重复元素2&quot;&gt;&lt;/a&gt;219.存在重复元素2&lt;/h1&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;</summary>
      
    
    
    
    <category term="算法刷题" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/"/>
    
    <category term="leetcode" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/"/>
    
    <category term="219.存在重复元素2" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/219-%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A02/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/tags/%E6%95%B0%E7%BB%84/"/>
    
    <category term="哈希表" scheme="http://example.com/tags/%E5%93%88%E5%B8%8C%E8%A1%A8/"/>
    
    <category term="滑动窗口" scheme="http://example.com/tags/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>leetcode | 217.存在重复元素</title>
    <link href="http://example.com/2022/07/31/%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0/"/>
    <id>http://example.com/2022/07/31/%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0/</id>
    <published>2022-07-31T09:14:07.000Z</published>
    <updated>2022-07-31T09:18:05.993Z</updated>
    
    <content type="html"><![CDATA[<h1 id="217-存在重复元素"><a href="#217-存在重复元素" class="headerlink" title="217.存在重复元素"></a>217.存在重复元素</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给你一个整数数组 nums 。如果任一值在数组中出现 至少两次 ，返回 true ；如果数组中每个元素互不相同，返回 false 。</p><p>示例 1：<br>输入：nums = [1,2,3,1]<br>输出：true</p><p>示例 2：<br>输入：nums = [1,2,3,4]<br>输出：false</p><p><a href="https://leetcode.cn/problems/contains-duplicate">题目链接</a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>遍历并统计<br>遍历数组中的每一个数并统计这个数在数组中出现的次数，如果出现次数大于等于2，则返回True,<br>，如果正常结束，既遍历途中没有返回，则返回False<br>注：超出时间限制！！！</li><li>集合</li><li>1 使用集合对nums数组进行去重，如果去重后的集合长度不等于数组的长度，则返回True，否则返回False</li><li>2 对于数组中每个元素，我们将它插入到集合中。如果插入一个元素时发现该元素已经存在于集合中，则说明存在重复的元素。</li><li>排序<br>在对数字从小到大排序之后，数组的重复元素一定出现在相邻位置中。因此，我们可以扫描已排序的数组，每次判断相邻的两个元素是否相等，如果相等则说明存在重复的元素。<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">containsDuplicate</span>(<span class="params">self, nums</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">遍历并统计</span></span><br><span class="line"><span class="string">遍历数组中的每一个数并统计这个数在数组中出现的次数，如果出现次数大于等于2，则返回True,</span></span><br><span class="line"><span class="string">，如果正常结束，既遍历途中没有返回，则返回False</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">超出时间限制</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :rtype: bool</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> nums:</span><br><span class="line"><span class="keyword">if</span> nums.count(num) &gt;= <span class="number">2</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">containsDuplicate1</span>(<span class="params">self, nums</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">集合</span></span><br><span class="line"><span class="string">使用集合对nums数组进行去重，如果去重后的集合长度不等于数组的长度，则返回True，否则返回False</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">len</span>(<span class="built_in">set</span>(nums)) != <span class="built_in">len</span>(nums)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">containsDuplicate2</span>(<span class="params">self, nums</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">排序</span></span><br><span class="line"><span class="string">在对数字从小到大排序之后，数组的重复元素一定出现在相邻位置中。因此，我们可以扫描已排序的数组，每次判断相邻的两个元素是否相等，如果相等则说明存在重复的元素。</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">nums.sort()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums)-<span class="number">1</span>):</span><br><span class="line"><span class="keyword">if</span> nums[i] == nums[i+<span class="number">1</span>]:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">containsDuplicate3</span>(<span class="params">self, nums</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">集合</span></span><br><span class="line"><span class="string">对于数组中每个元素，我们将它插入到集合中。如果插入一个元素时发现该元素已经存在于集合中，则说明存在重复的元素。</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">hash_table = <span class="built_in">set</span>()</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> nums:</span><br><span class="line"><span class="keyword">if</span> num <span class="keyword">not</span> <span class="keyword">in</span> hash_table:</span><br><span class="line">hash_table.add(num)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">slt = Solution()</span><br><span class="line"><span class="comment"># result = slt.containsDuplicate([1, 2, 3, 1])</span></span><br><span class="line"><span class="comment"># result = slt.containsDuplicate1([1, 2, 3, 1])</span></span><br><span class="line"><span class="comment"># result = slt.containsDuplicate2([1, 2, 3, 1])</span></span><br><span class="line">result = slt.containsDuplicate3([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;217-存在重复元素&quot;&gt;&lt;a href=&quot;#217-存在重复元素&quot; class=&quot;headerlink&quot; title=&quot;217.存在重复元素&quot;&gt;&lt;/a&gt;217.存在重复元素&lt;/h1&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;head</summary>
      
    
    
    
    <category term="算法刷题" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/"/>
    
    <category term="leetcode" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/"/>
    
    <category term="217.存在重复元素" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/217-%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>leetcode | 88.合并两个有序数组</title>
    <link href="http://example.com/2022/07/31/%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/"/>
    <id>http://example.com/2022/07/31/%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/</id>
    <published>2022-07-31T08:13:54.000Z</published>
    <updated>2022-07-31T08:30:40.926Z</updated>
    
    <content type="html"><![CDATA[<h1 id="88-合并两个有序数组"><a href="#88-合并两个有序数组" class="headerlink" title="88.合并两个有序数组"></a>88.合并两个有序数组</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。<br>请你 合并 nums2 到 nums1 中，使合并后的数组同样按 非递减顺序 排列。<br>注意：最终，合并后数组不应由函数返回，而是存储在数组 nums1 中。为了应对这种情况，nums1 的初始长度为 m + n，其中前 m 个元素表示应合并的元素，后 n 个元素为 0 ，应忽略。nums2 的长度为 n 。</p><p>示例 1：<br>输入：nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3<br>输出：[1,2,2,3,5,6]<br>解释：需要合并 [1,2,3] 和 [2,5,6] 。<br>合并结果是 [1,2,2,3,5,6] ，其中斜体加粗标注的为 nums1 中的元素。</p><p><a href="https://leetcode.cn/problems/merge-sorted-array">题目链接</a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>归并<br>设置两个指针i,j,从头开始遍历两个数组，哪个指针指向位置的元素较小则加入结果列表中，该指针后移，…，依次类推。<br>如果两个数组长度不一样，循环结束后，需要将长度较长的数组剩余元素加入结果列表。</li><li>双指针<br>由于题目所给数组均有序，因此可以设置两个指针分别指向两个数组第一个元素，判断两个指针指向位置的元素大小，每次将较小的加入结果列表中。<br>如果某一个数组先遍历结束，后续只需要遍历另一个数组的剩余元素并将其加入结果列表中。</li><li>先将数组nums2放进数组nums1的尾部，然后直接对整个数组进行排序</li><li>逆向双指针<br>对双指针法进行改进，从后往前遍历数组，每次将较大元素放入结果列表中。<br>在双指针法中，我们需要创建长度为m+n的新数组保存结果，因为如果直接在nums1上保存，会覆盖nums1的元素。<br>与双指针方法不同的是，该方法可以原地地在nums1上保存结果（从后往前放入元素不会产生覆盖）。<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">merge</span>(<span class="params">self, nums1, m, nums2, n</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">归并</span></span><br><span class="line"><span class="string">        :type nums1: List[int]</span></span><br><span class="line"><span class="string">        :type m: int</span></span><br><span class="line"><span class="string">        :type nums2: List[int]</span></span><br><span class="line"><span class="string">        :type n: int</span></span><br><span class="line"><span class="string">        :rtype: None Do not return anything, modify nums1 in-place instead.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">j = <span class="number">0</span></span><br><span class="line">result = []</span><br><span class="line"><span class="keyword">while</span> i &lt; m <span class="keyword">and</span> j &lt; n:</span><br><span class="line"><span class="keyword">if</span> nums1[i] &lt; nums2[j]:</span><br><span class="line">result.append(nums1[i])</span><br><span class="line">i += <span class="number">1</span></span><br><span class="line"><span class="keyword">elif</span> nums1[i] &gt;= nums2[j]:</span><br><span class="line">result.append(nums2[j])</span><br><span class="line">j += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> m - i != <span class="number">0</span>:</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(m - (m - i), m):</span><br><span class="line">result.append(nums1[k])</span><br><span class="line"><span class="keyword">if</span> n - j != <span class="number">0</span>:</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> <span class="built_in">range</span>(n - (n - j), n):</span><br><span class="line">result.append(nums2[p])</span><br><span class="line"></span><br><span class="line">nums1[:] = result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">merge1</span>(<span class="params">self, nums1, m, nums2, n</span>):</span></span><br><span class="line"><span class="comment"># 先将数组nums2放进数组nums1的尾部，然后直接对整个数组进行排序</span></span><br><span class="line">nums1[m:] = nums2</span><br><span class="line">quick_sort(nums1, <span class="number">0</span>, <span class="built_in">len</span>(nums1) - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">merge2</span>(<span class="params">self, nums1, m, nums2, n</span>):</span></span><br><span class="line"><span class="built_in">sorted</span> = []</span><br><span class="line">p1, p2 = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> p1 &lt; m <span class="keyword">or</span> p2 &lt; n:</span><br><span class="line"><span class="keyword">if</span> p1 == m:</span><br><span class="line"><span class="built_in">sorted</span>.append(nums2[p2])</span><br><span class="line">p2 += <span class="number">1</span></span><br><span class="line"><span class="keyword">elif</span> p2 == n:</span><br><span class="line"><span class="built_in">sorted</span>.append(nums1[p1])</span><br><span class="line">p1 += <span class="number">1</span></span><br><span class="line"><span class="keyword">elif</span> nums1[p1] &lt; nums2[p2]:</span><br><span class="line"><span class="built_in">sorted</span>.append(nums1[p1])</span><br><span class="line">p1 += <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">sorted</span>.append(nums2[p2])</span><br><span class="line">p2 += <span class="number">1</span></span><br><span class="line">nums1[:] = <span class="built_in">sorted</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">merge3</span>(<span class="params">self, nums1, m, nums2, n</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;逆向双指针&quot;&quot;&quot;</span></span><br><span class="line">p1, p2 = m - <span class="number">1</span>, n - <span class="number">1</span></span><br><span class="line">tail = m + n - <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> p1 &gt;= <span class="number">0</span> <span class="keyword">or</span> p2 &gt;= <span class="number">0</span>:</span><br><span class="line"><span class="keyword">if</span> p1 == -<span class="number">1</span>:  <span class="comment"># 如果nums1数组已经遍历完毕，遍历nums2中的剩余元素</span></span><br><span class="line">nums1[tail] = nums2[p2]</span><br><span class="line">p2 -= <span class="number">1</span></span><br><span class="line"><span class="keyword">elif</span> p2 == -<span class="number">1</span>:  <span class="comment"># 如果nums2数组已经遍历完毕，遍历nums1中的剩余元素</span></span><br><span class="line">nums1[tail] = nums1[p1]</span><br><span class="line">p1 -= <span class="number">1</span></span><br><span class="line"><span class="keyword">elif</span> nums1[p1] &gt; nums2[p2]:</span><br><span class="line">nums1[tail] = nums1[p1]</span><br><span class="line">p1 -= <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">nums1[tail] = nums2[p2]</span><br><span class="line">p2 -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">tail -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quick_sort</span>(<span class="params">arr, low, high</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;快速排序&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> low &lt; high:</span><br><span class="line">pivot = partition(arr, low, high)</span><br><span class="line">quick_sort(arr, low, pivot - <span class="number">1</span>)</span><br><span class="line">quick_sort(arr, pivot + <span class="number">1</span>, high)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">partition</span>(<span class="params">arr, low, high</span>):</span></span><br><span class="line">pivot_key = arr[low]</span><br><span class="line"><span class="keyword">while</span> low &lt; high:</span><br><span class="line"><span class="keyword">while</span> low &lt; high <span class="keyword">and</span> arr[high] &gt;= pivot_key:</span><br><span class="line">high -= <span class="number">1</span></span><br><span class="line">arr[low], arr[high] = arr[high], arr[low]</span><br><span class="line"><span class="keyword">while</span> low &lt; high <span class="keyword">and</span> arr[low] &lt;= pivot_key:</span><br><span class="line">low += <span class="number">1</span></span><br><span class="line">arr[low], arr[high] = arr[high], arr[low]</span><br><span class="line"><span class="keyword">return</span> low</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">slt = Solution()</span><br><span class="line">nums1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">nums2 = [<span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line"><span class="comment"># slt.merge(nums1, 3, nums2, 3)</span></span><br><span class="line"><span class="comment"># slt.merge1(nums1, 3, nums2, 3)</span></span><br><span class="line"><span class="comment"># slt.merge2(nums1, 3, nums2, 3)</span></span><br><span class="line">slt.merge3(nums1, <span class="number">3</span>, nums2, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(nums1)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;88-合并两个有序数组&quot;&gt;&lt;a href=&quot;#88-合并两个有序数组&quot; class=&quot;headerlink&quot; title=&quot;88.合并两个有序数组&quot;&gt;&lt;/a&gt;88.合并两个有序数组&lt;/h1&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;</summary>
      
    
    
    
    <category term="算法刷题" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/"/>
    
    <category term="leetcode" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/"/>
    
    <category term="88.合并两个有序数组" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/88-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/tags/%E6%95%B0%E7%BB%84/"/>
    
    <category term="双指针" scheme="http://example.com/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
    <category term="归并" scheme="http://example.com/tags/%E5%BD%92%E5%B9%B6/"/>
    
    <category term="逆向双指针" scheme="http://example.com/tags/%E9%80%86%E5%90%91%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>leetcode | 66.加一</title>
    <link href="http://example.com/2022/07/30/%E5%8A%A0%E4%B8%80/"/>
    <id>http://example.com/2022/07/30/%E5%8A%A0%E4%B8%80/</id>
    <published>2022-07-31T02:28:12.000Z</published>
    <updated>2022-07-31T02:31:18.367Z</updated>
    
    <content type="html"><![CDATA[<h1 id="66-加一"><a href="#66-加一" class="headerlink" title="66.加一"></a>66.加一</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个由 整数 组成的 非空 数组所表示的非负整数，在该数的基础上加一。<br>最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。<br>你可以假设除了整数 0 之外，这个整数不会以零开头。</p><p>示例 1：<br>输入：digits = [1,2,3]<br>输出：[1,2,4]<br>解释：输入数组表示数字 123。</p><p><a href="https://leetcode.cn/problems/plus-one">题目链接</a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>从后往前找第一个不为9的元素，并将该位置后的9置零</li><li>将数组转化为数字加一再将结果转化为整数数组<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plusOne</span>(<span class="params">self, digits</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">从后往前找第一个不为9的元素，并将该位置后的9置零</span></span><br><span class="line"><span class="string">        :type digits: List[int]</span></span><br><span class="line"><span class="string">        :rtype: List[int]</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">n = <span class="built_in">len</span>(digits)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n - <span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line"><span class="keyword">if</span> digits[i] != <span class="number">9</span>:</span><br><span class="line">digits[i] += <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i + <span class="number">1</span>, n):</span><br><span class="line">digits[j] = <span class="number">0</span></span><br><span class="line"><span class="keyword">return</span> digits</span><br><span class="line"><span class="keyword">return</span> [<span class="number">1</span>] + [<span class="number">0</span>] * n</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plusOne1</span>(<span class="params">self, digits</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;将数组转化为数字加一再将结果转化为整数数组&quot;&quot;&quot;</span></span><br><span class="line">num = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> digit <span class="keyword">in</span> digits:</span><br><span class="line">num += <span class="built_in">str</span>(digit)</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">list</span>([<span class="built_in">int</span>(ch) <span class="keyword">for</span> ch <span class="keyword">in</span> <span class="built_in">str</span>(<span class="built_in">int</span>(num) + <span class="number">1</span>)])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">slt = Solution()</span><br><span class="line"><span class="comment"># result = slt.plusOne([1, 2, 3])</span></span><br><span class="line">result = slt.plusOne1([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;66-加一&quot;&gt;&lt;a href=&quot;#66-加一&quot; class=&quot;headerlink&quot; title=&quot;66.加一&quot;&gt;&lt;/a&gt;66.加一&lt;/h1&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;</summary>
      
    
    
    
    <category term="算法刷题" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/"/>
    
    <category term="leetcode" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/"/>
    
    <category term="66.加一" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/66-%E5%8A%A0%E4%B8%80/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>leetcode | 35.搜索插入位置</title>
    <link href="http://example.com/2022/07/29/%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE/"/>
    <id>http://example.com/2022/07/29/%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE/</id>
    <published>2022-07-29T09:07:49.000Z</published>
    <updated>2022-07-29T09:51:33.231Z</updated>
    
    <content type="html"><![CDATA[<h1 id="35-搜索插入位置"><a href="#35-搜索插入位置" class="headerlink" title="35.搜索插入位置"></a>35.搜索插入位置</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。<br>请必须使用时间复杂度为 O(log n) 的算法。</p><p>示例 1:<br>输入: nums = [1,3,5,6], target = 5<br>输出: 2</p><p>示例 2:<br>输入: nums = [1,3,5,6], target = 2<br>输出: 1</p><p><a href="https://leetcode.cn/problems/search-insert-position">题目链接</a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>利用二分查找目标值，如果存在，返回其索引，如果不存在，寻找插入位置。<br>（1）二分查找找到目标值，时间复杂度为O(log n)<br>（2）二分查找没找到目标值，时间复杂度为O(log n) + O(n)<br>因此，该方法会时间复杂度不符合题意。</li><li>根据题意，找到大于等于目标值的位置，该位置即为插入位置/目标值的位置。<br>该方法需要遍历数组，因此时间复杂度为O(n)，不符合题意。</li><li>二分查找变形<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">searchInsert</span>(<span class="params">self, nums, target</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">利用二分查找目标值，如果存在，返回其索引，如果不存在，寻找插入位置。</span></span><br><span class="line"><span class="string">（1）二分查找找到目标值，时间复杂度为O(log n)</span></span><br><span class="line"><span class="string">（2）二分查找没找到目标值，时间复杂度为O(log n) + O(n)</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :type target: int</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">index = self.binarySearch(nums, <span class="number">0</span>, <span class="built_in">len</span>(nums), target)</span><br><span class="line"><span class="keyword">if</span> index != -<span class="number">1</span>:</span><br><span class="line"><span class="keyword">return</span> index</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> self.findBigger(nums, target)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binarySearch</span>(<span class="params">self, arr, low, high, key</span>):</span></span><br><span class="line"><span class="keyword">if</span> low &lt;= high:</span><br><span class="line">mid = (low + high) // <span class="number">2</span></span><br><span class="line"><span class="keyword">if</span> arr[mid] == key:</span><br><span class="line"><span class="keyword">return</span> mid</span><br><span class="line"><span class="keyword">elif</span> arr[mid] &gt; key:</span><br><span class="line"><span class="keyword">return</span> self.binarySearch(arr, low, mid - <span class="number">1</span>, key)</span><br><span class="line"><span class="keyword">elif</span> arr[mid] &lt; key:</span><br><span class="line"><span class="keyword">return</span> self.binarySearch(arr, mid + <span class="number">1</span>, high, key)</span><br><span class="line"><span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findBigger</span>(<span class="params">self, arr, num</span>):</span></span><br><span class="line"><span class="keyword">if</span> num &lt; arr[<span class="number">0</span>]:</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> num &gt; arr[<span class="built_in">len</span>(arr) - <span class="number">1</span>]:</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">len</span>(arr)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(arr)):</span><br><span class="line"><span class="keyword">if</span> arr[i] &lt; num:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">return</span> i</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">searchInsert1</span>(<span class="params">self, nums, target</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">找到大于等于目标值的位置，该位置即为插入位置/目标值的位置。</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :type target: int</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> target &lt; nums[<span class="number">0</span>]:</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> target &gt; nums[<span class="built_in">len</span>(nums) - <span class="number">1</span>]:</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">len</span>(nums)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums)):</span><br><span class="line"><span class="keyword">if</span> nums[i] &gt;= target:</span><br><span class="line"><span class="keyword">return</span> i</span><br><span class="line"><span class="keyword">elif</span> nums[i] &lt; target:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">return</span> i</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">searchInsert2</span>(<span class="params">self, nums, target</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;searchInsert1的简化版&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> target &gt; nums[<span class="built_in">len</span>(nums) - <span class="number">1</span>]:</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">len</span>(nums)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums)):</span><br><span class="line"><span class="keyword">if</span> nums[i] &lt; target:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">return</span> i</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">searchInsert3</span>(<span class="params">self, nums, target</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        二分查找变形</span></span><br><span class="line"><span class="string">        不断用二分法逼近查找第一个大于等于 target的下标 </span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">l = <span class="number">0</span></span><br><span class="line">r = <span class="built_in">len</span>(nums) - <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> l &lt;= r:</span><br><span class="line">mid = l + (r - l) // <span class="number">2</span></span><br><span class="line"><span class="keyword">if</span> nums[mid] &lt; target:</span><br><span class="line">l = mid + <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">r = mid - <span class="number">1</span></span><br><span class="line"><span class="keyword">return</span> l</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">slt = Solution()</span><br><span class="line"><span class="comment"># result = slt.searchInsert([1, 3, 5, 6], 7)</span></span><br><span class="line"><span class="comment"># result = slt.searchInsert1([1, 3, 5, 6], 7)</span></span><br><span class="line"><span class="comment"># result = slt.searchInsert2([1, 3, 5, 6], 7)</span></span><br><span class="line">result = slt.searchInsert3([<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>], <span class="number">7</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;35-搜索插入位置&quot;&gt;&lt;a href=&quot;#35-搜索插入位置&quot; class=&quot;headerlink&quot; title=&quot;35.搜索插入位置&quot;&gt;&lt;/a&gt;35.搜索插入位置&lt;/h1&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="算法刷题" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/"/>
    
    <category term="leetcode" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/"/>
    
    <category term="35.搜索插入位置" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/35-%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/tags/%E6%95%B0%E7%BB%84/"/>
    
    <category term="二分查找" scheme="http://example.com/tags/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/"/>
    
  </entry>
  
  <entry>
    <title>线程池 | execute和submit方法的区别</title>
    <link href="http://example.com/2022/07/27/execute%E5%92%8Csubmit%E6%96%B9%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://example.com/2022/07/27/execute%E5%92%8Csubmit%E6%96%B9%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB/</id>
    <published>2022-07-27T09:02:23.000Z</published>
    <updated>2022-07-27T09:07:29.981Z</updated>
    
    <content type="html"><![CDATA[<h1 id="execute-和submit-的区别"><a href="#execute-和submit-的区别" class="headerlink" title="execute()和submit()的区别"></a>execute()和submit()的区别</h1><ol><li>线程池类关系如下：<br><img src="/2022/07/27/execute%E5%92%8Csubmit%E6%96%B9%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB/1658586453860.png"></li></ol><span id="more"></span><p><img src="/2022/07/27/execute%E5%92%8Csubmit%E6%96%B9%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB/1658586628228.png"></p><ol><li><p>由类关系可以得到线程池的架构图</p><p><img src="/2022/07/27/execute%E5%92%8Csubmit%E6%96%B9%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB/1658586004069.png" alt="1658586004069"></p></li><li><p>由下图可以看出Executor接口中的<strong>execute()只能执行Runnable类型的任务</strong></p></li></ol><p><img src="/2022/07/27/execute%E5%92%8Csubmit%E6%96%B9%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB/1658586548515.png" alt="1658586548515"></p><ol><li><p>由下图可以看出ExecutorService中的<strong>submit()方法可以既可以执行Runnable类型的任务也可以执行Callable类型的任务</strong></p><p><img src="/2022/07/27/execute%E5%92%8Csubmit%E6%96%B9%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB/1658586523414.png" alt="1658586523414"></p></li><li><p>由Executor接口的源码可以看出<strong>execute()方法无返回值</strong></p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Executor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Executes the given command at some time in the future.  The command</span></span><br><span class="line"><span class="comment">     * may execute in a new thread, in a pooled thread, or in the calling</span></span><br><span class="line"><span class="comment">     * thread, at the discretion of the &#123;<span class="doctag">@code</span> Executor&#125; implementation.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> command the runnable task</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> RejectedExecutionException if this task cannot be</span></span><br><span class="line"><span class="comment">     * accepted for execution</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NullPointerException if command is null</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">execute</span><span class="params">(Runnable command)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>由ExecutorService接口的源码可以看出<strong>submit()方法有返回值且返回值为Future类型</strong></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ExecutorService</span> <span class="keyword">extends</span> <span class="title">Executor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Initiates an orderly shutdown in which previously submitted</span></span><br><span class="line"><span class="comment">     * tasks are executed, but no new tasks will be accepted.</span></span><br><span class="line"><span class="comment">     * Invocation has no additional effect if already shut down.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;This method does not wait for previously submitted tasks to</span></span><br><span class="line"><span class="comment">     * complete execution.  Use &#123;<span class="doctag">@link</span> #awaitTermination awaitTermination&#125;</span></span><br><span class="line"><span class="comment">     * to do that.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SecurityException if a security manager exists and</span></span><br><span class="line"><span class="comment">     *         shutting down this ExecutorService may manipulate</span></span><br><span class="line"><span class="comment">     *         threads that the caller is not permitted to modify</span></span><br><span class="line"><span class="comment">     *         because it does not hold &#123;<span class="doctag">@link</span></span></span><br><span class="line"><span class="comment">     *         java.lang.RuntimePermission&#125;&#123;<span class="doctag">@code</span> (&quot;modifyThread&quot;)&#125;,</span></span><br><span class="line"><span class="comment">     *         or the security manager&#x27;s &#123;<span class="doctag">@code</span> checkAccess&#125; method</span></span><br><span class="line"><span class="comment">     *         denies access.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">shutdown</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Attempts to stop all actively executing tasks, halts the</span></span><br><span class="line"><span class="comment">     * processing of waiting tasks, and returns a list of the tasks</span></span><br><span class="line"><span class="comment">     * that were awaiting execution.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;This method does not wait for actively executing tasks to</span></span><br><span class="line"><span class="comment">     * terminate.  Use &#123;<span class="doctag">@link</span> #awaitTermination awaitTermination&#125; to</span></span><br><span class="line"><span class="comment">     * do that.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;There are no guarantees beyond best-effort attempts to stop</span></span><br><span class="line"><span class="comment">     * processing actively executing tasks.  For example, typical</span></span><br><span class="line"><span class="comment">     * implementations will cancel via &#123;<span class="doctag">@link</span> Thread#interrupt&#125;, so any</span></span><br><span class="line"><span class="comment">     * task that fails to respond to interrupts may never terminate.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> list of tasks that never commenced execution</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> SecurityException if a security manager exists and</span></span><br><span class="line"><span class="comment">     *         shutting down this ExecutorService may manipulate</span></span><br><span class="line"><span class="comment">     *         threads that the caller is not permitted to modify</span></span><br><span class="line"><span class="comment">     *         because it does not hold &#123;<span class="doctag">@link</span></span></span><br><span class="line"><span class="comment">     *         java.lang.RuntimePermission&#125;&#123;<span class="doctag">@code</span> (&quot;modifyThread&quot;)&#125;,</span></span><br><span class="line"><span class="comment">     *         or the security manager&#x27;s &#123;<span class="doctag">@code</span> checkAccess&#125; method</span></span><br><span class="line"><span class="comment">     *         denies access.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Runnable&gt; <span class="title">shutdownNow</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Returns &#123;<span class="doctag">@code</span> true&#125; if this executor has been shut down.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if this executor has been shut down</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">isShutdown</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Returns &#123;<span class="doctag">@code</span> true&#125; if all tasks have completed following shut down.</span></span><br><span class="line"><span class="comment">     * Note that &#123;<span class="doctag">@code</span> isTerminated&#125; is never &#123;<span class="doctag">@code</span> true&#125; unless</span></span><br><span class="line"><span class="comment">     * either &#123;<span class="doctag">@code</span> shutdown&#125; or &#123;<span class="doctag">@code</span> shutdownNow&#125; was called first.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if all tasks have completed following shut down</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">isTerminated</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Blocks until all tasks have completed execution after a shutdown</span></span><br><span class="line"><span class="comment">     * request, or the timeout occurs, or the current thread is</span></span><br><span class="line"><span class="comment">     * interrupted, whichever happens first.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> timeout the maximum time to wait</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> unit the time unit of the timeout argument</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if this executor terminated and</span></span><br><span class="line"><span class="comment">     *         &#123;<span class="doctag">@code</span> false&#125; if the timeout elapsed before termination</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> InterruptedException if interrupted while waiting</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">awaitTermination</span><span class="params">(<span class="keyword">long</span> timeout, TimeUnit unit)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> InterruptedException</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Submits a value-returning task for execution and returns a</span></span><br><span class="line"><span class="comment">     * Future representing the pending results of the task. The</span></span><br><span class="line"><span class="comment">     * Future&#x27;s &#123;<span class="doctag">@code</span> get&#125; method will return the task&#x27;s result upon</span></span><br><span class="line"><span class="comment">     * successful completion.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * If you would like to immediately block waiting</span></span><br><span class="line"><span class="comment">     * for a task, you can use constructions of the form</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@code</span> result = exec.submit(aCallable).get();&#125;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;Note: The &#123;<span class="doctag">@link</span> Executors&#125; class includes a set of methods</span></span><br><span class="line"><span class="comment">     * that can convert some other common closure-like objects,</span></span><br><span class="line"><span class="comment">     * for example, &#123;<span class="doctag">@link</span> java.security.PrivilegedAction&#125; to</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> Callable&#125; form so they can be submitted.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> task the task to submit</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt; the type of the task&#x27;s result</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> a Future representing pending completion of the task</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> RejectedExecutionException if the task cannot be</span></span><br><span class="line"><span class="comment">     *         scheduled for execution</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NullPointerException if the task is null</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;T&gt; <span class="function">Future&lt;T&gt; <span class="title">submit</span><span class="params">(Callable&lt;T&gt; task)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Submits a Runnable task for execution and returns a Future</span></span><br><span class="line"><span class="comment">     * representing that task. The Future&#x27;s &#123;<span class="doctag">@code</span> get&#125; method will</span></span><br><span class="line"><span class="comment">     * return the given result upon successful completion.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> task the task to submit</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> result the result to return</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt; the type of the result</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> a Future representing pending completion of the task</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> RejectedExecutionException if the task cannot be</span></span><br><span class="line"><span class="comment">     *         scheduled for execution</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NullPointerException if the task is null</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;T&gt; <span class="function">Future&lt;T&gt; <span class="title">submit</span><span class="params">(Runnable task, T result)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Submits a Runnable task for execution and returns a Future</span></span><br><span class="line"><span class="comment">     * representing that task. The Future&#x27;s &#123;<span class="doctag">@code</span> get&#125; method will</span></span><br><span class="line"><span class="comment">     * return &#123;<span class="doctag">@code</span> null&#125; upon &lt;em&gt;successful&lt;/em&gt; completion.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> task the task to submit</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> a Future representing pending completion of the task</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> RejectedExecutionException if the task cannot be</span></span><br><span class="line"><span class="comment">     *         scheduled for execution</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NullPointerException if the task is null</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Future&lt;?&gt; submit(Runnable task);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Executes the given tasks, returning a list of Futures holding</span></span><br><span class="line"><span class="comment">     * their status and results when all complete.</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> Future#isDone&#125; is &#123;<span class="doctag">@code</span> true&#125; for each</span></span><br><span class="line"><span class="comment">     * element of the returned list.</span></span><br><span class="line"><span class="comment">     * Note that a &lt;em&gt;completed&lt;/em&gt; task could have</span></span><br><span class="line"><span class="comment">     * terminated either normally or by throwing an exception.</span></span><br><span class="line"><span class="comment">     * The results of this method are undefined if the given</span></span><br><span class="line"><span class="comment">     * collection is modified while this operation is in progress.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tasks the collection of tasks</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt; the type of the values returned from the tasks</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> a list of Futures representing the tasks, in the same</span></span><br><span class="line"><span class="comment">     *         sequential order as produced by the iterator for the</span></span><br><span class="line"><span class="comment">     *         given task list, each of which has completed</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> InterruptedException if interrupted while waiting, in</span></span><br><span class="line"><span class="comment">     *         which case unfinished tasks are cancelled</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NullPointerException if tasks or any of its elements are &#123;<span class="doctag">@code</span> null&#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> RejectedExecutionException if any task cannot be</span></span><br><span class="line"><span class="comment">     *         scheduled for execution</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;T&gt; List&lt;Future&lt;T&gt;&gt; invokeAll(Collection&lt;? extends Callable&lt;T&gt;&gt; tasks)</span><br><span class="line">        <span class="keyword">throws</span> InterruptedException;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Executes the given tasks, returning a list of Futures holding</span></span><br><span class="line"><span class="comment">     * their status and results</span></span><br><span class="line"><span class="comment">     * when all complete or the timeout expires, whichever happens first.</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> Future#isDone&#125; is &#123;<span class="doctag">@code</span> true&#125; for each</span></span><br><span class="line"><span class="comment">     * element of the returned list.</span></span><br><span class="line"><span class="comment">     * Upon return, tasks that have not completed are cancelled.</span></span><br><span class="line"><span class="comment">     * Note that a &lt;em&gt;completed&lt;/em&gt; task could have</span></span><br><span class="line"><span class="comment">     * terminated either normally or by throwing an exception.</span></span><br><span class="line"><span class="comment">     * The results of this method are undefined if the given</span></span><br><span class="line"><span class="comment">     * collection is modified while this operation is in progress.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tasks the collection of tasks</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> timeout the maximum time to wait</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> unit the time unit of the timeout argument</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt; the type of the values returned from the tasks</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> a list of Futures representing the tasks, in the same</span></span><br><span class="line"><span class="comment">     *         sequential order as produced by the iterator for the</span></span><br><span class="line"><span class="comment">     *         given task list. If the operation did not time out,</span></span><br><span class="line"><span class="comment">     *         each task will have completed. If it did time out, some</span></span><br><span class="line"><span class="comment">     *         of these tasks will not have completed.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> InterruptedException if interrupted while waiting, in</span></span><br><span class="line"><span class="comment">     *         which case unfinished tasks are cancelled</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NullPointerException if tasks, any of its elements, or</span></span><br><span class="line"><span class="comment">     *         unit are &#123;<span class="doctag">@code</span> null&#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> RejectedExecutionException if any task cannot be scheduled</span></span><br><span class="line"><span class="comment">     *         for execution</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;T&gt; List&lt;Future&lt;T&gt;&gt; invokeAll(Collection&lt;? extends Callable&lt;T&gt;&gt; tasks,</span><br><span class="line">                                  <span class="keyword">long</span> timeout, TimeUnit unit)</span><br><span class="line">        <span class="keyword">throws</span> InterruptedException;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Executes the given tasks, returning the result</span></span><br><span class="line"><span class="comment">     * of one that has completed successfully (i.e., without throwing</span></span><br><span class="line"><span class="comment">     * an exception), if any do. Upon normal or exceptional return,</span></span><br><span class="line"><span class="comment">     * tasks that have not completed are cancelled.</span></span><br><span class="line"><span class="comment">     * The results of this method are undefined if the given</span></span><br><span class="line"><span class="comment">     * collection is modified while this operation is in progress.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tasks the collection of tasks</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt; the type of the values returned from the tasks</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the result returned by one of the tasks</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> InterruptedException if interrupted while waiting</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NullPointerException if tasks or any element task</span></span><br><span class="line"><span class="comment">     *         subject to execution is &#123;<span class="doctag">@code</span> null&#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IllegalArgumentException if tasks is empty</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ExecutionException if no task successfully completes</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> RejectedExecutionException if tasks cannot be scheduled</span></span><br><span class="line"><span class="comment">     *         for execution</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;T&gt; <span class="function">T <span class="title">invokeAny</span><span class="params">(Collection&lt;? extends Callable&lt;T&gt;&gt; tasks)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> InterruptedException, ExecutionException</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Executes the given tasks, returning the result</span></span><br><span class="line"><span class="comment">     * of one that has completed successfully (i.e., without throwing</span></span><br><span class="line"><span class="comment">     * an exception), if any do before the given timeout elapses.</span></span><br><span class="line"><span class="comment">     * Upon normal or exceptional return, tasks that have not</span></span><br><span class="line"><span class="comment">     * completed are cancelled.</span></span><br><span class="line"><span class="comment">     * The results of this method are undefined if the given</span></span><br><span class="line"><span class="comment">     * collection is modified while this operation is in progress.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tasks the collection of tasks</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> timeout the maximum time to wait</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> unit the time unit of the timeout argument</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt; the type of the values returned from the tasks</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the result returned by one of the tasks</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> InterruptedException if interrupted while waiting</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NullPointerException if tasks, or unit, or any element</span></span><br><span class="line"><span class="comment">     *         task subject to execution is &#123;<span class="doctag">@code</span> null&#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> TimeoutException if the given timeout elapses before</span></span><br><span class="line"><span class="comment">     *         any task successfully completes</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ExecutionException if no task successfully completes</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> RejectedExecutionException if tasks cannot be scheduled</span></span><br><span class="line"><span class="comment">     *         for execution</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;T&gt; <span class="function">T <span class="title">invokeAny</span><span class="params">(Collection&lt;? extends Callable&lt;T&gt;&gt; tasks,</span></span></span><br><span class="line"><span class="params"><span class="function">                    <span class="keyword">long</span> timeout, TimeUnit unit)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> InterruptedException, ExecutionException, TimeoutException</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>结论：</strong></p><ul><li>execute()只能执行Runnable类型的任务，方法无返回值</li><li>submit()方法可以既可以执行Runnable类型的任务也可以执行Callable类型的任务，方法有返回值且返回值为Future类型</li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;execute-和submit-的区别&quot;&gt;&lt;a href=&quot;#execute-和submit-的区别&quot; class=&quot;headerlink&quot; title=&quot;execute()和submit()的区别&quot;&gt;&lt;/a&gt;execute()和submit()的区别&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;线程池类关系如下：&lt;br&gt;&lt;img src=&quot;/2022/07/27/execute%E5%92%8Csubmit%E6%96%B9%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB/1658586453860.png&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="并发" scheme="http://example.com/categories/Java/%E5%B9%B6%E5%8F%91/"/>
    
    <category term="线程池" scheme="http://example.com/categories/Java/%E5%B9%B6%E5%8F%91/%E7%BA%BF%E7%A8%8B%E6%B1%A0/"/>
    
    <category term="execute()和submit()方法的区别" scheme="http://example.com/categories/Java/%E5%B9%B6%E5%8F%91/%E7%BA%BF%E7%A8%8B%E6%B1%A0/execute-%E5%92%8Csubmit-%E6%96%B9%E6%B3%95%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    
    
    <category term="线程池" scheme="http://example.com/tags/%E7%BA%BF%E7%A8%8B%E6%B1%A0/"/>
    
    <category term="execute()" scheme="http://example.com/tags/execute/"/>
    
    <category term="submit()" scheme="http://example.com/tags/submit/"/>
    
  </entry>
  
  <entry>
    <title>秋招面经 | 721开发测试面经</title>
    <link href="http://example.com/2022/07/21/721%E5%BC%80%E5%8F%91%E6%B5%8B%E8%AF%95%E9%9D%A2%E7%BB%8F/"/>
    <id>http://example.com/2022/07/21/721%E5%BC%80%E5%8F%91%E6%B5%8B%E8%AF%95%E9%9D%A2%E7%BB%8F/</id>
    <published>2022-07-21T09:39:08.000Z</published>
    <updated>2022-08-13T13:02:52.133Z</updated>
    
    <content type="html"><![CDATA[<h1 id="7-21开发测试面经"><a href="#7-21开发测试面经" class="headerlink" title="7.21开发测试面经"></a>7.21开发测试面经</h1><ul><li><p>sql语句 </p><p>表结构</p><p>​    表名：student<br>​    字段：id name score</p><p>问题：成绩倒数第二/正数第二的学生名字</p><p>SELECT student.name, student.scores FROM student ORDER BY scores DESC LIMIT 1, 1</p><p>SELECT student.name, student.scores FROM student ORDER BY scores ASC LIMIT 1, 1</p></li><li><p>内外连接</p><p>SELECT student.name, student.scores, class.id FROM student INNER JOIN class ON student.<code>classid</code> = class.id</p><p>SELECT student.name, student.scores, class.id FROM student LEFT JOIN class ON student.<code>classid</code> = class.<code>id</code></p><p>SELECT student.name, student.scores, class.id FROM student RIGHT JOIN class ON student.<code>classid</code> = class.id</p></li><li><p>selenium定位元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">driver.find_element_by_xpath()</span><br><span class="line">driver.find_element_by_name()</span><br><span class="line">driver.find_element_by_tag_name()</span><br><span class="line">driver.find_element_by_link_text()</span><br><span class="line">driver.find_element_by_partial_link_text()</span><br><span class="line">driver.find_element_by_class_name()</span><br><span class="line">driver.find_element_by_css_selector()</span><br><span class="line">driver.find_element_by_id()</span><br></pre></td></tr></table></figure></li><li><p>tcp三次握手?握手的时候怎么确认对方的身份？</p><ul><li><p>三次握手过程</p><ul><li>第一次握手，客户端发送(seq=x)，客户端进入<code>SYN_SEND</code>状态</li><li>第二次握手，服务端响应(Seq=y, Ack=x+1)，服务器端就进入<code>SYN_RCV</code>状态</li><li>第三次握手，客户端收到服务端的确认后，发送(Ack=y+1)，客户端进入<code>ESTABLISHED</code>状态。当服务器端接收到这个包时，也进入<code>ESTABLISHED</code>状态。</li></ul></li><li><p>确认身份</p><p>TCP报文首部中有源端口和目的端口</p><p><img src="https://img-blog.csdnimg.cn/img_convert/4f7b277a642040f8ec83c5d54b57801b.png" alt="图片"></p></li></ul></li><li><p>TCP四次挥手</p><ul><li><p>挥手过程</p><ul><li><p>第一次挥手：客户端向服务端发送连接释放报文</p></li><li><p>第二次挥手：服务端收到连接释放报文后，立即发出确认报文。这时 TCP 连接处于半关闭状态，即客户端到服务端的连接已经释放了，但是服务端到客户端的连接还未释放。表示客户端已经没有数据发送了，但是服务端可能还要给客户端发送数据。</p></li><li><p>第三次挥手：服务端向客户端发送连接释放报文</p></li><li><p>第四次挥手：客户端收到服务端的连接释放报文后，立即发出确认报文。此时，客户端就进入了 <code>TIME-WAIT</code> 状态。注意此时客户端到 TCP 连接还没有释放，必须经过 2*MSL（最长报文段寿命）的时间后，才进入<code>CLOSED</code> 状态。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/deb7601528a2b863bd70567eec32407d.png" alt="img"></p></li></ul></li></ul></li><li><p>网络七层模型及各层常见协议</p><ul><li><p>物理层（IEEE802.2,Ethernet）</p></li><li><p>数据链路层(STP:生成树协议,PPP：点对点协议,ARP,RARP)</p></li><li><p>网络层（IP,ICMP：互联网控制信息协议,VRRP：虚拟路由器冗余协议）</p></li><li><p>传输层 (TCP,UDP)</p></li><li><p>会话层（SSL:安全套接字层协议,TLS：传输层安全协议）</p></li><li><p>表示层(LPP:轻量级表示协议)</p></li><li><p>应用层（HTTP,FTP,SMTP） </p><p><img src="https://img-blog.csdnimg.cn/daa7b60ef1584b3faca6810d0b193e00.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA55-c6L6w5omA6Ie0,size_1,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p></li></ul></li><li><p>算法</p><ul><li><p>两数之和</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">twoSum</span>(<span class="params">self, nums, target</span>):</span></span><br><span class="line"></span><br><span class="line">hashtable = <span class="built_in">dict</span>()</span><br><span class="line"><span class="keyword">for</span> i,num <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line"><span class="keyword">if</span> target - num <span class="keyword">in</span> hashtable:</span><br><span class="line"><span class="keyword">return</span> [hashtable[target-num], i]</span><br><span class="line">hashtable[nums[i]] = i</span><br><span class="line"><span class="keyword">return</span> []</span><br></pre></td></tr></table></figure></li><li><p>实现LRU</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LRU</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;7-21开发测试面经&quot;&gt;&lt;a href=&quot;#7-21开发测试面经&quot; class=&quot;headerlink&quot; title=&quot;7.21开发测试面经&quot;&gt;&lt;/a&gt;7.21开发测试面经&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;sql语句 &lt;/p&gt;
&lt;p&gt;表结构&lt;/p&gt;
&lt;p&gt;​   </summary>
      
    
    
    
    <category term="秋招面经" scheme="http://example.com/categories/%E7%A7%8B%E6%8B%9B%E9%9D%A2%E7%BB%8F/"/>
    
    <category term="开发测试" scheme="http://example.com/categories/%E7%A7%8B%E6%8B%9B%E9%9D%A2%E7%BB%8F/%E5%BC%80%E5%8F%91%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="秋招面经" scheme="http://example.com/tags/%E7%A7%8B%E6%8B%9B%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>leetcode | 27.移除元素</title>
    <link href="http://example.com/2022/07/19/%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/"/>
    <id>http://example.com/2022/07/19/%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/</id>
    <published>2022-07-19T09:40:06.000Z</published>
    <updated>2022-07-19T10:04:47.888Z</updated>
    
    <content type="html"><![CDATA[<h1 id="27-移除元素"><a href="#27-移除元素" class="headerlink" title="27.移除元素"></a>27.移除元素</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。<br>不要使用额外的数组空间，你必须仅使用 O(1) 额外空间并 原地 修改输入数组。<br>元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。</p><p>示例 1：<br>输入：nums = [3,2,2,3], val = 3<br>输出：2, nums = [2,2]<br>解释：函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。你不需要考虑数组中超出新长度后面的元素。例如，函数返回的新长度为 2 ，而 nums = [2,2,3,3] 或 nums = [2,2,0,0]，也会被视作正确答案。</p><p><a href="https://leetcode.cn/problems/remove-element">题目链接</a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li><p>双指针<br>设置两个指针，左指针left，右指针right，左指针left指向待插入不等于val的值，right指针遍历寻找不等于val的值，如果找到，就将right指针指向的值复制到left指针指向的位置，<br>然后left指针后移到下一个待插入位置，right指针继续后移寻找下一个不等于val的值，依次类推。</p></li><li><p>双指针优化<br>如果左指针 left 指向的元素等于 val，此时将右指针 right 指向的元素复制到左指针 left 的位置，然后右指针 right 左移一位。如果赋值过来的元素恰好也等于 val，可以继续把右指针 right 指向的元素的值赋值过来（左指针 left 指向的等于 val 的元素的位置继续被覆盖），直到左指针指向的元素的值不等于 val 为止。<br>当左指针 left 和右指针 right 重合的时候，左右指针遍历完数组中所有的元素。<br>这样的方法两个指针在最坏的情况下合起来只遍历了数组一次。与方法一不同的是，方法二避免了需要保留的元素的重复赋值操作。</p><span id="more"></span><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p> class Solution(object):</p><pre><code> def removeElement(self, nums, val):     &quot;&quot;&quot;     双指针     :type nums: List[int]     :type val: int     :rtype: int     &quot;&quot;&quot;     left = 0     right = 0     while right &lt; len(nums):         if nums[right] != val:             nums[left] = nums[right]             left += 1         right += 1     return left  def removeElement1(self, nums, val):     &quot;&quot;&quot;双指针优化&quot;&quot;&quot;     left = 0     right = len(nums)     while left &lt; right:         if nums[left] == val:             nums[left] = nums[right - 1]             right -= 1         else:             left += 1          return left</code></pre><p> if <strong>name</strong> == “<strong>main</strong>“:</p><pre><code> slt = Solution() result = slt.removeElement([3, 2, 2, 3], 3) print(result)</code></pre></li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;27-移除元素&quot;&gt;&lt;a href=&quot;#27-移除元素&quot; class=&quot;headerlink&quot; title=&quot;27.移除元素&quot;&gt;&lt;/a&gt;27.移除元素&lt;/h1&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。&lt;br&gt;不要使用额外的数组空间，你必须仅使用 O(1) 额外空间并 原地 修改输入数组。&lt;br&gt;元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。&lt;/p&gt;
&lt;p&gt;示例 1：&lt;br&gt;输入：nums = [3,2,2,3], val = 3&lt;br&gt;输出：2, nums = [2,2]&lt;br&gt;解释：函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。你不需要考虑数组中超出新长度后面的元素。例如，函数返回的新长度为 2 ，而 nums = [2,2,3,3] 或 nums = [2,2,0,0]，也会被视作正确答案。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.cn/problems/remove-element&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;双指针&lt;br&gt;设置两个指针，左指针left，右指针right，左指针left指向待插入不等于val的值，right指针遍历寻找不等于val的值，如果找到，就将right指针指向的值复制到left指针指向的位置，&lt;br&gt;然后left指针后移到下一个待插入位置，right指针继续后移寻找下一个不等于val的值，依次类推。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;双指针优化&lt;br&gt;如果左指针 left 指向的元素等于 val，此时将右指针 right 指向的元素复制到左指针 left 的位置，然后右指针 right 左移一位。如果赋值过来的元素恰好也等于 val，可以继续把右指针 right 指向的元素的值赋值过来（左指针 left 指向的等于 val 的元素的位置继续被覆盖），直到左指针指向的元素的值不等于 val 为止。&lt;br&gt;当左指针 left 和右指针 right 重合的时候，左右指针遍历完数组中所有的元素。&lt;br&gt;这样的方法两个指针在最坏的情况下合起来只遍历了数组一次。与方法一不同的是，方法二避免了需要保留的元素的重复赋值操作。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="算法刷题" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/"/>
    
    <category term="leetcode" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/"/>
    
    <category term="27.移除元素" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/27-%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/tags/%E6%95%B0%E7%BB%84/"/>
    
    <category term="双指针" scheme="http://example.com/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>leetcode | 26.删除有序数组中的重复项</title>
    <link href="http://example.com/2022/07/19/%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9/"/>
    <id>http://example.com/2022/07/19/%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9/</id>
    <published>2022-07-19T08:41:08.000Z</published>
    <updated>2022-07-19T08:51:11.958Z</updated>
    
    <content type="html"><![CDATA[<h1 id="26-删除有序数组中的重复项"><a href="#26-删除有序数组中的重复项" class="headerlink" title="26.删除有序数组中的重复项"></a>26.删除有序数组中的重复项</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给你一个 升序排列 的数组 nums ，请你 原地 删除重复出现的元素，使每个元素 只出现一次 ，返回删除后数组的新长度。元素的 相对顺序 应该保持 一致 。<br>由于在某些语言中不能改变数组的长度，所以必须将结果放在数组nums的第一部分。更规范地说，如果在删除重复项之后有 k 个元素，那么 nums 的前 k 个元素应该保存最终结果。<br>将最终结果插入 nums 的前 k 个位置后返回 k 。<br>不要使用额外的空间，你必须在 原地 修改输入数组 并在使用 O(1) 额外空间的条件下完成。</p><p>示例 1：<br>输入：nums = [1,1,2]<br>输出：2, nums = [1,2,_]<br>解释：函数应该返回新的长度 2 ，并且原数组 nums 的前两个元素被修改为 1, 2 。不需要考虑数组中超出新长度后面的元素。</p><p><a href="https://leetcode.cn/problems/remove-duplicates-from-sorted-array">题目链接</a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li><p>双指针<br>（1）如果数组为空，返回0<br>（2）如果数组只有一个元素，返回1<br>（3）如果数组中有超过两个元素，第一个元素肯定不会被删除，所以从第二位位置开始删除重复元素，设置两个指针，一个快指针<br>fast，一个慢指针slow，快指针fast用来遍历数组寻找下一个不重复元素，慢指针slow指向存放下一个不重复元素的位置；每当<br>fast指针遍历到一个新的不重复元素（fast指向的元素不等于fast-1位置的元素），就将该元素复制到慢指针slow执行的位置，<br>同时慢指针slow指向下一个位置，快指针fast继续寻找下一个不重复元素，依次类推。</p><span id="more"></span><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p> class Solution(object):</p><pre><code> def removeDuplicates(self, nums):     &quot;&quot;&quot;     双指针     :type nums: List[int]     :rtype: int     &quot;&quot;&quot;     if not nums:         return 0          n = len(nums)     fast = slow = 1     while fast &lt; n:         if nums[fast] != nums[fast - 1]:             nums[slow] = nums[fast]             slow += 1         fast += 1     return slow </code></pre><p> if <strong>name</strong> == “<strong>main</strong>“:</p><pre><code> slt = Solution() nums = [1, 1, 2] result = slt.removeDuplicates(nums) print(result)</code></pre></li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;26-删除有序数组中的重复项&quot;&gt;&lt;a href=&quot;#26-删除有序数组中的重复项&quot; class=&quot;headerlink&quot; title=&quot;26.删除有序数组中的重复项&quot;&gt;&lt;/a&gt;26.删除有序数组中的重复项&lt;/h1&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;给你一个 升序排列 的数组 nums ，请你 原地 删除重复出现的元素，使每个元素 只出现一次 ，返回删除后数组的新长度。元素的 相对顺序 应该保持 一致 。&lt;br&gt;由于在某些语言中不能改变数组的长度，所以必须将结果放在数组nums的第一部分。更规范地说，如果在删除重复项之后有 k 个元素，那么 nums 的前 k 个元素应该保存最终结果。&lt;br&gt;将最终结果插入 nums 的前 k 个位置后返回 k 。&lt;br&gt;不要使用额外的空间，你必须在 原地 修改输入数组 并在使用 O(1) 额外空间的条件下完成。&lt;/p&gt;
&lt;p&gt;示例 1：&lt;br&gt;输入：nums = [1,1,2]&lt;br&gt;输出：2, nums = [1,2,_]&lt;br&gt;解释：函数应该返回新的长度 2 ，并且原数组 nums 的前两个元素被修改为 1, 2 。不需要考虑数组中超出新长度后面的元素。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.cn/problems/remove-duplicates-from-sorted-array&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;双指针&lt;br&gt;（1）如果数组为空，返回0&lt;br&gt;（2）如果数组只有一个元素，返回1&lt;br&gt;（3）如果数组中有超过两个元素，第一个元素肯定不会被删除，所以从第二位位置开始删除重复元素，设置两个指针，一个快指针&lt;br&gt;fast，一个慢指针slow，快指针fast用来遍历数组寻找下一个不重复元素，慢指针slow指向存放下一个不重复元素的位置；每当&lt;br&gt;fast指针遍历到一个新的不重复元素（fast指向的元素不等于fast-1位置的元素），就将该元素复制到慢指针slow执行的位置，&lt;br&gt;同时慢指针slow指向下一个位置，快指针fast继续寻找下一个不重复元素，依次类推。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="算法刷题" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/"/>
    
    <category term="leetcode" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/"/>
    
    <category term="26.删除有序数组中的重复项" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/26-%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/tags/%E6%95%B0%E7%BB%84/"/>
    
    <category term="双指针" scheme="http://example.com/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>leetcode | 121.买卖股票的最佳时机</title>
    <link href="http://example.com/2022/07/18/%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/"/>
    <id>http://example.com/2022/07/18/%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/</id>
    <published>2022-07-19T07:11:24.000Z</published>
    <updated>2022-07-19T07:47:43.441Z</updated>
    
    <content type="html"><![CDATA[<h1 id="121-买卖股票的最佳时机"><a href="#121-买卖股票的最佳时机" class="headerlink" title="121.买卖股票的最佳时机"></a>121.买卖股票的最佳时机</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。<br>你只能选择 某一天 买入这只股票，并选择在 未来的某一个不同的日子 卖出该股票。设计一个算法来计算你所能获取的最大利润。<br>返回你可以从这笔交易中获取的最大利润。如果你不能获取任何利润，返回 0 。</p><p>示例 1：<br>输入：[7,1,5,3,6,4]<br>输出：5<br>解释：在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。<br>     注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格；同时，你不能在买入前卖出股票。</p><p>示例 2：<br>输入：prices = [7,6,4,3,1]<br>输出：0<br>解释：在这种情况下, 没有交易完成, 所以最大利润为 0。</p><p><a href="https://leetcode.cn/problems/best-time-to-buy-and-sell-stock">题目链接</a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li><p>暴力法</p></li><li><p>一次遍历<br>遍历一遍数组，计算每次 到当天为止 的最小股票价格和最大利润。</p></li></ol><p><strong>3. 动态规划</strong><br>动态规划一般分为一维、二维、多维（使用状态压缩），对应形式为 dp(i)、dp(i)(j)、二进制dp(i)(j)。<br>（1）动态规划做题步骤<br>    明确 dp(i) 应该表示什么（二维情况：dp(i)(j)）；<br>    根据 dp(i)和 dp(i−1) 的关系得出状态转移方程；<br>    确定初始条件，如 dp(0)。<br>（2）本题思路<br>其实方法一的思路不是凭空想象的，而是由动态规划的思想演变而来。这里介绍一维动态规划思想。<br>dp[i] 表示前 i 天的最大利润，因为我们始终要使利润最大化，则：</p><pre><code>dp[i]=max(dp[i−1],prices[i]−minprice)</code></pre><span id="more"></span><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre><code>class Solution(object):    def maxProfit(self, prices):        &quot;&quot;&quot;        暴力法(超出时间限制)        :type prices: List[int]        :rtype: int        &quot;&quot;&quot;        # ans = 0        #        # for i in range(0, len(prices)):        #     for j in range(i + 1, len(prices)):        #         ans = max(ans, prices[j] - prices[i])        #        # return ans                if len(prices) &lt; 2:            return 0        result = max([prices[j] - prices[i] for i in range(0, len(prices)) for j in range(i + 1, len(prices))])        return result if result &gt; 0 else 0        def maxProfit1(self, prices):        &quot;&quot;&quot;一次遍历&quot;&quot;&quot;        minprice = max(prices)  # 记录最小的股值        maxprofit = 0  #                # 循环迭代输入的prices，当前价格小于最小的股值时修改minprice，        # 当前获得的利润大于最大的利润时修改maxprofit        for price in prices:            maxprofit = max(price - minprice, maxprofit)            minprice = min(price, minprice)                    return maxprofit        def maxProfit2(self, prices):        &quot;&quot;&quot;动态规划（按照估值最低点列动态规划方程）&quot;&quot;&quot;        maxprofit = 0        dp = [prices[0] for j in range(0, len(prices))]        for i in range(1, len(prices)):            dp[i] = min(dp[i-1], prices[i])            maxprofit = max(maxprofit, prices[i] - dp[i])        return maxprofit        def maxProfit3(self, prices):        &quot;&quot;&quot;动态规划（按照最大利润列动态规划方程）&quot;&quot;&quot;        minprice = prices[0]        dp = [0]*len(prices)                for i in range(0, len(prices)):            minprice = min(minprice, prices[i])            dp[i] = max(dp[i - 1], prices[i] - minprice)                return dp[-1]if __name__ == &quot;__main__&quot;:    slt = Solution()    prices = [7, 1, 5, 3, 6, 4]    # prices = [7, 6, 4, 3, 1]    # profit = slt.maxProfit(prices)    # profit = slt.maxProfit1(prices)    # profit = slt.maxProfit2(prices)    profit = slt.maxProfit3(prices)    print(profit)</code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;121-买卖股票的最佳时机&quot;&gt;&lt;a href=&quot;#121-买卖股票的最佳时机&quot; class=&quot;headerlink&quot; title=&quot;121.买卖股票的最佳时机&quot;&gt;&lt;/a&gt;121.买卖股票的最佳时机&lt;/h1&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。&lt;br&gt;你只能选择 某一天 买入这只股票，并选择在 未来的某一个不同的日子 卖出该股票。设计一个算法来计算你所能获取的最大利润。&lt;br&gt;返回你可以从这笔交易中获取的最大利润。如果你不能获取任何利润，返回 0 。&lt;/p&gt;
&lt;p&gt;示例 1：&lt;br&gt;输入：[7,1,5,3,6,4]&lt;br&gt;输出：5&lt;br&gt;解释：在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。&lt;br&gt;     注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格；同时，你不能在买入前卖出股票。&lt;/p&gt;
&lt;p&gt;示例 2：&lt;br&gt;输入：prices = [7,6,4,3,1]&lt;br&gt;输出：0&lt;br&gt;解释：在这种情况下, 没有交易完成, 所以最大利润为 0。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.cn/problems/best-time-to-buy-and-sell-stock&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;暴力法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一次遍历&lt;br&gt;遍历一遍数组，计算每次 到当天为止 的最小股票价格和最大利润。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;3. 动态规划&lt;/strong&gt;&lt;br&gt;动态规划一般分为一维、二维、多维（使用状态压缩），对应形式为 dp(i)、dp(i)(j)、二进制dp(i)(j)。&lt;br&gt;（1）动态规划做题步骤&lt;br&gt;    明确 dp(i) 应该表示什么（二维情况：dp(i)(j)）；&lt;br&gt;    根据 dp(i)和 dp(i−1) 的关系得出状态转移方程；&lt;br&gt;    确定初始条件，如 dp(0)。&lt;br&gt;（2）本题思路&lt;br&gt;其实方法一的思路不是凭空想象的，而是由动态规划的思想演变而来。这里介绍一维动态规划思想。&lt;br&gt;dp[i] 表示前 i 天的最大利润，因为我们始终要使利润最大化，则：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dp[i]=max(dp[i−1],prices[i]−minprice)
&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="算法刷题" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/"/>
    
    <category term="leetcode" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/"/>
    
    <category term="121.买卖股票的最佳时机" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/121-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="动态规划" scheme="http://example.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
</feed>
