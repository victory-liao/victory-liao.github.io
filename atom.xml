<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Victory&#39;s Blog</title>
  
  <subtitle>人生得意须尽欢，莫使金樽空对月</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-10-09T12:29:12.840Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>victory-liao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C++ | 指针与引用的区别</title>
    <link href="http://example.com/2023/10/09/C-%E6%8C%87%E9%92%88%E4%B8%8E%E5%BC%95%E7%94%A8%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://example.com/2023/10/09/C-%E6%8C%87%E9%92%88%E4%B8%8E%E5%BC%95%E7%94%A8%E7%9A%84%E5%8C%BA%E5%88%AB/</id>
    <published>2023-10-09T12:26:43.000Z</published>
    <updated>2023-10-09T12:29:12.840Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-指针与引用"><a href="#C-指针与引用" class="headerlink" title="C++指针与引用"></a>C++指针与引用</h1><p>学习c++时，很容易混淆指针和引用的用法，以及对指针与引用的使用存在些许疑惑，下面通过示例代码说明指针和引用的区别。</p><ul><li>指针与引用的区别？</li></ul><ol><li>定义和性质不同</li></ol><p>指针是一个变量，其存储的是一个地址，该地址指向内存的一个存储单元；举例，张三的身份证看做一个指针，这个指针指向了张三，张三的妈妈夸奖了身份证不等于张三的妈妈夸奖了张三。</p><p>引用是一个变量的别名，跟原来的变量实质上是同一个东西，类似于日常生活中“小名”的意思，例如张三的小名叫毛蛋，张三与毛蛋都指的是张三这个人，张三的妈妈夸奖了张三等于张三的妈妈夸奖了毛蛋。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">996</span>;</span><br><span class="line"><span class="keyword">int</span> *p = &amp;a; <span class="comment">// p是指针, &amp;在此是求地址运算</span></span><br><span class="line"><span class="keyword">int</span> &amp;r = a; <span class="comment">// r是引用, &amp;在此起标识作用</span></span><br></pre></td></tr></table></figure><p>上面定义了一个整型变量 a，p 是一个指针变量，p 的值是变量 a 的地址；</p><p>而引用 r，是 a 的一个别名，在内存中 r 和 a 占有同一个存储单元。</p><span id="more"></span><ol start="2"><li>指针可以有多级，引用只能是一级</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> **p; <span class="comment">// 合法</span></span><br><span class="line"><span class="keyword">int</span> &amp;&amp;a; <span class="comment">// 不合法</span></span><br></pre></td></tr></table></figure><ol start="3"><li>指针可以在定义的时候不初始化，引用必须在定义的时候初始化</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> *p; <span class="comment">// 合法</span></span><br><span class="line"><span class="keyword">int</span> &amp;r; <span class="comment">// 不合法</span></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">996</span>;</span><br><span class="line"><span class="keyword">int</span> &amp;r = a; <span class="comment">// 合法</span></span><br></pre></td></tr></table></figure><ol start="4"><li>指针可以指向NULL，引用不可以为NULL</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> *p = <span class="literal">NULL</span>; <span class="comment">// 合法</span></span><br><span class="line"><span class="keyword">int</span> &amp;r = <span class="literal">NULL</span>; <span class="comment">// 不合法</span></span><br></pre></td></tr></table></figure><ol start="5"><li>指针初始化之后可以再改变，引用不可以</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">996</span>;</span><br><span class="line"><span class="keyword">int</span> *p = &amp;a; <span class="comment">// 初始化, p 是 a 的地址</span></span><br><span class="line"><span class="keyword">int</span> &amp;r = a; <span class="comment">// 初始化, r 是 a 的引用</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> b = <span class="number">885</span>;</span><br><span class="line">p = &amp;b;<span class="comment">// 合法, p 更改为 b 的地址</span></span><br><span class="line">r = b; <span class="comment">// 不合法, r 不可以再变,运行不会报错，实际上是将别名为r的a变量的值修改为b的值885</span></span><br></pre></td></tr></table></figure><ol start="6"><li>sizeof 的运算结果不同</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">996</span>;</span><br><span class="line"><span class="keyword">int</span> *p = &amp;a;</span><br><span class="line"><span class="keyword">int</span> &amp;r = a;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="built_in"><span class="keyword">sizeof</span></span>(p); <span class="comment">// 返回 int* 类型的大小</span></span><br><span class="line">cout &lt;&lt; <span class="built_in"><span class="keyword">sizeof</span></span>(r); <span class="comment">// 返回 int 类型的大小</span></span><br></pre></td></tr></table></figure><ol start="7"><li>自增运算意义不同</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">996</span>;</span><br><span class="line"><span class="keyword">int</span> *p = &amp;a;</span><br><span class="line"><span class="keyword">int</span> &amp;r = a;</span><br><span class="line"></span><br><span class="line">p++;<span class="comment">//p++之后指向a后面的内存</span></span><br><span class="line">r++;<span class="comment">//r++相当于a++</span></span><br></pre></td></tr></table></figure><ol start="8"><li>指针和引用作为函数参数时，指针需要检查是否为空，引用不需要</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun_p</span><span class="params">(<span class="keyword">int</span> *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 需要检查P是否为空</span></span><br><span class="line">    <span class="keyword">if</span> (p == <span class="literal">NULL</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun_r</span><span class="params">(<span class="keyword">int</span> &amp;r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 不需要检查r</span></span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>指针与引用的使用</li></ul><p>指针和引用都可以作为函数参数，指针和引用作为函数参数时，函数直接对函数形参对应的实参的值进行修改。因此，当函数会修改形参对应实参的值时，采用指针和引用作为函数参数，当函数不需要修改形参对应实参值时，采用值传递即可，即采用普通变量作为函数参数。关于指针与引用的推荐使用方法如下所示：</p><table><thead><tr><th align="center">数据类型</th><th>只使用传递过来的值，而不对值进行修改</th><th>需要修改传递过来的值</th></tr></thead><tbody><tr><td align="center">内置数据类型</td><td>按值传递（小型结构）</td><td>指针传递</td></tr><tr><td align="center">数组</td><td>指针传递</td><td>指针传递</td></tr><tr><td align="center">结构</td><td>指针或引用（较大的结构）</td><td>指针或引用</td></tr><tr><td align="center">类、对象</td><td>引用传递</td><td>引用传递</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;C-指针与引用&quot;&gt;&lt;a href=&quot;#C-指针与引用&quot; class=&quot;headerlink&quot; title=&quot;C++指针与引用&quot;&gt;&lt;/a&gt;C++指针与引用&lt;/h1&gt;&lt;p&gt;学习c++时，很容易混淆指针和引用的用法，以及对指针与引用的使用存在些许疑惑，下面通过示例代码说明指针和引用的区别。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;指针与引用的区别？&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;定义和性质不同&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;指针是一个变量，其存储的是一个地址，该地址指向内存的一个存储单元；举例，张三的身份证看做一个指针，这个指针指向了张三，张三的妈妈夸奖了身份证不等于张三的妈妈夸奖了张三。&lt;/p&gt;
&lt;p&gt;引用是一个变量的别名，跟原来的变量实质上是同一个东西，类似于日常生活中“小名”的意思，例如张三的小名叫毛蛋，张三与毛蛋都指的是张三这个人，张三的妈妈夸奖了张三等于张三的妈妈夸奖了毛蛋。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;996&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *p = &amp;amp;a; &lt;span class=&quot;comment&quot;&gt;// p是指针, &amp;amp;在此是求地址运算&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &amp;amp;r = a; &lt;span class=&quot;comment&quot;&gt;// r是引用, &amp;amp;在此起标识作用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面定义了一个整型变量 a，p 是一个指针变量，p 的值是变量 a 的地址；&lt;/p&gt;
&lt;p&gt;而引用 r，是 a 的一个别名，在内存中 r 和 a 占有同一个存储单元。&lt;/p&gt;</summary>
    
    
    
    <category term="C++" scheme="http://example.com/categories/C/"/>
    
    <category term="指针与引用" scheme="http://example.com/categories/C/%E6%8C%87%E9%92%88%E4%B8%8E%E5%BC%95%E7%94%A8/"/>
    
    
    <category term="C++" scheme="http://example.com/tags/C/"/>
    
    <category term="指针" scheme="http://example.com/tags/%E6%8C%87%E9%92%88/"/>
    
    <category term="引用" scheme="http://example.com/tags/%E5%BC%95%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>日思231007</title>
    <link href="http://example.com/2023/10/07/%E6%97%A5%E6%80%9D231007/"/>
    <id>http://example.com/2023/10/07/%E6%97%A5%E6%80%9D231007/</id>
    <published>2023-10-07T13:53:16.000Z</published>
    <updated>2023-10-07T13:57:01.503Z</updated>
    
    <content type="html"><![CDATA[<ul><li>date: 2023.10.07</li></ul><p>今天在个人博客中增加”日思“目录，用于记录我对</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;date: 2023.10.07&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今天在个人博客中增加”日思“目录，用于记录我对&lt;/p&gt;
</summary>
      
    
    
    
    <category term="日思" scheme="http://example.com/categories/%E6%97%A5%E6%80%9D/"/>
    
    <category term="2023.10.07" scheme="http://example.com/categories/%E6%97%A5%E6%80%9D/2023-10-07/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux | shell脚本</title>
    <link href="http://example.com/2023/10/07/shell%E8%84%9A%E6%9C%AC/"/>
    <id>http://example.com/2023/10/07/shell%E8%84%9A%E6%9C%AC/</id>
    <published>2023-10-07T12:56:01.000Z</published>
    <updated>2023-10-07T13:57:09.164Z</updated>
    
    <content type="html"><![CDATA[<h1 id="shell脚本"><a href="#shell脚本" class="headerlink" title="shell脚本"></a>shell脚本</h1><ul><li><p>shell脚本可将环境变量添加、依赖安装、二进制文件执行等命令包含在一个后缀为.sh的文本文件中，从而便于对应用的<strong>自动化运维</strong>。</p></li><li><p>常见的shell脚本语法</p><ol><li>向窗口输出文本</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;hello world&quot;</span><br></pre></td></tr></table></figure><ol start="2"><li>for  loop</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for file in `ls /etc`;do</span><br><span class="line">echo $file</span><br><span class="line">done</span><br></pre></td></tr></table></figure><ol start="3"><li><p>变量定义以及使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 输出变量内容</span></span><br><span class="line">word=&quot;this is a string!&quot;</span><br><span class="line">echo $word</span><br><span class="line">echo &quot;word变量的内容是$&#123;word&#125;。&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 只读变量</span></span><br><span class="line">my_name=&quot;liao sheng li&quot;</span><br><span class="line">readonly my_name</span><br><span class="line">echo $my_name</span><br><span class="line">my_name=&quot;sheng li&quot; # ./test.sh:行20: my_name：只读变量</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除变量</span></span><br><span class="line">username=&quot;zhang san&quot;</span><br><span class="line">echo $username</span><br><span class="line">unset username</span><br><span class="line">echo $suername  # 不会输出内容</span><br></pre></td></tr></table></figure></li><li><p>shell字符串</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 输出字符串</span></span><br><span class="line">echo &quot;hello&quot; # 双引号方式表示字符串</span><br><span class="line">echo &#x27;hello&#x27; # 单引号方式表示字符串</span><br><span class="line">echo hello # 不使用引号方式</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 拼接字符串</span></span><br><span class="line">echo &quot;hello,&quot;world&quot;!&quot;</span><br><span class="line">echo &#x27;hello,&#x27;world&#x27;!&#x27;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 获取字符串长度</span></span><br><span class="line">string=&quot;hello&quot;</span><br><span class="line">echo &quot;字符串的长度为：$&#123;#string&#125;&quot;</span><br><span class="line">echo &quot;字符串的长度为：$&#123;#string[0]&#125;&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 提取子字符串</span></span><br><span class="line">string1=&quot;the sky is blue!&quot;</span><br><span class="line">echo $&#123;string1:4:3&#125;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查找子字符串</span></span><br><span class="line">string2=&quot;this is a long string!&quot;</span><br><span class="line">echo `expr index &quot;$string2&quot; is`</span><br></pre></td></tr></table></figure></li></ol></li></ul><ol start="5"><li><p>shell数组</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 定义数组</span></span><br><span class="line">arr1=(1 2 3 4 5 6 7 8 9 10)</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 读取数组</span></span><br><span class="line">echo $&#123;arr1&#125;</span><br><span class="line">elem1=$&#123;arr1[0]&#125; # 输出下表为0时的数组元素</span><br><span class="line">echo $elem1</span><br><span class="line">echo $&#123;arr1[@]&#125; #输出数组所有元素</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 获取数组的长度</span></span><br><span class="line">echo $&#123;#arr1[@]&#125;  # 输出数组长度</span><br><span class="line">echo $&#123;#arr1[*]&#125; # 输出数组长度</span><br><span class="line">echo $&#123;#arr1[0]&#125; #输出下表为0的数组元素的长度</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关联数组</span></span><br><span class="line">declare -A site1=([&quot;google&quot;]=&quot;www.google.com&quot; [&quot;runoob&quot;]=&quot;www.runoob.com&quot; [&quot;taobao&quot;]=&quot;www.taobao.com&quot;)</span><br><span class="line">echo $&#123;site1[&quot;google&quot;]&#125;</span><br><span class="line">echo $&#123;site1[@]&#125;</span><br><span class="line">declare -A site2</span><br><span class="line">site2[&quot;google&quot;]=&quot;www.google.com&quot;</span><br><span class="line">site2[&quot;runoob&quot;]=&quot;www.runoob.com&quot;</span><br><span class="line">site2[&quot;taobao&quot;]=&quot;www.taobao.com&quot;</span><br><span class="line">echo $&#123;site2[&quot;taobao&quot;]&#125;</span><br><span class="line">echo $&#123;site2[*]&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>shell注释</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 这是一个单行注释</span></span><br><span class="line"></span><br><span class="line">: &lt;&lt;COMMENT</span><br><span class="line">这是</span><br><span class="line">一个</span><br><span class="line">多行注释！</span><br><span class="line">COMMENT</span><br><span class="line"></span><br><span class="line">: &#x27;</span><br><span class="line">这是一个</span><br><span class="line">多行注释</span><br><span class="line">&#x27;</span><br></pre></td></tr></table></figure></li><li><p>shell传递参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;此处执行shell脚本的命令为./test.sh 1 2 3&quot;</span><br><span class="line">echo &quot;执行的文件名：$0&quot;</span><br><span class="line">echo &quot;执行的文件名：$1&quot;</span><br><span class="line">echo &quot;执行的文件名：$2&quot;</span><br><span class="line">echo &quot;执行的文件名：$3&quot;</span><br><span class="line">: &#x27;</span><br><span class="line">执行结果：</span><br><span class="line">执行的文件名：./test.sh</span><br><span class="line">执行的文件名：1</span><br><span class="line">执行的文件名：2</span><br><span class="line">执行的文件名：3</span><br><span class="line">&#x27;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 处理参数的集中特殊字符</span></span><br><span class="line">echo $# # 输出传递给脚本的参数个数，执行脚本./test.sh 1 2 3输出3</span><br><span class="line">echo $* # 以单个字符串显示所有传递个脚本的参数就，执行脚本./test.sh 1 2 3输出1 2 3</span><br><span class="line">echo $$ # 输出脚本运行的当前进行ID号</span><br><span class="line">echo $@ # 与$*相同</span><br><span class="line">echo $-</span><br><span class="line">echo $? #显示最后命令的退出状态，0表示没有错误，其他任何值表明有错误</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> $*与<span class="variable">$@</span>的区别</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> $*</span></span><br><span class="line">for i in &quot;$*&quot;; do</span><br><span class="line">echo $i</span><br><span class="line">done</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="variable">$@</span></span></span><br><span class="line">for i in &quot;$@&quot;; do</span><br><span class="line">echo $i</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li><li><p>shell运算符</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 算数运算符</span></span><br><span class="line">a=10</span><br><span class="line">b=20</span><br><span class="line">val=`expr $a + $b`</span><br><span class="line">echo &quot;a + b : $val&quot;</span><br><span class="line">val=`expr $a - $b`</span><br><span class="line">echo &quot;a - b : $val&quot;</span><br><span class="line">val=`expr $a \* $b`</span><br><span class="line">echo &quot;a * b : $val&quot;</span><br><span class="line">val=`expr $b / $a`</span><br><span class="line">echo &quot;b / a : $val&quot;</span><br><span class="line">val=`expr $b % $a`</span><br><span class="line">echo &quot;b % a : $val&quot;</span><br><span class="line">if [ $a == $b ]</span><br><span class="line">then</span><br><span class="line">echo &quot;a 等于 b&quot;</span><br><span class="line">fi</span><br><span class="line">if [ $a != $b ]</span><br><span class="line">then</span><br><span class="line">echo &quot;a 不等于 b&quot;</span><br><span class="line">fi</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关系运算符</span></span><br><span class="line">a=10</span><br><span class="line">b=20</span><br><span class="line">if [ $a -eq $b ] # 判断两个数字的值是否相等</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a -eq $b : a 等于 b&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a -eq $b: a 不等于 b&quot;</span><br><span class="line">fi</span><br><span class="line">if [ $a -ne $b ] # 判断两个数字的值是否不相等</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a -ne $b: a 不等于 b&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a -ne $b : a 等于 b&quot;</span><br><span class="line">fi</span><br><span class="line">if [ $a -gt $b ] # 判断一个数字是否大于另一个数字</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a -gt $b: a 大于 b&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a -gt $b: a 不大于 b&quot;</span><br><span class="line">fi</span><br><span class="line">if [ $a -lt $b ] # 判断一个数字是否小于另一个数字</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a -lt $b: a 小于 b&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a -lt $b: a 不小于 b&quot;</span><br><span class="line">fi</span><br><span class="line">if [ $a -ge $b ] # 判断一个数字是否大于小于另一个数字</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a -ge $b: a 大于或等于 b&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a -ge $b: a 小于 b&quot;</span><br><span class="line">fi</span><br><span class="line">if [ $a -le $b ] # 判断一个数字是否小于等于另一个数字</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a -le $b: a 小于或等于 b&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a -le $b: a 大于 b&quot;</span><br><span class="line">fi</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 布尔运算符</span></span><br><span class="line">a=10</span><br><span class="line">b=20</span><br><span class="line">if [ $a != $b ] # 非</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a != $b : a 不等于 b&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a == $b: a 等于 b&quot;</span><br><span class="line">fi</span><br><span class="line">if [ $a -lt 100 -a $b -gt 15 ] # 与</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a 小于 100 且 $b 大于 15 : 返回 true&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a 小于 100 且 $b 大于 15 : 返回 false&quot;</span><br><span class="line">fi</span><br><span class="line">if [ $a -lt 100 -o $b -gt 100 ] # 或</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a 小于 100 或 $b 大于 100 : 返回 true&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a 小于 100 或 $b 大于 100 : 返回 false&quot;</span><br><span class="line">fi</span><br><span class="line">if [ $a -lt 5 -o $b -gt 100 ]</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a 小于 5 或 $b 大于 100 : 返回 true&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a 小于 5 或 $b 大于 100 : 返回 false&quot;</span><br><span class="line">fi</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 逻辑运算符</span></span><br><span class="line">a=10</span><br><span class="line">b=20</span><br><span class="line">if [[ $a -lt 100 &amp;&amp; $b -gt 100 ]] # 逻辑与</span><br><span class="line">then</span><br><span class="line">   echo &quot;返回 true&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;返回 false&quot;</span><br><span class="line">fi</span><br><span class="line">if [[ $a -lt 100 || $b -gt 100 ]] # 逻辑或</span><br><span class="line">then</span><br><span class="line">   echo &quot;返回 true&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;返回 false&quot;</span><br><span class="line">fi</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 字符串运算符</span></span><br><span class="line">a=&quot;abc&quot;</span><br><span class="line">b=&quot;efg&quot;</span><br><span class="line">if [ $a = $b ] #  判断字符串是否相等</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a = $b : a 等于 b&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a = $b: a 不等于 b&quot;</span><br><span class="line">fi</span><br><span class="line">if [ $a != $b ] #  判断字符串是否不相等</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a != $b : a 不等于 b&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a != $b: a 等于 b&quot;</span><br><span class="line">fi</span><br><span class="line">if [ -z $a ] #  判断字符串长度是否为0</span><br><span class="line">then</span><br><span class="line">   echo &quot;-z $a : 字符串长度为 0&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;-z $a : 字符串长度不为 0&quot;</span><br><span class="line">fi</span><br><span class="line">if [ -n &quot;$a&quot; ] #  判断字符串长度是否不为0</span><br><span class="line">then</span><br><span class="line">   echo &quot;-n $a : 字符串长度不为 0&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;-n $a : 字符串长度为 0&quot;</span><br><span class="line">fi</span><br><span class="line">if [ $a ] #  判断字符串是否为空</span><br><span class="line">then</span><br><span class="line">   echo &quot;$a : 字符串不为空&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;$a : 字符串为空&quot;</span><br><span class="line">fi</span><br><span class="line">echo &quot;&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 文件测试运算符</span></span><br><span class="line">file=&quot;./test.sh&quot;</span><br><span class="line">if [ -r $file ] # 判断文件是否可读</span><br><span class="line">then</span><br><span class="line">   echo &quot;文件可读&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;文件不可读&quot;</span><br><span class="line">fi</span><br><span class="line">if [ -w $file ] # 判断文件是否可写</span><br><span class="line">then</span><br><span class="line">   echo &quot;文件可写&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;文件不可写&quot;</span><br><span class="line">fi</span><br><span class="line">if [ -x $file ] # 判断文件是否可执行</span><br><span class="line">then</span><br><span class="line">   echo &quot;文件可执行&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;文件不可执行&quot;</span><br><span class="line">fi</span><br><span class="line">if [ -f $file ] # 判断文件是普通文件还是特殊文件</span><br><span class="line">then</span><br><span class="line">   echo &quot;文件为普通文件&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;文件为特殊文件&quot;</span><br><span class="line">fi</span><br><span class="line">if [ -d $file ] # 判断文件是不是一个目录</span><br><span class="line">then</span><br><span class="line">   echo &quot;文件是个目录&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;文件不是个目录&quot;</span><br><span class="line">fi</span><br><span class="line">if [ -s $file ] # 判断文件是否为空</span><br><span class="line">then</span><br><span class="line">   echo &quot;文件不为空&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;文件为空&quot;</span><br><span class="line">fi</span><br><span class="line">if [ -e $file ] # 判断文件是否存在</span><br><span class="line">then</span><br><span class="line">   echo &quot;文件存在&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;文件不存在&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></li><li><p>shell echo命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 显示普通字符串</span></span><br><span class="line">echo &quot;\&quot;显示转义字符\&quot;&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 显示变量</span></span><br><span class="line">read name # read 命令从标准输入中读取一行并赋值给name变量</span><br><span class="line">echo &quot;$name is one kind of color&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 显示换行</span></span><br><span class="line">echo -e &quot;hello\n&quot; # -e开启转义</span><br><span class="line">echo &quot;world&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 显示不换行</span></span><br><span class="line">echo -e &quot;OK! \c&quot; # \c不换行</span><br><span class="line">echo &quot;It is a test&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 原样输出字符串</span></span><br><span class="line">echo &#x27;$name\&quot;&#x27;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 显示命令执行结果</span></span><br><span class="line">echo `date`</span><br></pre></td></tr></table></figure></li><li><p>shell printf命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;hello&quot;</span><br><span class="line">printf &quot;hello\n&quot;</span><br><span class="line"></span><br><span class="line">printf &quot;%-10s %-8s %-4s\n&quot; 姓名 性别 体重kg  </span><br><span class="line">printf &quot;%-10s %-8s %-4.2f\n&quot; 郭靖 男 66.1234 </span><br><span class="line">printf &quot;%-10s %-8s %-4.2f\n&quot; 杨过 男 48.6543 </span><br><span class="line">printf &quot;%-10s %-8s %-4.2f\n&quot; 郭芙 女 47.9876</span><br></pre></td></tr></table></figure></li><li><p>test 命令</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">test</span> 命令用于检查某个条件是否成立，它可以进行数值、字符和文件三个方面的测试</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 数值测试</span></span><br><span class="line">num1=100</span><br><span class="line">num2=100</span><br><span class="line">if test $[num1] -eq $[num2] # 代码中的 [] 执行基本的算数运算</span><br><span class="line">then</span><br><span class="line">    echo &#x27;两个数相等！&#x27;</span><br><span class="line">else</span><br><span class="line">    echo &#x27;两个数不相等！&#x27;</span><br><span class="line">fi</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 字符串测试</span></span><br><span class="line">num1=&quot;ru1noob&quot;</span><br><span class="line">num2=&quot;runoob&quot;</span><br><span class="line">if test $num1 = $num2</span><br><span class="line">then</span><br><span class="line">    echo &#x27;两个字符串相等!&#x27;</span><br><span class="line">else</span><br><span class="line">    echo &#x27;两个字符串不相等!&#x27;</span><br><span class="line">fi</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 文件测试</span></span><br><span class="line">if test -e ./test.sh</span><br><span class="line">then</span><br><span class="line">    echo &#x27;文件已存在!&#x27;</span><br><span class="line">else</span><br><span class="line">    echo &#x27;文件不存在!&#x27;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><ol start="12"><li><p>shell 流程控制</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 条件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用[...] 作为判断语句</span></span><br><span class="line">a=10</span><br><span class="line">b=20</span><br><span class="line">if [ $a == $b ]</span><br><span class="line">then</span><br><span class="line">echo &quot;a 等于 b&quot;</span><br><span class="line">elif [ $a -gt $b ]</span><br><span class="line">then</span><br><span class="line">echo &quot;a 大于 b&quot;</span><br><span class="line">elif [ $a -lt $b ]</span><br><span class="line">then</span><br><span class="line">echo &quot;a 小于 b&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;没有符合的条件&quot;</span><br><span class="line">fi</span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用 ((...)) 作为判断语句,大于和小于可以直接使用 &gt; 和 &lt;</span></span><br><span class="line">a=10</span><br><span class="line">b=20</span><br><span class="line">if (( $a == $b ))</span><br><span class="line">then</span><br><span class="line">echo &quot;a 等于 b&quot;</span><br><span class="line">elif (( $a &gt; $b ))</span><br><span class="line">then</span><br><span class="line">echo &quot;a 大于 b&quot;</span><br><span class="line">elif (( $a &lt; $b ))</span><br><span class="line">then</span><br><span class="line">echo &quot;a 小于 b&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;没有符合的条件&quot;</span><br><span class="line">fi</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 循环</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">for</span>循环</span></span><br><span class="line">for loop in 1 2 3 4 5</span><br><span class="line">do</span><br><span class="line">    echo &quot;The value is: $loop&quot;</span><br><span class="line">done</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">while</span>循环</span></span><br><span class="line">int=1</span><br><span class="line">while(( $int&lt;=5 ))</span><br><span class="line">do</span><br><span class="line">    echo $int</span><br><span class="line">    let &quot;int++&quot; # Bash let 命令，它用于执行一个或多个表达式，变量计算中不需要加上 $ 来表示变量</span><br><span class="line">done</span><br><span class="line">: &#x27;</span><br><span class="line">无限循环</span><br><span class="line">while :</span><br><span class="line">do</span><br><span class="line">    command</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">    command</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">for (( ; ; ))</span><br><span class="line">&#x27;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> until循环</span></span><br><span class="line">a=0</span><br><span class="line">until [ ! $a -lt 10 ]</span><br><span class="line">do</span><br><span class="line">   echo $a</span><br><span class="line">   a=`expr $a + 1`</span><br><span class="line">done</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">case</span>多选择语句</span></span><br><span class="line">echo &#x27;输入 1 到 4 之间的数字:&#x27;</span><br><span class="line">echo &#x27;你输入的数字为:&#x27;</span><br><span class="line">read aNum</span><br><span class="line">case $aNum in</span><br><span class="line">    1)  echo &#x27;你选择了 1&#x27;</span><br><span class="line">    ;;</span><br><span class="line">    2)  echo &#x27;你选择了 2&#x27;</span><br><span class="line">    ;;</span><br><span class="line">    3)  echo &#x27;你选择了 3&#x27;</span><br><span class="line">    ;;</span><br><span class="line">    4)  echo &#x27;你选择了 4&#x27;</span><br><span class="line">    ;;</span><br><span class="line">    *)  echo &#x27;你没有输入 1 到 4 之间的数字&#x27;</span><br><span class="line">    ;;</span><br><span class="line">esac</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 跳出循环</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">break</span></span></span><br><span class="line">while :</span><br><span class="line">do</span><br><span class="line">    echo -n &quot;输入 1 到 5 之间的数字:&quot;</span><br><span class="line">    read aNum</span><br><span class="line">    case $aNum in</span><br><span class="line">        1|2|3|4|5) echo &quot;你输入的数字为 $aNum!&quot;</span><br><span class="line">        ;;</span><br><span class="line">        *) echo &quot;你输入的数字不是 1 到 5 之间的! 游戏结束&quot;</span><br><span class="line">            break</span><br><span class="line">        ;;</span><br><span class="line">    esac</span><br><span class="line">done</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">continue</span></span></span><br><span class="line">: &#x27;</span><br><span class="line">while :</span><br><span class="line">do</span><br><span class="line">    echo -n &quot;输入 1 到 5 之间的数字: &quot;</span><br><span class="line">    read aNum</span><br><span class="line">    case $aNum in</span><br><span class="line">        1|2|3|4|5) echo &quot;你输入的数字为 $aNum!&quot;</span><br><span class="line">        ;;</span><br><span class="line">        *) echo &quot;你输入的数字不是 1 到 5 之间的!&quot;</span><br><span class="line">            continue</span><br><span class="line">            echo &quot;游戏结束&quot;</span><br><span class="line">        ;;</span><br><span class="line">    esac</span><br><span class="line">done</span><br><span class="line">&#x27;</span><br></pre></td></tr></table></figure></li><li><p>shell 函数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 无返回值函数</span></span><br><span class="line">demoFun()&#123;</span><br><span class="line">echo &quot;这是我的第一个 shell 函数!&quot;</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;-----函数开始执行-----&quot;</span><br><span class="line">demoFun</span><br><span class="line">echo &quot;-----函数执行完毕-----&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 有返回值函数</span></span><br><span class="line">funWithReturn()&#123;</span><br><span class="line">    echo &quot;这个函数会对输入的两个数字进行相加运算...&quot;</span><br><span class="line">    echo &quot;输入第一个数字: &quot;</span><br><span class="line">    read aNum</span><br><span class="line">    echo &quot;输入第二个数字: &quot;</span><br><span class="line">    read anotherNum</span><br><span class="line">    echo &quot;两个数字分别为 $aNum 和 $anotherNum !&quot;</span><br><span class="line">    return $(($aNum+$anotherNum))</span><br><span class="line">&#125;</span><br><span class="line">funWithReturn</span><br><span class="line">echo &quot;输入的两个数字之和为 $? !&quot;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 函数参数</span></span><br><span class="line">funWithParam()&#123;</span><br><span class="line">    echo &quot;第一个参数为 $1 !&quot;</span><br><span class="line">    echo &quot;第二个参数为 $2 !&quot;</span><br><span class="line">    echo &quot;第十个参数为 $10 !&quot;</span><br><span class="line">    echo &quot;第十个参数为 $&#123;10&#125; !&quot;</span><br><span class="line">    echo &quot;第十一个参数为 $&#123;11&#125; !&quot;</span><br><span class="line">    echo &quot;参数总数有 $# 个!&quot;</span><br><span class="line">    echo &quot;作为一个字符串输出所有参数 $* !&quot;</span><br><span class="line">&#125;</span><br><span class="line">funWithParam 1 2 3 4 5 6 7 8 9 34 73</span><br></pre></td></tr></table></figure></li><li><p>输入/输出重定向</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;print(&quot;hello&quot;)&#x27; &gt; hello.py</span><br></pre></td></tr></table></figure></li><li><p>shell文件包含</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">: &#x27;</span><br><span class="line">shell 脚本中可以包含外部脚本</span><br><span class="line"></span><br><span class="line">语法格式:</span><br><span class="line">. filename   # 注意点号(.)和文件名中间有一空格</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line">source filename</span><br><span class="line">&#x27;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;shell脚本&quot;&gt;&lt;a href=&quot;#shell脚本&quot; class=&quot;headerlink&quot; title=&quot;shell脚本&quot;&gt;&lt;/a&gt;shell脚本&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;shell脚本可将环境变量添加、依赖安装、二进制文件执行等命令包含在一个后缀为.s</summary>
      
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    <category term="shell脚本" scheme="http://example.com/categories/Linux/shell%E8%84%9A%E6%9C%AC/"/>
    
    
    <category term="shell脚本" scheme="http://example.com/tags/shell%E8%84%9A%E6%9C%AC/"/>
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>CMake | CMake安装及使用</title>
    <link href="http://example.com/2023/09/18/cmake%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/2023/09/18/cmake%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/</id>
    <published>2023-09-18T15:13:29.000Z</published>
    <updated>2023-10-07T12:50:19.752Z</updated>
    
    <content type="html"><![CDATA[<h1 id="构建工具CMake"><a href="#构建工具CMake" class="headerlink" title="构建工具CMake"></a>构建工具CMake</h1><ul><li><p>软件构建</p><ul><li>自动完成代码编译、链接、打包的整个过程</li></ul></li><li><p>C和C++程序的构建工具-Cmake</p></li><li><p>Cmake的安装</p></li><li><p>gcc/clang编译工具安装（cmake不自带编译工具）</p></li><li><p>示例代码 main.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;hello,world&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建CMakeLists.txt文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cmake_minimum_required(VERSION 3.10)</span><br><span class="line"></span><br><span class="line">project(Example)</span><br><span class="line"></span><br><span class="line">add_executable(Example main.cpp)</span><br></pre></td></tr></table></figure></li><li><p>配置项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake -S . -B build</span><br></pre></td></tr></table></figure></li><li><p>构建项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake --build build</span><br></pre></td></tr></table></figure><p>构建完成后生成Example可执行文件，如下图所示：</p><p><img src="/2023/09/18/cmake%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/1.png"></p></li><li><p>执行可执行文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- cd ./build/</span><br><span class="line">./Example</span><br><span class="line"><span class="meta">#</span><span class="bash"> 输出hello，world</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;构建工具CMake&quot;&gt;&lt;a href=&quot;#构建工具CMake&quot; class=&quot;headerlink&quot; title=&quot;构建工具CMake&quot;&gt;&lt;/a&gt;构建工具CMake&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;软件构建&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自动完成代码编译、链接、打包的</summary>
      
    
    
    
    <category term="CMake" scheme="http://example.com/categories/CMake/"/>
    
    <category term="CMake安装及使用" scheme="http://example.com/categories/CMake/CMake%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="CMake" scheme="http://example.com/tags/CMake/"/>
    
  </entry>
  
  <entry>
    <title>gcc | 编译和链接</title>
    <link href="http://example.com/2023/09/18/%E7%BC%96%E8%AF%91%E5%92%8C%E9%93%BE%E6%8E%A5/"/>
    <id>http://example.com/2023/09/18/%E7%BC%96%E8%AF%91%E5%92%8C%E9%93%BE%E6%8E%A5/</id>
    <published>2023-09-18T14:29:42.000Z</published>
    <updated>2023-10-07T12:43:37.687Z</updated>
    
    <content type="html"><![CDATA[<h1 id="编译和链接"><a href="#编译和链接" class="headerlink" title="编译和链接"></a>编译和链接</h1><ul><li><p>通过一个代码示例理解编译与链接的过程</p><ol><li><p>安装gcc</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install build-essential</span><br></pre></td></tr></table></figure></li><li><p>编写示例代码</p><p><strong>main.c</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello,world!\n&quot;</span>);     </span><br><span class="line">    <span class="keyword">int</span> result = add(<span class="number">5</span>,<span class="number">5</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>math.c</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编译示例代码的两个文件main.c和math.c，得到对应的目标文件（Object File）main.o和math.o</p><p>注：目标文件是二进制文件，文件格式是ELF（Executable and Linkable Format）,ELF格式是linux下所有可执行文件的通用格式。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">gcc -c main.c</span><br><span class="line">gcc -c math.c</span><br><span class="line"></span><br><span class="line">file main.o</span><br><span class="line"><span class="meta">#</span><span class="bash">main.o: ELF 64-bit LSB relocatable, x86-64, version 1 (SYSV), <span class="comment">#not stripped</span></span></span><br><span class="line"></span><br><span class="line">readelf -h main.o</span><br><span class="line">ELF Header:</span><br><span class="line">  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 </span><br><span class="line">  Class:                             ELF64</span><br><span class="line">  Data:                              2&#x27;s complement, little endian</span><br><span class="line">  Version:                           1 (current)</span><br><span class="line">  OS/ABI:                            UNIX - System V</span><br><span class="line">  ABI Version:                       0</span><br><span class="line">  Type:                              REL (Relocatable file)</span><br><span class="line">  Machine:                           Advanced Micro Devices X86-64</span><br><span class="line">  Version:                           0x1</span><br><span class="line">  Entry point address:               0x0</span><br><span class="line">  Start of program headers:          0 (bytes into file)</span><br><span class="line">  Start of section headers:          672 (bytes into file)</span><br><span class="line">  Flags:                             0x0</span><br><span class="line">  Size of this header:               64 (bytes)</span><br><span class="line">  Size of program headers:           0 (bytes)</span><br><span class="line">  Number of program headers:         0</span><br><span class="line">  Size of section headers:           64 (bytes)</span><br><span class="line">  Number of section headers:         14</span><br><span class="line">  Section header string table index: 13</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">readelf -S main.o</span><br><span class="line"><span class="meta">#</span><span class="bash"> .text 代码区域</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> .data 数据区域</span></span><br></pre></td></tr></table></figure><p><img src="/2023/09/18/%E7%BC%96%E8%AF%91%E5%92%8C%E9%93%BE%E6%8E%A5/1.png"></p><p>objdump -s -d main.o</p><p>-d:将代码段反汇编</p><p>-s:将代码段反汇编的同时，将反汇编代码和源代码交替显示，编译时需要给出-                  g，即需要调试信息。</p><p>右侧汇编指令中有两个call指令，既主函数中对printf和add的调用，从机器码可以看出跳转地址为0，需要在后续根据重定位表更新到printf和add的实际地址。</p><p><img src="/2023/09/18/%E7%BC%96%E8%AF%91%E5%92%8C%E9%93%BE%E6%8E%A5/2.png"></p><p>objdump -r main.o</p><p>查看两个函数调用的信息（地址偏移量、类型和值）</p><p><img src="/2023/09/18/%E7%BC%96%E8%AF%91%E5%92%8C%E9%93%BE%E6%8E%A5/3.png"></p></li><li><p>链接</p><p>链接调用的函数机器码并组装为可执行文件main</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc main.o math.o -o main</span><br></pre></td></tr></table></figure><ol><li>执行可执行文件main</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./main</span><br><span class="line"><span class="meta">#</span><span class="bash"> 输出hello,world</span></span><br></pre></td></tr></table></figure></li><li><p>通过makefile来进行编译链接步骤</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">all: main</span></span><br><span class="line"></span><br><span class="line"><span class="section">main: main.o math.o</span></span><br><span class="line">        gcc main.o math.o -o main</span><br><span class="line"></span><br><span class="line"><span class="section">main.o: main.c</span></span><br><span class="line">        gcc -c main.c</span><br><span class="line"></span><br><span class="line"><span class="section">math.o: math.c</span></span><br><span class="line">        gcc -c math.c</span><br><span class="line"></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">        rm main main.o math.o</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make main             </span><br></pre></td></tr></table></figure><p>​          </p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;编译和链接&quot;&gt;&lt;a href=&quot;#编译和链接&quot; class=&quot;headerlink&quot; title=&quot;编译和链接&quot;&gt;&lt;/a&gt;编译和链接&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;通过一个代码示例理解编译与链接的过程&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装gcc&lt;/p&gt;
&lt;fig</summary>
      
    
    
    
    <category term="编译器" scheme="http://example.com/categories/%E7%BC%96%E8%AF%91%E5%99%A8/"/>
    
    <category term="gcc" scheme="http://example.com/categories/%E7%BC%96%E8%AF%91%E5%99%A8/gcc/"/>
    
    <category term="编译和链接" scheme="http://example.com/categories/%E7%BC%96%E8%AF%91%E5%99%A8/gcc/%E7%BC%96%E8%AF%91%E5%92%8C%E9%93%BE%E6%8E%A5/"/>
    
    
    <category term="编译" scheme="http://example.com/tags/%E7%BC%96%E8%AF%91/"/>
    
    <category term="链接" scheme="http://example.com/tags/%E9%93%BE%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>InnoThought | 我的想法 2023.7.15</title>
    <link href="http://example.com/2023/07/15/%E6%88%91%E7%9A%84%E6%83%B3%E6%B3%9520230715/"/>
    <id>http://example.com/2023/07/15/%E6%88%91%E7%9A%84%E6%83%B3%E6%B3%9520230715/</id>
    <published>2023-07-15T13:04:03.000Z</published>
    <updated>2023-10-07T12:40:54.451Z</updated>
    
    <content type="html"><![CDATA[<h1 id="我的想法-2023-7-15"><a href="#我的想法-2023-7-15" class="headerlink" title="我的想法 2023.7.15"></a>我的想法 2023.7.15</h1><ul><li><p>Theme: 让技术有用</p></li><li><p>我的想法</p><ul><li><p>增加gitee的使用频率，系统学习某个技术并将学习过程或经验推送到gitee</p></li><li><p>时常维护自己的代码仓库以及个人博客</p></li><li><p>开发小工具/有用的功能，在gitee建立仓库</p></li><li><p>在建仓和维护仓库的同时，深入掌握git技术</p></li><li><p>希望在一年后能够有一个成熟的代码仓库（主题待定）</p></li><li><p>学习人工智能技术，并注意新技术的体验（例如yolo目标检测这样的技术）</p></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;我的想法-2023-7-15&quot;&gt;&lt;a href=&quot;#我的想法-2023-7-15&quot; class=&quot;headerlink&quot; title=&quot;我的想法 2023.7.15&quot;&gt;&lt;/a&gt;我的想法 2023.7.15&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Theme: 让技术有用&lt;</summary>
      
    
    
    
    <category term="InnoThought" scheme="http://example.com/categories/InnoThought/"/>
    
    <category term="我的想法 2023.7.15" scheme="http://example.com/categories/InnoThought/%E6%88%91%E7%9A%84%E6%83%B3%E6%B3%95-2023-7-15/"/>
    
    
    <category term="InnoThought" scheme="http://example.com/tags/InnoThought/"/>
    
  </entry>
  
  <entry>
    <title>淡定自若 孰能生巧</title>
    <link href="http://example.com/2023/02/18/%E5%AD%B0%E8%83%BD%E7%94%9F%E5%B7%A7/"/>
    <id>http://example.com/2023/02/18/%E5%AD%B0%E8%83%BD%E7%94%9F%E5%B7%A7/</id>
    <published>2023-02-18T11:21:04.000Z</published>
    <updated>2023-02-18T11:39:54.454Z</updated>
    
    <content type="html"><![CDATA[<p><strong>“所有的淡定自若，背后一定是孰能生巧！”</strong></p><p>2023/2/18</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;“所有的淡定自若，背后一定是孰能生巧！”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2023/2/18&lt;/p&gt;
</summary>
      
    
    
    
    <category term="victory&#39;s thoughts" scheme="http://example.com/categories/victory-s-thoughts/"/>
    
    
  </entry>
  
  <entry>
    <title>Docker | Docker的安装及常用命令</title>
    <link href="http://example.com/2022/11/24/Docker/"/>
    <id>http://example.com/2022/11/24/Docker/</id>
    <published>2022-11-25T07:40:02.000Z</published>
    <updated>2023-10-07T12:39:06.374Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker的安装及常用命令"><a href="#Docker的安装及常用命令" class="headerlink" title="Docker的安装及常用命令"></a>Docker的安装及常用命令</h1><ul><li><p>Docker是什么？Docker的作用？</p><ul><li>Docker是一个开源的应用<strong>容器</strong>引擎，基于Go语言开发，可以让开发者打包应用以及依赖包到容器中，然后发布到任何linux机器上，在移植应用时不需要重新搭建环境和导入依赖，具备强大的可移植性。与虚拟机有所区别，<strong>虚拟机虚拟出一套硬件并</strong>在其上搭建环境并部署应用，而docker通过<strong>将应用与依赖打包</strong>，从而达到可移植、快速部署的目的。</li></ul></li><li><p>Docker安装</p><p><a href="https://www.runoob.com/docker/ubuntu-docker-install.html">ubuntu环境下Docker安装教程</a></p></li><li><p>常用镜像（image）操作</p><ul><li><p>查找镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search image_name</span><br></pre></td></tr></table></figure></li><li><p>获取镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull image_name</span><br></pre></td></tr></table></figure></li><li><p>列出镜像列表</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images # 或docker image ls</span><br></pre></td></tr></table></figure></li><li><p>删除镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi image_name</span><br></pre></td></tr></table></figure></li></ul></li><li><p>常用容器（container）操作</p><ul><li><p>查看正在运行的容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br><span class="line">docker ps -q#只输出容器id</span><br></pre></td></tr></table></figure></li><li><p>启动容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name container_name image_name /bin/bash</span><br></pre></td></tr></table></figure><ul><li>-i:交互式操作</li><li>-t:终端</li><li>-d:docker服务在后台运行，启动后不会进入容器</li></ul></li><li><p>交互方式进入容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it container_id /bin/bash</span><br></pre></td></tr></table></figure></li><li><p>将主机内容复制到容器中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp file_name container_id:/path/directory</span><br></pre></td></tr></table></figure></li><li><p>启动已停止容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker start conatainer_id</span><br></pre></td></tr></table></figure></li><li><p>停止容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop container_id</span><br></pre></td></tr></table></figure></li><li><p>重启容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart container_id</span><br></pre></td></tr></table></figure></li><li><p>删除容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm container_id</span><br></pre></td></tr></table></figure></li><li><p>导出和导入容器 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker export container_id &gt; xxx.tar # 导出容器</span><br><span class="line"></span><br><span class="line">docker import - image_name:image_tag # 根据镜像导入容器</span><br></pre></td></tr></table></figure></li><li><p>清理所有处于终止状态的容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker container prune</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Docker的安装及常用命令&quot;&gt;&lt;a href=&quot;#Docker的安装及常用命令&quot; class=&quot;headerlink&quot; title=&quot;Docker的安装及常用命令&quot;&gt;&lt;/a&gt;Docker的安装及常用命令&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Docker是什么？Doc</summary>
      
    
    
    
    <category term="Docker" scheme="http://example.com/categories/Docker/"/>
    
    <category term="Docker的安装及常用命令" scheme="http://example.com/categories/Docker/Docker%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="Docker" scheme="http://example.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Git | Git常用命令</title>
    <link href="http://example.com/2022/11/24/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://example.com/2022/11/24/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2022-11-25T03:11:03.000Z</published>
    <updated>2022-11-25T07:32:43.649Z</updated>
    
    <content type="html"><![CDATA[<h1 id="git常用命令"><a href="#git常用命令" class="headerlink" title="git常用命令"></a>git常用命令</h1><p>再次温习了一遍Git,格外亲切！很好的协同开发工具，给亿个赞！</p><span id="more"></span><ul><li>git常用命令<ul><li>git init</li><li>git status</li><li>git config –global user.name “username”</li><li>git config –global user.email “<a href="mailto:&#120;&#120;&#x78;&#x40;&#x78;&#x78;&#x2e;&#99;&#111;&#x6d;">&#120;&#120;&#x78;&#x40;&#x78;&#x78;&#x2e;&#99;&#111;&#x6d;</a>“</li><li>git add [filename]</li><li>git checkout – [filename]</li><li>git commit -m “comment”</li><li>git reset –hard HEAD^</li><li>git reset –hard HEAD~n</li><li>git remote add origin [remote url]</li><li>git pull origin master</li><li>git push origin master</li><li>git clone [remote url]</li><li>git branch [brach name]</li><li>git checkout [branch name]</li><li>git checkout -b [brach name]</li><li>git branch -v</li><li>git merge [branch name]</li><li>git brach -D [branch name]</li><li>git diff</li></ul></li><li>pull request<ul><li>fork项目到自己的github账户</li><li>把自己的github账户的项目clone到本地仓库</li><li>开发项目</li><li>提交到本地库（add、commit）</li><li>推送到自己的github账户的项目上</li><li>登录自己的github，在自己的项目上new pull request</li><li>填写pull request 申请</li><li>管理员合并</li></ul></li><li>部分命令的执行效果<br><img src="/2022/11/24/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/1.png"></li><li>使用git协作开发的一般流程<br><img src="/2022/11/24/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/2.png"></li><li>fork项目、开发并提交pull request<br><img src="/2022/11/24/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/3.png"></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;git常用命令&quot;&gt;&lt;a href=&quot;#git常用命令&quot; class=&quot;headerlink&quot; title=&quot;git常用命令&quot;&gt;&lt;/a&gt;git常用命令&lt;/h1&gt;&lt;p&gt;再次温习了一遍Git,格外亲切！很好的协同开发工具，给亿个赞！&lt;/p&gt;</summary>
    
    
    
    <category term="Git" scheme="http://example.com/categories/Git/"/>
    
    <category term="Git常用命令及使用Git进行协作的一般流程" scheme="http://example.com/categories/Git/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%8F%8A%E4%BD%BF%E7%94%A8Git%E8%BF%9B%E8%A1%8C%E5%8D%8F%E4%BD%9C%E7%9A%84%E4%B8%80%E8%88%AC%E6%B5%81%E7%A8%8B/"/>
    
    
    <category term="Git" scheme="http://example.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>leetcode | 135.分发糖果</title>
    <link href="http://example.com/2022/10/24/%E5%88%86%E5%8F%91%E7%B3%96%E6%9E%9C/"/>
    <id>http://example.com/2022/10/24/%E5%88%86%E5%8F%91%E7%B3%96%E6%9E%9C/</id>
    <published>2022-10-24T13:55:05.000Z</published>
    <updated>2022-10-26T02:33:56.733Z</updated>
    
    <content type="html"><![CDATA[<h1 id="135-分发糖果"><a href="#135-分发糖果" class="headerlink" title="135.分发糖果"></a>135.分发糖果</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>n 个孩子站成一排。给你一个整数数组 ratings 表示每个孩子的评分。</p><p>你需要按照以下要求，给这些孩子分发糖果：<br>1）每个孩子至少分配到 1 个糖果。<br>2）相邻两个孩子评分更高的孩子会获得更多的糖果。</p><p>请你给每个孩子分发糖果，计算并返回需要准备的 最少糖果数目 。</p><p>示例 1：<br>输入：ratings = [1,0,2]<br>输出：5<br>解释：你可以分别给第一个、第二个、第三个孩子分发 2、1、2 颗糖果。</p><p>示例 2：<br>输入：ratings = [1,2,2]<br>输出：4<br>解释：你可以分别给第一个、第二个、第三个孩子分发 1、2、1 颗糖果。<br>     第三个孩子只得到 1 颗糖果，这满足题面中的两个条件。</p><p><a href="https://leetcode.cn/problems/candy">题目链接</a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">candy</span>(<span class="params">self, ratings: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span></span><br><span class="line">        n = <span class="built_in">len</span>(ratings)</span><br><span class="line">        left = [<span class="number">0</span>] * n</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            <span class="keyword">if</span> i &gt; <span class="number">0</span> <span class="keyword">and</span> ratings[i] &gt; ratings[i - <span class="number">1</span>]:</span><br><span class="line">                left[i] = left[i - <span class="number">1</span>] + <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                left[i] = <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        right = ret = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n - <span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> i &lt; n - <span class="number">1</span> <span class="keyword">and</span> ratings[i] &gt; ratings[i + <span class="number">1</span>]:</span><br><span class="line">                right += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                right = <span class="number">1</span></span><br><span class="line">            ret += <span class="built_in">max</span>(left[i], right)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> ret</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;135-分发糖果&quot;&gt;&lt;a href=&quot;#135-分发糖果&quot; class=&quot;headerlink&quot; title=&quot;135.分发糖果&quot;&gt;&lt;/a&gt;135.分发糖果&lt;/h1&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="算法刷题" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/"/>
    
    <category term="leetcode" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/"/>
    
    <category term="135.分发糖果" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/135-%E5%88%86%E5%8F%91%E7%B3%96%E6%9E%9C/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>leetcode | 695.岛屿的最大面积</title>
    <link href="http://example.com/2022/10/24/%E5%B2%9B%E5%B1%BF%E7%9A%84%E6%9C%80%E5%A4%A7%E9%9D%A2%E7%A7%AF/"/>
    <id>http://example.com/2022/10/24/%E5%B2%9B%E5%B1%BF%E7%9A%84%E6%9C%80%E5%A4%A7%E9%9D%A2%E7%A7%AF/</id>
    <published>2022-10-24T13:35:06.000Z</published>
    <updated>2022-10-24T13:49:26.123Z</updated>
    
    <content type="html"><![CDATA[<h1 id="695-岛屿的最大面积"><a href="#695-岛屿的最大面积" class="headerlink" title="695.岛屿的最大面积"></a>695.岛屿的最大面积</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给你一个大小为 m x n 的二进制矩阵 grid 。</p><p>岛屿 是由一些相邻的 1 (代表土地) 构成的组合，这里的「相邻」要求两个 1 必须在 水平或者竖直的四个方向上 相邻。你可以假设 grid 的四个边缘都被 0（代表水）包围着。</p><p>岛屿的面积是岛上值为 1 的单元格的数目。</p><p>计算并返回 grid 中最大的岛屿面积。如果没有岛屿，则返回面积为 0 。</p><p>示例 1：<br>输入：grid = [[0,0,1,0,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,1,1,1,0,0,0],[0,1,1,0,1,0,0,0,0,0,0,0,0],[0,1,0,0,1,1,0,0,1,0,1,0,0],[0,1,0,0,1,1,0,0,1,1,1,0,0],[0,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,1,1,1,0,0,0],[0,0,0,0,0,0,0,1,1,0,0,0,0]]<br>输出：6<br>解释：答案不应该是 11 ，因为岛屿只能包含水平或垂直这四个方向上的 1 。</p><p>示例 2：<br>输入：grid = [[0,0,0,0,0,0,0,0]]<br>输出：0</p><p><a href="https://leetcode.cn/problems/max-area-of-island">题目链接</a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>深度优先搜索（DFS）<br>利用深度优先搜索（DFS）对每个岛屿进行遍历，找出最大值<br>（1）从每个陆地出发，遍历该陆地所在的岛屿<br>（2）在遍历某一岛屿的时候：<br>1）从隶属于该岛屿的某一块陆地出发，向四个方向递归地DFS<br>2）每次递归对下标进行判断，以区域的边界作为递归边界<br>3）为保证每块陆地只访问一次，将已访问过的陆地置0<br>4）递归地返回整块岛屿的面积<br>（3）找出所有岛屿的最大值，即为答案</li></ol><p><strong>邻接矩阵和邻接表表示的图的DFS和BFS</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MGraph</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAXVEX = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> INFINITY = <span class="number">65535</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>[] vexs = <span class="keyword">new</span> <span class="keyword">int</span>[MAXVEX];</span><br><span class="line"><span class="keyword">int</span>[][] arc = <span class="keyword">new</span> <span class="keyword">int</span>[MAXVEX][MAXVEX];</span><br><span class="line"><span class="keyword">int</span> numVertexes;</span><br><span class="line"><span class="keyword">int</span> numEdges;</span><br><span class="line"><span class="keyword">boolean</span>[] visited = <span class="keyword">new</span> <span class="keyword">boolean</span>[MAXVEX];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createMGraph</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;输入顶点数和边数：\n&quot;</span>);</span><br><span class="line">Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">numVertexes = scanner.nextInt();</span><br><span class="line">numEdges = scanner.nextInt();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numVertexes; i++) &#123;</span><br><span class="line">vexs[i] = scanner.nextInt();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numVertexes; i++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; numVertexes; j++) &#123;</span><br><span class="line">arc[i][j] = INFINITY;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; numEdges; k++) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;输入边（vi,vj）上的下标i,j和权w：\n&quot;</span>);</span><br><span class="line"><span class="keyword">int</span> i = scanner.nextInt();</span><br><span class="line"><span class="keyword">int</span> j = scanner.nextInt();</span><br><span class="line"><span class="keyword">int</span> w = scanner.nextInt();</span><br><span class="line">arc[i][j] = w;</span><br><span class="line">arc[j][i] = arc[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line"> visited[i] = <span class="keyword">true</span>;</span><br><span class="line"> System.out.println(vexs[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; numVertexes; j++) &#123;</span><br><span class="line"> <span class="keyword">if</span>(arc[i][j] == <span class="number">1</span> &amp;&amp; !visited[j]) &#123;</span><br><span class="line"> DFS(j);</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DFSTraverse</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numVertexes; i++) &#123;</span><br><span class="line">visited[i] = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numVertexes; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(!visited[i]) &#123;</span><br><span class="line">DFS(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">BFSTraverse</span><span class="params">()</span> </span>&#123;</span><br><span class="line">LinkedList&lt;Integer&gt; queue = <span class="keyword">new</span> LinkedList&lt;Integer&gt;();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.numVertexes; i++) &#123;</span><br><span class="line"><span class="keyword">this</span>.visited[i] = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.numVertexes; i++) &#123;<span class="comment">//对每一个顶点做循环</span></span><br><span class="line"><span class="keyword">if</span>(!visited[i]) &#123;<span class="comment">//若是未访问过就处理</span></span><br><span class="line">visited[i] = <span class="keyword">true</span>;<span class="comment">//设置当前顶点访问过</span></span><br><span class="line">System.out.println(<span class="keyword">this</span>.vexs[i]);<span class="comment">//打印顶点，也可以其他操作</span></span><br><span class="line">queue.addLast(i);<span class="comment">//将此顶点入队列</span></span><br><span class="line"><span class="keyword">while</span>(!queue.isEmpty()) &#123;</span><br><span class="line">queue.pop();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="keyword">this</span>.numVertexes; j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>.arc[i][j] == <span class="number">1</span> &amp;&amp; !<span class="keyword">this</span>.visited[j]) &#123;</span><br><span class="line">visited[j] = <span class="keyword">true</span>;</span><br><span class="line">System.out.println(<span class="keyword">this</span>.vexs[j]);</span><br><span class="line">queue.addLast(j);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EdgeNode</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> adjvex;</span><br><span class="line">EdgeNode next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VertexNode</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> data;</span><br><span class="line">EdgeNode firstedge;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GraphAdjList</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAXVEX = <span class="number">100</span>;</span><br><span class="line">VertexNode[] adjList= <span class="keyword">new</span> VertexNode[MAXVEX];</span><br><span class="line"><span class="keyword">int</span> numVertexes;</span><br><span class="line"><span class="keyword">int</span> numEdges;</span><br><span class="line"><span class="keyword">boolean</span>[] visited = <span class="keyword">new</span> <span class="keyword">boolean</span>[MAXVEX];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createALGraph</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;输入顶点数和边数：&quot;</span>);</span><br><span class="line"><span class="keyword">this</span>.numVertexes = scanner.nextInt();</span><br><span class="line"><span class="keyword">this</span>.numEdges = scanner.nextInt();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="keyword">this</span>.numVertexes; i++) &#123;</span><br><span class="line">VertexNode node = <span class="keyword">new</span> VertexNode();</span><br><span class="line">node.data = scanner.nextInt();</span><br><span class="line">node.firstedge = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">this</span>.adjList[i] = node;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="keyword">this</span>.numEdges; k++) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;输入边（vi,vj）上的顶点序号：\n&quot;</span>);</span><br><span class="line"><span class="keyword">int</span> i = scanner.nextInt();</span><br><span class="line"><span class="keyword">int</span> j = scanner.nextInt();</span><br><span class="line">EdgeNode e = <span class="keyword">new</span> EdgeNode();</span><br><span class="line">e.adjvex = j;</span><br><span class="line">e.next = <span class="keyword">this</span>.adjList[i].firstedge;</span><br><span class="line"><span class="keyword">this</span>.adjList[i].firstedge = e;</span><br><span class="line"></span><br><span class="line">EdgeNode e2 = <span class="keyword">new</span> EdgeNode();</span><br><span class="line">e2.adjvex = i;</span><br><span class="line">e2.next = <span class="keyword">this</span>.adjList[j].firstedge;</span><br><span class="line"><span class="keyword">this</span>.adjList[j].firstedge = e2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">visited[i] = <span class="keyword">true</span>;</span><br><span class="line">System.out.println(<span class="keyword">this</span>.adjList[i].data + <span class="string">&quot; &quot;</span>);</span><br><span class="line">EdgeNode p = <span class="keyword">new</span> EdgeNode();</span><br><span class="line">p = <span class="keyword">this</span>.adjList[i].firstedge;</span><br><span class="line"><span class="keyword">while</span>(p != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(!visited[p.adjvex]) &#123;</span><br><span class="line">DFS(p.adjvex);</span><br><span class="line">&#125;</span><br><span class="line">p = p.next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DFSTraverse</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.numVertexes; i++) &#123;</span><br><span class="line"><span class="keyword">this</span>.visited[i] = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.numVertexes; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(!visited[i]) &#123;</span><br><span class="line"><span class="keyword">this</span>.DFS(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">BFSTraverse</span><span class="params">()</span> </span>&#123;</span><br><span class="line">LinkedList&lt;Integer&gt; queue = <span class="keyword">new</span> LinkedList&lt;Integer&gt;();</span><br><span class="line">EdgeNode p = <span class="keyword">new</span> EdgeNode();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.numVertexes; i++) &#123;</span><br><span class="line"><span class="keyword">this</span>.visited[i] = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.numVertexes; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">this</span>.visited[i]) &#123;</span><br><span class="line"><span class="keyword">this</span>.visited[i] = <span class="keyword">true</span>;</span><br><span class="line">System.out.println(<span class="keyword">this</span>.adjList[i].data);<span class="comment">//打印顶点</span></span><br><span class="line">queue.addLast(i);</span><br><span class="line"><span class="keyword">while</span>(!queue.isEmpty()) &#123;</span><br><span class="line">queue.pop();</span><br><span class="line">p = <span class="keyword">this</span>.adjList[i].firstedge;</span><br><span class="line"><span class="keyword">while</span>(p != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">this</span>.visited[p.adjvex]) &#123;</span><br><span class="line"><span class="keyword">this</span>.visited[p.adjvex] = <span class="keyword">true</span>;</span><br><span class="line">System.out.println(<span class="keyword">this</span>.adjList[p.adjvex].data);</span><br><span class="line">queue.add(p.adjvex);</span><br><span class="line">&#125;</span><br><span class="line">p = p.next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DFSAndBFS</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//邻接矩阵</span></span><br><span class="line">MGraph graph = <span class="keyword">new</span> MGraph();</span><br><span class="line">graph.createMGraph();</span><br><span class="line">System.out.println(<span class="string">&quot;邻接矩阵：\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; graph.numVertexes; i++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; graph.numVertexes; j++) &#123;</span><br><span class="line">System.out.print(graph.arc[i][j]+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;深度优先搜索遍历图（邻接矩阵）：\n&quot;</span>);</span><br><span class="line">graph.DFSTraverse();</span><br><span class="line">System.out.println(<span class="string">&quot;广度优先搜索遍历图（邻接矩阵）：\n&quot;</span>);</span><br><span class="line">graph.BFSTraverse();</span><br><span class="line"></span><br><span class="line"><span class="comment">//邻接表</span></span><br><span class="line">GraphAdjList GL = <span class="keyword">new</span> GraphAdjList();</span><br><span class="line">GL.createALGraph();</span><br><span class="line">System.out.println(<span class="string">&quot;深度优先搜索遍历图（邻接表）：\n&quot;</span>);</span><br><span class="line">GL.DFSTraverse();</span><br><span class="line">System.out.println(<span class="string">&quot;广度优先搜索遍历图（邻接表）：\n&quot;</span>);</span><br><span class="line">GL.BFSTraverse();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">island_dfs</span>(<span class="params">self, grid, i, j</span>):</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(grid) &gt; i &gt;= <span class="number">0</span> <span class="keyword">and</span> <span class="built_in">len</span>(grid[<span class="number">0</span>]) &gt; j &gt;= <span class="number">0</span>:</span><br><span class="line"><span class="keyword">if</span> grid[i][j] == <span class="number">0</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">grid[i][j] = <span class="number">0</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span> + self.island_dfs(grid, i - <span class="number">1</span>, j) + self.island_dfs(grid, i + <span class="number">1</span>, j) + \</span><br><span class="line">       self.island_dfs(grid, i, j - <span class="number">1</span>) + self.island_dfs(grid, i, j + <span class="number">1</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">max_area_of_island</span>(<span class="params">self, grid</span>):</span></span><br><span class="line">ans = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(grid)):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(grid[<span class="number">0</span>])):</span><br><span class="line">ans = <span class="built_in">max</span>(ans, self.island_dfs(grid, i, j))</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ans</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">s = Solution()</span><br><span class="line">grid = [[<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">        [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">        [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">        [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">        [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">        [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">        [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">        [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]]</span><br><span class="line">max_area = s.max_area_of_island(grid)</span><br><span class="line"><span class="built_in">print</span>(max_area)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;695-岛屿的最大面积&quot;&gt;&lt;a href=&quot;#695-岛屿的最大面积&quot; class=&quot;headerlink&quot; title=&quot;695.岛屿的最大面积&quot;&gt;&lt;/a&gt;695.岛屿的最大面积&lt;/h1&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;</summary>
      
    
    
    
    <category term="算法刷题" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/"/>
    
    <category term="leetcode" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/"/>
    
    <category term="DFS" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/DFS/"/>
    
    <category term="695.岛屿的最大面积" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/DFS/695-%E5%B2%9B%E5%B1%BF%E7%9A%84%E6%9C%80%E5%A4%A7%E9%9D%A2%E7%A7%AF/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="DFS" scheme="http://example.com/tags/DFS/"/>
    
    <category term="深度优先搜索" scheme="http://example.com/tags/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>Java | 字符串常量池</title>
    <link href="http://example.com/2022/08/20/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E9%87%8F%E6%B1%A0/"/>
    <id>http://example.com/2022/08/20/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E9%87%8F%E6%B1%A0/</id>
    <published>2022-08-21T02:59:32.000Z</published>
    <updated>2022-08-21T04:39:36.144Z</updated>
    
    <content type="html"><![CDATA[<h1 id="字符串常量池"><a href="#字符串常量池" class="headerlink" title="字符串常量池"></a>字符串常量池</h1><p>首先来看下面一段代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        String a = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">        String b = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">        String c = <span class="string">&quot;ab&quot;</span> + <span class="string">&quot;c&quot;</span>;</span><br><span class="line">        String d = <span class="string">&quot;a&quot;</span> + <span class="string">&quot;bc&quot;</span>;</span><br><span class="line">        String e = <span class="string">&quot;a&quot;</span> + <span class="string">&quot;b&quot;</span> + <span class="string">&quot;c&quot;</span>;</span><br><span class="line">        String f = <span class="keyword">new</span> String(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(a == b);<span class="comment">//true</span></span><br><span class="line">        System.out.println(a == c);<span class="comment">//true</span></span><br><span class="line">        System.out.println(a == d);<span class="comment">//true</span></span><br><span class="line">        System.out.println(a == e);<span class="comment">//true</span></span><br><span class="line">        System.out.println(a == f);<span class="comment">//false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在使用String a = “abc”创建字符串对象时，JVM会使用常量池来管理字符串直接量。在执行该语句时，JVM会先检查常量池中是否已经存有”abc”，<br>若没有则将”abc”存入常量池，否则就复用常量池中已有的”abc”，将其引用赋值给变量a。</li><li>在使用new String(“abc”)创建字符串对象时，JVM会先使用常量池来管理字符串直接量，即将”abc”存入常量池。然后再创建一个新的String对象，<br>这个对象会被保存在堆内存中。并且，堆中对象的数据会指向常量池中的直接量。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;字符串常量池&quot;&gt;&lt;a href=&quot;#字符串常量池&quot; class=&quot;headerlink&quot; title=&quot;字符串常量池&quot;&gt;&lt;/a&gt;字符串常量池&lt;/h1&gt;&lt;p&gt;首先来看下面一段代码：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="基础" scheme="http://example.com/categories/Java/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="字符串常量池" scheme="http://example.com/categories/Java/%E5%9F%BA%E7%A1%80/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E9%87%8F%E6%B1%A0/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="字符串常量池" scheme="http://example.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E9%87%8F%E6%B1%A0/"/>
    
  </entry>
  
  <entry>
    <title>Java | 整数常量池</title>
    <link href="http://example.com/2022/08/20/Java%E6%95%B4%E6%95%B0%E5%B8%B8%E9%87%8F%E6%B1%A0/"/>
    <id>http://example.com/2022/08/20/Java%E6%95%B4%E6%95%B0%E5%B8%B8%E9%87%8F%E6%B1%A0/</id>
    <published>2022-08-21T02:36:21.000Z</published>
    <updated>2022-08-21T04:06:00.417Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java整数常量池"><a href="#Java整数常量池" class="headerlink" title="Java整数常量池"></a>Java整数常量池</h1><p>首先来看一段示例代码，我们会发现这样的现象 127 = 127,128 != 128。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Integer a = <span class="number">127</span>;</span><br><span class="line">        Integer b = <span class="number">127</span>;</span><br><span class="line">        Integer c = <span class="number">128</span>;</span><br><span class="line">        Integer d = <span class="number">128</span>;</span><br><span class="line">        System.out.println(a == b);<span class="comment">//true</span></span><br><span class="line">        System.out.print(c == d);<span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">        Integer e = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> f = <span class="number">1</span>;</span><br><span class="line">        System.out.println(e == f); <span class="comment">//Integer和int进行比较时，Integer会自动拆箱为int，然后比较两个值是否相等。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为什么会出现这样的现象，我们来看以下Integer类的源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Cache to support the object identity semantics of autoboxing for values between</span></span><br><span class="line"><span class="comment"> * -128 and 127 (inclusive) as required by JLS(Java Language Specification).</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The cache is initialized on first usage.  The size of the cache</span></span><br><span class="line"><span class="comment"> * may be controlled by the &#123;<span class="doctag">@code</span> -XX:AutoBoxCacheMax=&lt;size&gt;&#125; option.</span></span><br><span class="line"><span class="comment"> * During VM initialization, java.lang.Integer.IntegerCache.high property</span></span><br><span class="line"><span class="comment"> * may be set and saved in the private system properties in the</span></span><br><span class="line"><span class="comment"> * sun.misc.VM class.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">IntegerCache</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> low = -<span class="number">128</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> high;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> Integer cache[];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">// high value may be configured by property</span></span><br><span class="line">        <span class="keyword">int</span> h = <span class="number">127</span>;</span><br><span class="line">        String integerCacheHighPropValue =</span><br><span class="line">            sun.misc.VM.getSavedProperty(<span class="string">&quot;java.lang.Integer.IntegerCache.high&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (integerCacheHighPropValue != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">int</span> i = parseInt(integerCacheHighPropValue);</span><br><span class="line">                i = Math.max(i, <span class="number">127</span>);</span><br><span class="line">                <span class="comment">// Maximum array size is Integer.MAX_VALUE</span></span><br><span class="line">                h = Math.min(i, Integer.MAX_VALUE - (-low) -<span class="number">1</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span>( NumberFormatException nfe) &#123;</span><br><span class="line">                <span class="comment">// If the property cannot be parsed into an int, ignore it.</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        high = h;</span><br><span class="line"></span><br><span class="line">        cache = <span class="keyword">new</span> Integer[(high - low) + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> j = low;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; cache.length; k++)</span><br><span class="line">            cache[k] = <span class="keyword">new</span> Integer(j++);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// range [-128, 127] must be interned (JLS7 5.1.7)</span></span><br><span class="line">        <span class="keyword">assert</span> IntegerCache.high &gt;= <span class="number">127</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">IntegerCache</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上这段代码是Integer类的一个内部类IntegerCache，它缓存了-128 ~ 127之间的整数值，缓存的最小值为low表示的值，缓存的最大值为high表示的值。<br>在创建这个范围内的整数对象时，可以在常量池中直接引用，而无需重新创建，因此 a == b 返回true。超出此范围的值，会通过new新的对象，因此 c == d返回false。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Java整数常量池&quot;&gt;&lt;a href=&quot;#Java整数常量池&quot; class=&quot;headerlink&quot; title=&quot;Java整数常量池&quot;&gt;&lt;/a&gt;Java整数常量池&lt;/h1&gt;&lt;p&gt;首先来看一段示例代码，我们会发现这样的现象 127 = 127,128 != 128</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="基础" scheme="http://example.com/categories/Java/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="整数常量池" scheme="http://example.com/categories/Java/%E5%9F%BA%E7%A1%80/%E6%95%B4%E6%95%B0%E5%B8%B8%E9%87%8F%E6%B1%A0/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
    <category term="整数常量池" scheme="http://example.com/tags/%E6%95%B4%E6%95%B0%E5%B8%B8%E9%87%8F%E6%B1%A0/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot集成Druid</title>
    <link href="http://example.com/2022/08/17/SpringBoot%E9%9B%86%E6%88%90Druid/"/>
    <id>http://example.com/2022/08/17/SpringBoot%E9%9B%86%E6%88%90Druid/</id>
    <published>2022-08-17T13:38:57.000Z</published>
    <updated>2022-08-17T14:07:45.993Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SpringBoot集成Druid"><a href="#SpringBoot集成Druid" class="headerlink" title="SpringBoot集成Druid"></a>SpringBoot集成Druid</h1><p>Java程序很大一部分要操作数据库，为了提高性能操作数据库的时候，又不得不使用数据库连接池。<br>Druid 是阿里巴巴开源平台上一个数据库连接池实现，结合了 C3P0、DBCP 等 DB 池的优点，同时加入了日志监控。<br>Druid 可以很好的监控 DB 池连接和 SQL 的执行情况，天生就是针对监控而生的 DB 连接池。<br>Druid已经在阿里巴巴部署了超过600个应用，经过一年多生产环境大规模部署的严苛考验。<br>Spring Boot 2.0 以上默认使用 Hikari 数据源，可以说 Hikari 与 Driud 都是当前 Java Web 上最优秀的数据源，我们来重点介绍 Spring Boot 如何集成 Druid 数据源，如何实现数据库监控。</p><p><a href="https://github.com/alibaba/druid/">Github地址</a></p><ul><li>项目目录<br><img src="/2022/08/17/SpringBoot%E9%9B%86%E6%88%90Druid/3.png"></li><li>添加Druid数据源依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>切换数据源并配置数据源；之前已经说过 Spring Boot 2.0 以上默认使用 com.zaxxer.hikari.HikariDataSource 数据源，但可以 通过 spring.datasource.type 指定数据源<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/test?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="comment">#SpringBoot默认是不注入这些的，需要自己绑定</span></span><br><span class="line">    <span class="comment">#druid数据源专有配置</span></span><br><span class="line">    <span class="attr">initialSize:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">minIdle:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">maxActive:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">maxWait:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">timeBetweenEvictionRunsMillis:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">minEvictableIdleTimeMillis:</span> <span class="number">300000</span></span><br><span class="line">    <span class="attr">validationQuery:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">    <span class="attr">testWhileIdle:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">testOnBorrow:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">testOnReturn:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">poolPreparedStatements:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#配置监控统计拦截的filters，stat：监控统计、log4j：日志记录、wall：防御sql注入</span></span><br><span class="line">    <span class="comment">#如果允许报错，java.lang.ClassNotFoundException: org.apache.Log4j.Properity</span></span><br><span class="line">    <span class="comment">#则导入log4j 依赖就行</span></span><br><span class="line">    <span class="attr">filters:</span> <span class="string">stat,wall</span> <span class="comment"># ,log4j</span></span><br><span class="line">    <span class="attr">maxPoolPreparedStatementPerConnectionSize:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">useGlobalDataSourceStat:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">connectionoProperties:</span> <span class="string">druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500</span></span><br></pre></td></tr></table></figure></li><li>现在需要程序员自己为 DruidDataSource 绑定全局配置文件中的参数，再添加到容器中，而不再使用 Spring Boot 的自动生成了；我们需要 自己添加 DruidDataSource 组件到容器中，并绑定属性；<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidConfig</span> </span>&#123;</span><br><span class="line">    <span class="comment">//绑定全局配置文件中的参数</span></span><br><span class="line">    <span class="meta">@ConfigurationProperties(prefix = &quot;spring.datasource&quot;)</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">druidDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>测试Druid数据源是否配置成功<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpringDataApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    DataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="comment">//查看默认的数据源</span></span><br><span class="line">        System.out.println(dataSource.getClass());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得数据库链接</span></span><br><span class="line">        Connection connection = dataSource.getConnection();</span><br><span class="line">        System.out.println(connection);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//关闭</span></span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>配置Druid数据源监控<br>Druid 数据源具有监控的功能，并提供了一个 web 界面方便用户查看，类似安装 路由器 时，人家也提供了一个默认的 web 页面。<br>所以第一步需要设置 Druid 的后台管理页面，比如 登录账号、密码 等；配置后台管理；<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 后台监控：相当于web.xml，配置ServletRegistrationBean</span></span><br><span class="line"><span class="comment">//因为SprintBoot内置了servlet容器，所以没有web.xml，替代方法ServletRegistrationBean</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ServletRegistrationBean <span class="title">statViewServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ServletRegistrationBean&lt;StatViewServlet&gt; bean = <span class="keyword">new</span> ServletRegistrationBean&lt;&gt;(<span class="keyword">new</span> StatViewServlet(), <span class="string">&quot;/druid/*&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 后台登录进行账号密码配置</span></span><br><span class="line">    HashMap&lt;String, String&gt; initParameters = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 增加配置，登录的key是固定的，loginUsername  loginPassword</span></span><br><span class="line">    initParameters.put(<span class="string">&quot;loginUsername&quot;</span>, <span class="string">&quot;admin&quot;</span>);</span><br><span class="line">    initParameters.put(<span class="string">&quot;loginPassword&quot;</span>, <span class="string">&quot;123456&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 允许谁可以访问，如果后面的参数为空代表谁都可以访问，指定参数只能指定的参数进行访问</span></span><br><span class="line">    initParameters.put(<span class="string">&quot;allow&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 禁止谁可以访问</span></span><br><span class="line">    <span class="comment">// initParameters.put(&quot;koko&quot;,&quot;192.168.43.21&quot;);</span></span><br><span class="line"></span><br><span class="line">    bean.setInitParameters(initParameters); <span class="comment">// 设置初始化参数</span></span><br><span class="line">    <span class="keyword">return</span> bean;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>配置完成后，就可以通过<a href="http://localhost:8080/druid/login.html%E8%AE%BF%E9%97%AE%E7%9B%91%E6%8E%A7%E9%A1%B5%E9%9D%A2">http://localhost:8080/druid/login.html访问监控页面</a><br><img src="/2022/08/17/SpringBoot%E9%9B%86%E6%88%90Druid/1.png"></li><li>登录成功后显示的监控页面<br><img src="/2022/08/17/SpringBoot%E9%9B%86%E6%88%90Druid/2.png"></li><li>配置 Druid web 监控 filter 过滤器<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//filter</span><br><span class="line">@Bean</span><br><span class="line">public FilterRegistrationBean webStatFileter()&#123;</span><br><span class="line">    FilterRegistrationBean bean = new FilterRegistrationBean();</span><br><span class="line"></span><br><span class="line">    bean.setFilter(new WebStatFilter());</span><br><span class="line"></span><br><span class="line">    //可以过滤那些请求呢？</span><br><span class="line"></span><br><span class="line">    Map&lt;String, String&gt; initParameters = new HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    //这些东西不进行统计</span><br><span class="line">    initParameters.put(&quot;exclusions&quot;, &quot;*.js,*.css,/druid/*&quot;);</span><br><span class="line"></span><br><span class="line">    return bean;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SpringBoot集成Druid&quot;&gt;&lt;a href=&quot;#SpringBoot集成Druid&quot; class=&quot;headerlink&quot; title=&quot;SpringBoot集成Druid&quot;&gt;&lt;/a&gt;SpringBoot集成Druid&lt;/h1&gt;&lt;p&gt;Java程序很大一部</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="框架" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/"/>
    
    <category term="SpringBoot" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/SpringBoot/"/>
    
    <category term="SpringBoot集成Druid" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/SpringBoot/SpringBoot%E9%9B%86%E6%88%90Druid/"/>
    
    
    <category term="SpringBoot" scheme="http://example.com/tags/SpringBoot/"/>
    
    <category term="SpringBoot集成Druid" scheme="http://example.com/tags/SpringBoot%E9%9B%86%E6%88%90Druid/"/>
    
    <category term="Druid" scheme="http://example.com/tags/Druid/"/>
    
    <category term="监控" scheme="http://example.com/tags/%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot | SpringBoot集成MyBatis</title>
    <link href="http://example.com/2022/08/17/SpringBoot%E9%9B%86%E6%88%90MyBatis/"/>
    <id>http://example.com/2022/08/17/SpringBoot%E9%9B%86%E6%88%90MyBatis/</id>
    <published>2022-08-17T13:14:26.000Z</published>
    <updated>2022-08-17T13:38:22.021Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SpringBoot集成MyBatis"><a href="#SpringBoot集成MyBatis" class="headerlink" title="SpringBoot集成MyBatis"></a>SpringBoot集成MyBatis</h1><ul><li>项目目录<br><img src="/2022/08/17/SpringBoot%E9%9B%86%E6%88%90MyBatis/1.png"></li><li>导入MyBatis所需要的依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--mybatis-springboot--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--lombok--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>数据库和表<br><img src="/2022/08/17/SpringBoot%E9%9B%86%E6%88%90MyBatis/2.png"></li><li>配置数据库连接信息(application.yaml)、配置mybatis<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="comment">#?serverTimezone=UTC解决时区的报错</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatis?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 整合mybatis</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.example.pojo</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:mybatis/mapper/*.xml</span></span><br></pre></td></tr></table></figure></li><li>创建实体类User.java（需要用到lombok）<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>创建Mapper接口UserMapper.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">queryUserList</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">User <span class="title">queryUserById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">addUser</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateUser</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteUser</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>创建映射文件UserMapper.xml<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.example.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--resultType=&quot;User&quot;和parameterType=&quot;User&quot;只有配置了type-aliases-package后才能起作用--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        select * from user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        insert into user (id, name, pwd) values (#&#123;id&#125;, #&#123;name&#125;, #&#123;pwd&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        update user set name=#&#123;name&#125;,pwd=#&#123;pwd&#125; where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">        delete from user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>编写UserController.java进行测试<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> com.example.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.websocket.server.PathParam;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/queryUserList&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">queryUserList</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;User&gt; userList = userMapper.queryUserList();</span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/queryUserById/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">queryUserById</span><span class="params">(<span class="meta">@PathVariable</span> Integer id)</span></span>&#123;</span><br><span class="line">        User user = userMapper.queryUserById(id);</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    @GetMapping(&quot;/addUser&quot;)  //http://localhost:8080/addUser?id=4&amp;name=wangmazi&amp;pwd=91011</span></span><br><span class="line"><span class="comment">//    public String addUser(@PathParam(&quot;id&quot;)Integer id, @PathParam(&quot;name&quot;)String name, @PathParam(&quot;pwd&quot;)String pwd)&#123;</span></span><br><span class="line"><span class="comment">//        userMapper.addUser(new User(id, name, pwd));</span></span><br><span class="line"><span class="comment">//        return &quot;ok&quot;;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/addUser/&#123;id&#125;/&#123;name&#125;/&#123;pwd&#125;&quot;)</span>  <span class="comment">//http://localhost:8080/addUser/4/wangmazi/123</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">addUser</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id, <span class="meta">@PathVariable(&quot;name&quot;)</span> String name, <span class="meta">@PathVariable(&quot;pwd&quot;)</span> String pwd)</span></span>&#123;</span><br><span class="line">        userMapper.addUser(<span class="keyword">new</span> User(id, name, pwd));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/updateUser&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">updateuser</span><span class="params">()</span></span>&#123;</span><br><span class="line">        userMapper.updateUser(<span class="keyword">new</span> User(<span class="number">5</span>, <span class="string">&quot;liuba&quot;</span>, <span class="string">&quot;325&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/deleteUser/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">deleteUser</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span></span>&#123;</span><br><span class="line">        userMapper.deleteUser(id);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SpringBoot集成MyBatis&quot;&gt;&lt;a href=&quot;#SpringBoot集成MyBatis&quot; class=&quot;headerlink&quot; title=&quot;SpringBoot集成MyBatis&quot;&gt;&lt;/a&gt;SpringBoot集成MyBatis&lt;/h1&gt;&lt;ul&gt;
</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="框架" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/"/>
    
    <category term="SpringBoot" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/SpringBoot/"/>
    
    <category term="SpringBoot集成MyBatis" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/SpringBoot/SpringBoot%E9%9B%86%E6%88%90MyBatis/"/>
    
    
    <category term="MyBatis" scheme="http://example.com/tags/MyBatis/"/>
    
    <category term="SpringBoot" scheme="http://example.com/tags/SpringBoot/"/>
    
    <category term="SpringBoot集成MyBatis" scheme="http://example.com/tags/SpringBoot%E9%9B%86%E6%88%90MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>SpringSecurity | 用户认证、授权、注销、权限控制、记住我、首页定制</title>
    <link href="http://example.com/2022/08/15/SpringSecurity%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81%E5%92%8C%E6%8E%88%E6%9D%83/"/>
    <id>http://example.com/2022/08/15/SpringSecurity%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81%E5%92%8C%E6%8E%88%E6%9D%83/</id>
    <published>2022-08-16T03:04:49.000Z</published>
    <updated>2022-08-18T02:03:01.546Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SpringSecurity用户认证、授权、注销、权限控制、记住我、首页定制"><a href="#SpringSecurity用户认证、授权、注销、权限控制、记住我、首页定制" class="headerlink" title="SpringSecurity用户认证、授权、注销、权限控制、记住我、首页定制"></a>SpringSecurity用户认证、授权、注销、权限控制、记住我、首页定制</h1><ul><li><p>实现功能：授权不同的用户角色访问不同的模块，如下图所示：<br><img src="/2022/08/15/SpringSecurity%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81%E5%92%8C%E6%8E%88%E6%9D%83/1.png"></p></li><li><p>描述</p><ul><li>设置三个不同用户角色（victory,root,guest）</li><li>victory可以访问level2和leve3的内容，root可以访问页面的所有内容，guest只可以访问level1的内容，而且没有权限的模块在该用户登录时不显示。</li><li>没有登录时，点击三个模块的内容会跳转到登录页面</li><li>记住我功能</li><li>首页定制（不使用SpringSecurity默认登录页面，使用自己写的登录页面）</li></ul></li><li><p>页面<br><img src="/2022/08/15/SpringSecurity%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81%E5%92%8C%E6%8E%88%E6%9D%83/2.png"></p></li><li><p>依赖导入</p><ul><li>导入thymeleaf依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-spring5<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf.extras<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-extras-java8time<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>导入Web依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>导入security依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>项目目录<br><img src="/2022/08/15/SpringSecurity%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81%E5%92%8C%E6%8E%88%E6%9D%83/3.png"></p></li><li><p>编写RootController映射请求（跳转页面）</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RootController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&#123;&quot;/&quot;, &quot;/index&quot;&#125;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;toLogin&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toLogin</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;views/login&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/level1/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">level1</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> <span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;views/level1/&quot;</span>+id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/level2/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">level2</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> <span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;views/level2/&quot;</span>+id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/level3/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">level3</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> <span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;views/level3/&quot;</span>+id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>编写SecurityConfig配置SpringSecurity</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line">    <span class="comment">//授权</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//首页所有人可以访问，功能页只有对应有权限的人才能访问</span></span><br><span class="line">        <span class="comment">//请求授权的规则</span></span><br><span class="line">        <span class="comment">//链式编程</span></span><br><span class="line">        http.authorizeHttpRequests()</span><br><span class="line">                .antMatchers(<span class="string">&quot;/&quot;</span>).permitAll()</span><br><span class="line">                .antMatchers(<span class="string">&quot;/level1/**&quot;</span>).hasRole(<span class="string">&quot;vip1&quot;</span>)</span><br><span class="line">                .antMatchers(<span class="string">&quot;/level2/**&quot;</span>).hasRole(<span class="string">&quot;vip2&quot;</span>)</span><br><span class="line">                .antMatchers(<span class="string">&quot;/level3/**&quot;</span>).hasRole(<span class="string">&quot;vip3&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//没有权限默认会跳到登录页面</span></span><br><span class="line">        http.formLogin();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//防止网站攻击 get不安全，可以使用post springboot默认开启csrf(注销失败可能的原因)</span></span><br><span class="line">        http.csrf().disable(); <span class="comment">//关闭csrf功能</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//注销，跳到首页</span></span><br><span class="line">        http.logout().logoutSuccessUrl(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//认证</span></span><br><span class="line">    <span class="comment">//密码编码：PasswordEncoder</span></span><br><span class="line">    <span class="comment">//在Spring Security 5.0+新增了很多加密方法</span></span><br><span class="line">    <span class="comment">//报错 500 密码没有加密</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//这些数据正常应该从数据库中读</span></span><br><span class="line">        auth.inMemoryAuthentication().passwordEncoder(<span class="keyword">new</span> BCryptPasswordEncoder())</span><br><span class="line">                .withUser(<span class="string">&quot;victory&quot;</span>).password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">&quot;123&quot;</span>)).roles(<span class="string">&quot;vip2&quot;</span>, <span class="string">&quot;vip3&quot;</span>)</span><br><span class="line">                .and()</span><br><span class="line">                .withUser(<span class="string">&quot;root&quot;</span>).password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">&quot;123&quot;</span>)).roles(<span class="string">&quot;vip1&quot;</span>, <span class="string">&quot;vip2&quot;</span>, <span class="string">&quot;vip3&quot;</span>)</span><br><span class="line">                .and()</span><br><span class="line">                .withUser(<span class="string">&quot;guest&quot;</span>).password(<span class="keyword">new</span> BCryptPasswordEncoder().encode(<span class="string">&quot;123&quot;</span>)).roles(<span class="string">&quot;vip1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>权限控制（没有权限的模块在该用户登录时不显示）<ul><li>导入依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf.extras<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-extras-springsecurity4<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>在页面中导入命名空间<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span> <span class="attr">xmlns:sec</span>=<span class="string">&quot;http://www.thymeleaf.org/thymeleaf-extras-springsecurity4&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>在页面中使用thymeleaf-security语法进行权限控制<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span> <span class="attr">xmlns:sec</span>=<span class="string">&quot;http://www.thymeleaf.org/thymeleaf-extras-springsecurity4&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, maximum-scale=1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--semantic-ui--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcss.com/semantic-ui/2.4.1/semantic.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/qinjiang/css/qinstyle.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--主容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui container&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui segment&quot;</span> <span class="attr">id</span>=<span class="string">&quot;index-header-nav&quot;</span> <span class="attr">th:fragment</span>=<span class="string">&quot;nav-menu&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui secondary menu&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>  <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/index&#125;&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--登录注销--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right menu&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--如果未登录--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;!isAuthenticated()&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/toLogin&#125;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;address card icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 登录</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!--如果登录：用户名和注销--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;isAuthenticated()&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                    用户名：<span class="tag">&lt;<span class="name">span</span> <span class="attr">sec:authentication</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--角色：&lt;span sec:authentication=&quot;principal.getUsername()&quot;&gt;&lt;/span&gt;--&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/logout&#125;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;sign-out icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 注销</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui segment&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Spring Security Study by 秦疆<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui three column stackable grid&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--根据用户的角色动态的实现--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;column&quot;</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;vip1&#x27;)&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui raised segment&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span>Level 1<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/level1/1&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-1-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/level1/2&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-1-2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/level1/3&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-1-3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;column&quot;</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;vip2&#x27;)&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui raised segment&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span>Level 2<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/level2/1&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-2-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/level2/2&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-2-2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/level2/3&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-2-3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;column&quot;</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;vip3&#x27;)&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui raised segment&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span>Level 3<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/level3/1&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-3-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/level3/2&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-3-2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/level3/3&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-3-3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/qinjiang/js/jquery-3.1.1.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/qinjiang/js/semantic.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>thymeleaf security整合可能出现的错误<ul><li>thymeleaf security不生效，可以将SpringBoot版本降低到2.0.7.RELEASE</li><li>登录后出现WhiteLabel Error Page，Html文件中关于thymeleaf-security的代码有错误</li></ul></li></ul></li><li>记住我、首页定制<ul><li>首页定制、记住我<br>在configure(HttpSecurity http)方法中添加以下代码即可定制首页<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//formLogin() 默认到登录页面（SpringSecurity自带登录页面）</span><br><span class="line">//usernameParameter(&quot;user&quot;) 与自定义登录页面用户名文本框的name属性对应</span><br><span class="line">//passwordParameter(&quot;pwd&quot;) 与自定义登录页面密码文本框的name属性对应</span><br><span class="line">http.formLogin().loginPage(&quot;/toLogin&quot;).usernameParameter(&quot;user&quot;).passwordParameter(&quot;pwd&quot;).loginProcessingUrl(&quot;/login&quot;);</span><br></pre></td></tr></table></figure>在configure(HttpSecurity http)方法中添加以下代码即可实现记住我功能<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开启记住我功能 cookie,默认保存两周</span></span><br><span class="line">http.rememberMe().rememberMeParameter(<span class="string">&quot;remember&quot;</span>);</span><br></pre></td></tr></table></figure></li><li>页面<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, maximum-scale=1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--semantic-ui--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcss.com/semantic-ui/2.4.1/semantic.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--主容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui container&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui segment&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui placeholder segment&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui column very relaxed stackable grid&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;column&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui form&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/login&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;field&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">label</span>&gt;</span>Username<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui left icon input&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Username&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;user icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;field&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">label</span>&gt;</span>Password<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui left icon input&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;lock icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;field&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;remember&quot;</span>&gt;</span>记住我</span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ui blue submit button&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui label&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">i</span>&gt;</span>注册</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">small</span>&gt;</span>blog.kuangstudy.com<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui segment&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Spring Security Study by 秦疆<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/qinjiang/js/jquery-3.1.1.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/qinjiang/js/semantic.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SpringSecurity用户认证、授权、注销、权限控制、记住我、首页定制&quot;&gt;&lt;a href=&quot;#SpringSecurity用户认证、授权、注销、权限控制、记住我、首页定制&quot; class=&quot;headerlink&quot; title=&quot;SpringSecurity用户</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="框架" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/"/>
    
    <category term="SpringSecurity" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/SpringSecurity/"/>
    
    <category term="用户认证、授权、注销、权限控制、记住我、首页定制" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/SpringSecurity/%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81%E3%80%81%E6%8E%88%E6%9D%83%E3%80%81%E6%B3%A8%E9%94%80%E3%80%81%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6%E3%80%81%E8%AE%B0%E4%BD%8F%E6%88%91%E3%80%81%E9%A6%96%E9%A1%B5%E5%AE%9A%E5%88%B6/"/>
    
    
    <category term="SpringSecurity" scheme="http://example.com/tags/SpringSecurity/"/>
    
    <category term="认证" scheme="http://example.com/tags/%E8%AE%A4%E8%AF%81/"/>
    
    <category term="授权" scheme="http://example.com/tags/%E6%8E%88%E6%9D%83/"/>
    
    <category term="权限控制" scheme="http://example.com/tags/%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/"/>
    
    <category term="记住我" scheme="http://example.com/tags/%E8%AE%B0%E4%BD%8F%E6%88%91/"/>
    
    <category term="首页定制" scheme="http://example.com/tags/%E9%A6%96%E9%A1%B5%E5%AE%9A%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot | 常用的请求映射方式注解</title>
    <link href="http://example.com/2022/08/15/springboot%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AF%B7%E6%B1%82%E6%98%A0%E5%B0%84%E6%96%B9%E5%BC%8F%E6%B3%A8%E8%A7%A3/"/>
    <id>http://example.com/2022/08/15/springboot%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AF%B7%E6%B1%82%E6%98%A0%E5%B0%84%E6%96%B9%E5%BC%8F%E6%B3%A8%E8%A7%A3/</id>
    <published>2022-08-15T14:15:57.000Z</published>
    <updated>2022-08-16T01:14:45.515Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SpringBoot常用的请求映射方式注解"><a href="#SpringBoot常用的请求映射方式注解" class="headerlink" title="SpringBoot常用的请求映射方式注解"></a>SpringBoot常用的请求映射方式注解</h1><p>我们在处理web端应用的请求时，通常会使用如下几种方式进行请求映射，我们可以通过查看源码看到它们的真实面目。</p><ul><li>@RequestMapping</li></ul><pre><code>源码对注解的注释：Annotation for mapping web requests onto methods in request-handling classes with flexible method signatures.翻译：用于将web请求映射到具有灵活方法签名的请求处理类中的方法的注释。</code></pre><ul><li>@GetMapping</li></ul><pre><code>源码对注解的注释：Annotation for mapping HTTP GET requests onto specific handler methods.Specifically, @GetMapping is a composed annotation that acts as a shortcut for @RequestMapping(method = RequestMethod.GET).翻译：用于将HTTP GET请求映射到特定的请求处理方法的注释。具体来说，@GetMapping是一个组合注解，是@RequestMapping(method = RequestMethod.GET)的缩写。</code></pre><p><img src="/2022/08/15/springboot%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AF%B7%E6%B1%82%E6%98%A0%E5%B0%84%E6%96%B9%E5%BC%8F%E6%B3%A8%E8%A7%A3/1.png"></p><ul><li>@PostMapping</li></ul><pre><code>源码对注解的注释：Annotation for mapping HTTP POST requests onto specific handler methods.Specifically, @PostMapping is a composed annotation that acts as a shortcut for @RequestMapping(method = RequestMethod.POST).翻译：用于将HTTP POST请求映射到特定的请求处理方法的注释。具体来说，@PostMapping是一个组合注解，是@RequestMapping(method = RequestMethod.POST)的缩写。</code></pre><p><img src="/2022/08/15/springboot%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AF%B7%E6%B1%82%E6%98%A0%E5%B0%84%E6%96%B9%E5%BC%8F%E6%B3%A8%E8%A7%A3/2.png"></p><ul><li>@PutMapping</li></ul><pre><code>源码对注解的注释：Annotation for mapping HTTP PUT requests onto specific handler methods.Specifically, @PutMapping is a composed annotation that acts as a shortcut for @RequestMapping(method = RequestMethod.PUT).翻译：用于将HTTP PUT请求映射到特定的请求处理方法的注释。具体来说，@PutMapping是一个组合注解，是@RequestMapping(method = RequestMethod.PUT)的缩写。</code></pre><p><img src="/2022/08/15/springboot%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AF%B7%E6%B1%82%E6%98%A0%E5%B0%84%E6%96%B9%E5%BC%8F%E6%B3%A8%E8%A7%A3/3.png">    </p><ul><li>@DeleteMapping</li></ul><pre><code>源码对注解的注释：Annotation for mapping HTTP DELETE requests onto specific handler methods.Specifically, @DeleteMapping is a composed annotation that acts as a shortcut for @RequestMapping(method = RequestMethod.DELETE).翻译：用于将HTTP DELETE请求映射到特定的请求处理方法的注释。具体来说，@DeleteMapping是一个组合注解，是@RequestMapping(method = RequestMethod.DELETE)的缩写。</code></pre><p><img src="/2022/08/15/springboot%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AF%B7%E6%B1%82%E6%98%A0%E5%B0%84%E6%96%B9%E5%BC%8F%E6%B3%A8%E8%A7%A3/4.png"></p><ul><li>@PatchMapping</li></ul><pre><code>源码对注解的注释：Annotation for mapping HTTP PATCH requests onto specific handler methods.Specifically, @PatchMapping is a composed annotation that acts as a shortcut for @RequestMapping(method = RequestMethod.PATCH).翻译：用于将HTTP PATCH请求映射到特定的请求处理方法的注释。具体来说，@PatchMapping是一个组合注解，是@RequestMapping(method = RequestMethod.PATCH)的缩写。</code></pre><p><img src="/2022/08/15/springboot%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AF%B7%E6%B1%82%E6%98%A0%E5%B0%84%E6%96%B9%E5%BC%8F%E6%B3%A8%E8%A7%A3/5.png"></p><p>从源码注释和注解接口实现源代码可以得出以下结论：</p><ul><li>可以使用@RequestMapping注解并指定method属性对所有HTTP进行映射。</li><li>@XxxMapping注解是@RequestMapping(method=”XXX”)的缩写<ul><li>@GetMapping是@RequestMapping(method = RequestMethod.GET)的缩写</li><li>@PostMapping是@RequestMapping(method = RequestMethod.POST)的缩写</li><li>@PutMapping是@RequestMapping(method = RequestMethod.PUT)的缩写</li><li>@DeleteMapping是@RequestMapping(method = RequestMethod.DELETE)的缩写</li><li>@PatchMapping是@RequestMapping(method = RequestMethod.PATCH)的缩写</li></ul></li><li>推荐用法：在对特定的请求进行映射时，采用对应的注解。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SpringBoot常用的请求映射方式注解&quot;&gt;&lt;a href=&quot;#SpringBoot常用的请求映射方式注解&quot; class=&quot;headerlink&quot; title=&quot;SpringBoot常用的请求映射方式注解&quot;&gt;&lt;/a&gt;SpringBoot常用的请求映射方式注解&lt;/</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    <category term="框架" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/"/>
    
    <category term="SpringBoot" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/SpringBoot/"/>
    
    <category term="常用的请求映射方式注解" scheme="http://example.com/categories/Java/%E6%A1%86%E6%9E%B6/SpringBoot/%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AF%B7%E6%B1%82%E6%98%A0%E5%B0%84%E6%96%B9%E5%BC%8F%E6%B3%A8%E8%A7%A3/"/>
    
    
    <category term="SpringBoot" scheme="http://example.com/tags/SpringBoot/"/>
    
    <category term="请求映射" scheme="http://example.com/tags/%E8%AF%B7%E6%B1%82%E6%98%A0%E5%B0%84/"/>
    
  </entry>
  
  <entry>
    <title>leetcode | 414.第三大的数</title>
    <link href="http://example.com/2022/08/13/%E7%AC%AC%E4%B8%89%E5%A4%A7%E7%9A%84%E6%95%B0/"/>
    <id>http://example.com/2022/08/13/%E7%AC%AC%E4%B8%89%E5%A4%A7%E7%9A%84%E6%95%B0/</id>
    <published>2022-08-13T14:04:59.000Z</published>
    <updated>2022-08-16T01:17:50.813Z</updated>
    
    <content type="html"><![CDATA[<h1 id="414-第三大的数"><a href="#414-第三大的数" class="headerlink" title="414.第三大的数"></a>414.第三大的数</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给你一个非空数组，返回此数组中 第三大的数 。如果不存在，则返回数组中最大的数。</p><ul><li><p>示例 1：<br>输入：[3, 2, 1]<br>输出：1<br>解释：第三大的数是 1 。</p></li><li><p>示例 2：<br>输入：[1, 2]<br>输出：2<br>解释：第三大的数不存在, 所以返回最大的数 2 。</p></li><li><p>示例 3：<br>输入：[2, 2, 3, 1]<br>输出：1<br>解释：注意，要求返回第三大的数，是指在所有不同数字中排第三大的数。<br>此例中存在两个值为 2 的数，它们都排第二。在所有不同数字中排第三大的数为 1 。</p></li></ul><p><a href="https://leetcode.cn/problems/third-maximum-number">题目链接</a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>排序<br>将nums数组排序后，从数组末尾返回第三大的数。</li><li>有序集合<br>遍历数组，同时用一个有序集合来维护数组中前三大的数。具体做法是每遍历一个数，就将其插入有序集合，若有序集合的大小超过 333，就删除集合中的最小元素。这样可以保证有序集合的大小至多为 333，且遍历结束后，若有序集合的大小为 333，其最小值就是数组中第三大的数；若有序集合的大小不足 333，那么就返回有序集合中的最大值。</li><li>一次遍历<br>遍历数组，并用三个变量a、b、c来维护数组中的最大值、次大值和第三大值，在遍历过程中更新这三个值即可。<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">thirdMax</span>(<span class="params">self, nums</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">排序（自己实现快速排序）</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quick_sort</span>(<span class="params">arr, low, high</span>):</span></span><br><span class="line"><span class="keyword">if</span> low &lt; high:</span><br><span class="line">pivot = partition(arr, low, high)</span><br><span class="line">quick_sort(arr, low, pivot - <span class="number">1</span>)</span><br><span class="line">quick_sort(arr, pivot + <span class="number">1</span>, high)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">partition</span>(<span class="params">arr, low, high</span>):</span></span><br><span class="line">pivot_key = arr[low]</span><br><span class="line"><span class="keyword">while</span> low &lt; high:</span><br><span class="line"><span class="keyword">while</span> low &lt; high <span class="keyword">and</span> arr[high] &gt;= pivot_key:</span><br><span class="line">high -= <span class="number">1</span></span><br><span class="line">arr[low], arr[high] = arr[high], arr[low]</span><br><span class="line"><span class="keyword">while</span> low &lt; high <span class="keyword">and</span> arr[low] &lt;= pivot_key:</span><br><span class="line">low += <span class="number">1</span></span><br><span class="line">arr[low], arr[high] = arr[high], arr[low]</span><br><span class="line"><span class="keyword">return</span> low</span><br><span class="line"></span><br><span class="line">quick_sort(nums, <span class="number">0</span>, <span class="built_in">len</span>(nums) - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">diff = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums) - <span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line"><span class="keyword">if</span> nums[i] != nums[i - <span class="number">1</span>]:</span><br><span class="line">diff += <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> diff == <span class="number">2</span>:</span><br><span class="line"><span class="keyword">return</span> nums[i-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> nums[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">thirdMax1</span>(<span class="params">self, nums</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;排序（直接调用排序方法）&quot;&quot;&quot;</span></span><br><span class="line">nums.sort(reverse=<span class="literal">True</span>)</span><br><span class="line">diff = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(nums)):</span><br><span class="line"><span class="keyword">if</span> nums[i] != nums[i-<span class="number">1</span>]:</span><br><span class="line">diff += <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> diff == <span class="number">3</span>:</span><br><span class="line"><span class="keyword">return</span> nums[i]</span><br><span class="line"><span class="keyword">return</span> nums[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">thirdMax2</span>(<span class="params">self, nums</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;有序集合&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> sortedcontainers <span class="keyword">import</span> SortedList</span><br><span class="line">s = SortedList()</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> nums:</span><br><span class="line"><span class="keyword">if</span> num <span class="keyword">not</span> <span class="keyword">in</span> s:</span><br><span class="line">s.add(num)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(s) &gt; <span class="number">3</span>:</span><br><span class="line">s.pop(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> s[<span class="number">0</span>] <span class="keyword">if</span> <span class="built_in">len</span>(s) == <span class="number">3</span> <span class="keyword">else</span> s[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">thirdMax3</span>(<span class="params">self, nums</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;一次遍历（用三个变量a,b,c来维护数组中的最大值、次大值和第三大值）&quot;&quot;&quot;</span></span><br><span class="line">a, b, c = <span class="built_in">float</span>(<span class="string">&#x27;-inf&#x27;</span>), <span class="built_in">float</span>(<span class="string">&#x27;-inf&#x27;</span>), <span class="built_in">float</span>(<span class="string">&#x27;-inf&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> nums:</span><br><span class="line"><span class="keyword">if</span> num &gt; a:</span><br><span class="line">a, b, c = num, a, b</span><br><span class="line"><span class="keyword">elif</span> a &gt; num &gt; b:</span><br><span class="line">b, c = num, b</span><br><span class="line"><span class="keyword">elif</span> b &gt; num &gt; c:</span><br><span class="line">c = num</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> a <span class="keyword">if</span> c == <span class="built_in">float</span>(<span class="string">&#x27;-inf&#x27;</span>) <span class="keyword">else</span> c</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">slt = Solution()</span><br><span class="line"><span class="comment"># third_max_num = slt.thirdMax([2, 2, 3, 1])</span></span><br><span class="line"><span class="comment"># third_max_num = slt.thirdMax1([2, 2, 3, 1])</span></span><br><span class="line"><span class="comment"># third_max_num = slt.thirdMax2([2, 2, 3, 1])</span></span><br><span class="line">third_max_num = slt.thirdMax3([<span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(third_max_num)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;414-第三大的数&quot;&gt;&lt;a href=&quot;#414-第三大的数&quot; class=&quot;headerlink&quot; title=&quot;414.第三大的数&quot;&gt;&lt;/a&gt;414.第三大的数&lt;/h1&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="算法刷题" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/"/>
    
    <category term="leetcode" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/"/>
    
    <category term="414.第三大的数" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/414-%E7%AC%AC%E4%B8%89%E5%A4%A7%E7%9A%84%E6%95%B0/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/tags/%E6%95%B0%E7%BB%84/"/>
    
    <category term="排序" scheme="http://example.com/tags/%E6%8E%92%E5%BA%8F/"/>
    
    <category term="有序集合" scheme="http://example.com/tags/%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88/"/>
    
    <category term="SortedList" scheme="http://example.com/tags/SortedList/"/>
    
    <category term="sortedcontainers" scheme="http://example.com/tags/sortedcontainers/"/>
    
  </entry>
  
  <entry>
    <title>json | python处理json数据</title>
    <link href="http://example.com/2022/08/13/python%E5%A4%84%E7%90%86json%E6%95%B0%E6%8D%AE/"/>
    <id>http://example.com/2022/08/13/python%E5%A4%84%E7%90%86json%E6%95%B0%E6%8D%AE/</id>
    <published>2022-08-13T12:37:49.000Z</published>
    <updated>2022-08-13T12:55:17.337Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python处理json数据"><a href="#python处理json数据" class="headerlink" title="python处理json数据"></a>python处理json数据</h1><p>找出以下json数据中children键对应列表为空的data键的id值。<br>例如以下示例children键对应的列表为空时，返回data键的id值：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;data&quot;</span>: &#123;<span class="attr">&quot;id&quot;</span>: <span class="number">1234</span>&#125;,</span><br><span class="line">    <span class="attr">&quot;children&quot;</span>: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>方法：<br>分析数据可知，该文本数组为字典类型的嵌套，故可以使用递归的方法解决。<br>首先全部输入文本就是一个大字典，因此递归函数输入为一个大字典，然后判断字典中children键对应的列表是否为空，<br>如果为空则将children键对应的data键的id加入结果列表，如果children键对应的列表（列表中的元素仍为字典）不为空，<br>则遍历列表中的字典，继续使用该递归函数进行处理，依次类推。</li><li>重要的一步<br>在处理json数据中极为重要的一步是将一个字符串表示的字典转换为python中的字典。<br>我们可以使用python中的内置模块json中的loads方法将一个字符串表示的字典转换为json数据，既python中的字典。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">json_data = json.loads(string_dict)</span><br></pre></td></tr></table></figure><span id="more"></span></li><li>输入：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">    <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;编程0615版本&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;0o246ba3ptq3cl2nk4fvaq2fcr&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">        <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;“录制视频作品”能力升级&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;46bjepg30ird0cion555r1ed13&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;作品H5页面&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;6i25gn6ps4spre3g4q6l02k0vg&quot;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;项目分享&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;b439a445-1e0e-45f1-80ef-9708e8aa5696&quot;</span></span><br><span class="line">              &#125;,</span><br><span class="line">              <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                  <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                    <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;不变&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;2d1d9bc0-deaf-403c-9cbb-fc018f12bd4d&quot;</span></span><br><span class="line">                  &#125;,</span><br><span class="line">                  <span class="attr">&quot;children&quot;</span>: []</span><br><span class="line">                &#125;</span><br><span class="line">              ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;视频分享&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;6f90564f-2102-4a00-95e8-c16a0ce69569&quot;</span></span><br><span class="line">              &#125;,</span><br><span class="line">              <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                  <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                    <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                    <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;页面下方增加试试运行程序按钮&quot;</span>,</span><br><span class="line">                    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;6e909a32-80cb-4a5d-8c11-b82ca39ef651&quot;</span></span><br><span class="line">                  &#125;,</span><br><span class="line">                  <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                      <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                        <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                        <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;点击按钮跳转项目分享页面&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;a30a997b-5531-4f7b-8fc8-dd7fd0b1446e&quot;</span></span><br><span class="line">                      &#125;,</span><br><span class="line">                      <span class="attr">&quot;children&quot;</span>: []</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                      <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                        <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                        <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;题型验证&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;02a44ad1-95d1-4901-9345-10f4f8347b97&quot;</span></span><br><span class="line">                      &#125;,</span><br><span class="line">                      <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">                        &#123;</span><br><span class="line">                          <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;C++题目&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;40a0b6f1-c7d2-4b18-ae0b-aef1237e51db&quot;</span></span><br><span class="line">                          &#125;,</span><br><span class="line">                          <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">                            &#123;</span><br><span class="line">                              <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                                <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                                <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;有&quot;</span>,</span><br><span class="line">                                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;9bffb81a-a4f6-441f-a6b0-6f13b86e7ccc&quot;</span></span><br><span class="line">                              &#125;,</span><br><span class="line">                              <span class="attr">&quot;children&quot;</span>: []</span><br><span class="line">                            &#125;</span><br><span class="line">                          ]</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                          <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;python普通&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;e88f0fd1-120c-4867-bd89-d9d066d36ec9&quot;</span></span><br><span class="line">                          &#125;,</span><br><span class="line">                          <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">                            &#123;</span><br><span class="line">                              <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                                <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                                <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;有&quot;</span>,</span><br><span class="line">                                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;57795e2a-19bc-4992-9c38-81e8333f7ede&quot;</span></span><br><span class="line">                              &#125;,</span><br><span class="line">                              <span class="attr">&quot;children&quot;</span>: []</span><br><span class="line">                            &#125;</span><br><span class="line">                          ]</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                          <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;python超级&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;0905ce99-0c95-4c26-ba4e-46f1d3a8eeb6&quot;</span></span><br><span class="line">                          &#125;,</span><br><span class="line">                          <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">                            &#123;</span><br><span class="line">                              <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                                <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                                <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;没有&quot;</span>,</span><br><span class="line">                                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;b5b60820-5ace-4e23-9acc-4be2e9a0c2b8&quot;</span></span><br><span class="line">                              &#125;,</span><br><span class="line">                              <span class="attr">&quot;children&quot;</span>: []</span><br><span class="line">                            &#125;</span><br><span class="line">                          ]</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                          <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;前端&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;7fbbb053-0237-4e7e-8fac-868819efb651&quot;</span></span><br><span class="line">                          &#125;,</span><br><span class="line">                          <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">                            &#123;</span><br><span class="line">                              <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                                <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                                <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;没有&quot;</span>,</span><br><span class="line">                                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;a2c9b1e0-11a8-4847-965d-169823e979f4&quot;</span></span><br><span class="line">                              &#125;,</span><br><span class="line">                              <span class="attr">&quot;children&quot;</span>: []</span><br><span class="line">                            &#125;</span><br><span class="line">                          ]</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                          <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;Scratch题&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;0fdd6097-740f-4ea3-a591-27bdf8295d1c&quot;</span></span><br><span class="line">                          &#125;,</span><br><span class="line">                          <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">                            &#123;</span><br><span class="line">                              <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                                <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                                <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;有&quot;</span>,</span><br><span class="line">                                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;0a2df200-f11a-49da-9f3c-d3f093d78b84&quot;</span></span><br><span class="line">                              &#125;,</span><br><span class="line">                              <span class="attr">&quot;children&quot;</span>: []</span><br><span class="line">                            &#125;</span><br><span class="line">                          ]</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                          <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;Scratch简化题&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;01b03c7a-9a4c-4b74-aa6e-d4985010ffcd&quot;</span></span><br><span class="line">                          &#125;,</span><br><span class="line">                          <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">                            &#123;</span><br><span class="line">                              <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                                <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                                <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;有&quot;</span>,</span><br><span class="line">                                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;081ad0cb-5df8-4bea-ad9e-a787c0c4f90f&quot;</span></span><br><span class="line">                              &#125;,</span><br><span class="line">                              <span class="attr">&quot;children&quot;</span>: []</span><br><span class="line">                            &#125;</span><br><span class="line">                          ]</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                          <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;CodeMonkey题&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;fee1debf-75b5-40e1-b3ae-0c4657d2dada&quot;</span></span><br><span class="line">                          &#125;,</span><br><span class="line">                          <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">                            &#123;</span><br><span class="line">                              <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                                <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                                <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;没有&quot;</span>,</span><br><span class="line">                                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;c957f9cc-d547-4f84-8e01-1b5e51f433c1&quot;</span></span><br><span class="line">                              &#125;,</span><br><span class="line">                              <span class="attr">&quot;children&quot;</span>: []</span><br><span class="line">                            &#125;</span><br><span class="line">                          ]</span><br><span class="line">                        &#125;</span><br><span class="line">                      ]</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                      <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                        <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                        <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;位置验证&quot;</span>,</span><br><span class="line">                        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;d801a744-7680-456d-a5c7-43a06a05662a&quot;</span></span><br><span class="line">                      &#125;,</span><br><span class="line">                      <span class="attr">&quot;children&quot;</span>: [</span><br><span class="line">                        &#123;</span><br><span class="line">                          <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;非在线课堂端&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;8174ef9d-b9c2-4e83-ba08-02bda754d8eb&quot;</span></span><br><span class="line">                          &#125;,</span><br><span class="line">                          <span class="attr">&quot;children&quot;</span>: []</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                          <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">                            <span class="attr">&quot;created&quot;</span>: <span class="number">1655369372565</span>,</span><br><span class="line">                            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;社区&quot;</span>,</span><br><span class="line">                            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;460baee8-8c50-4fd9-a108-6f12dc375b5d&quot;</span></span><br><span class="line">                          &#125;,</span><br><span class="line">                          <span class="attr">&quot;children&quot;</span>: []</span><br><span class="line">                        &#125;</span><br><span class="line">                      ]</span><br><span class="line">                    &#125;</span><br><span class="line">                  ]</span><br><span class="line">                &#125;</span><br><span class="line">              ]</span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>代码<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">input_dict = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">input_dict += line</span><br><span class="line"><span class="keyword">if</span> line[<span class="number">0</span>] == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(input_dict)</span><br><span class="line"></span><br><span class="line">json_data = json.loads(input_dict)</span><br><span class="line"></span><br><span class="line">result = []</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">recursion</span>(<span class="params">json_data</span>):</span></span><br><span class="line">curr_data = json_data[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line">curr_children = json_data[<span class="string">&#x27;children&#x27;</span>]</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(curr_children) &gt; <span class="number">0</span>:</span><br><span class="line"><span class="keyword">for</span> next_level_children <span class="keyword">in</span> curr_children:</span><br><span class="line">recursion(next_level_children)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">result.append(curr_data[<span class="string">&#x27;id&#x27;</span>])</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">recursion(json_data)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure></li><li>输出<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">&#x27;2d1d9bc0-deaf-403c-9cbb-fc018f12bd4d&#x27;</span>, <span class="string">&#x27;a30a997b-5531-4f7b-8fc8-dd7fd0b1446e&#x27;</span>, <span class="string">&#x27;9bffb81a-a4f6-441f-a6b0-6f13b86e7ccc&#x27;</span>, <span class="string">&#x27;57795e2a-19bc-4992-9c38-81e8333f7ede&#x27;</span>, <span class="string">&#x27;b5b60820-5ace-4e23-9acc-4be2e9a0c2b8&#x27;</span>, <span class="string">&#x27;a2c9b1e0-11a8-4847-965d-169823e979f4&#x27;</span>, <span class="string">&#x27;0a2df200-f11a-49da-9f3c-d3f093d78b84&#x27;</span>, <span class="string">&#x27;081ad0cb-5df8-4bea-ad9e-a787c0c4f90f&#x27;</span>, <span class="string">&#x27;c957f9cc-d547-4f84-8e01-1b5e51f433c1&#x27;</span>, <span class="string">&#x27;8174ef9d-b9c2-4e83-ba08-02bda754d8eb&#x27;</span>, <span class="string">&#x27;460baee8-8c50-4fd9-a108-6f12dc375b5d&#x27;</span>]</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;python处理json数据&quot;&gt;&lt;a href=&quot;#python处理json数据&quot; class=&quot;headerlink&quot; title=&quot;python处理json数据&quot;&gt;&lt;/a&gt;python处理json数据&lt;/h1&gt;&lt;p&gt;找出以下json数据中children键对应列表为空的data键的id值。&lt;br&gt;例如以下示例children键对应的列表为空时，返回data键的id值：&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&amp;quot;data&amp;quot;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;attr&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1234&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&amp;quot;children&amp;quot;&lt;/span&gt;: []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;方法：&lt;br&gt;分析数据可知，该文本数组为字典类型的嵌套，故可以使用递归的方法解决。&lt;br&gt;首先全部输入文本就是一个大字典，因此递归函数输入为一个大字典，然后判断字典中children键对应的列表是否为空，&lt;br&gt;如果为空则将children键对应的data键的id加入结果列表，如果children键对应的列表（列表中的元素仍为字典）不为空，&lt;br&gt;则遍历列表中的字典，继续使用该递归函数进行处理，依次类推。&lt;/li&gt;
&lt;li&gt;重要的一步&lt;br&gt;在处理json数据中极为重要的一步是将一个字符串表示的字典转换为python中的字典。&lt;br&gt;我们可以使用python中的内置模块json中的loads方法将一个字符串表示的字典转换为json数据，既python中的字典。&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;json_data = json.loads(string_dict)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    <category term="内置模块" scheme="http://example.com/categories/python/%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/"/>
    
    <category term="json" scheme="http://example.com/categories/python/%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/json/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
    <category term="json" scheme="http://example.com/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>leetcode | 349.两个数组的交集</title>
    <link href="http://example.com/2022/08/11/%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86/"/>
    <id>http://example.com/2022/08/11/%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86/</id>
    <published>2022-08-12T03:57:01.000Z</published>
    <updated>2022-08-12T04:03:52.089Z</updated>
    
    <content type="html"><![CDATA[<h1 id="349-两个数组的交集"><a href="#349-两个数组的交集" class="headerlink" title="349.两个数组的交集"></a>349.两个数组的交集</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定两个数组 nums1 和 nums2 ，返回 它们的交集 。输出结果中的每个元素一定是 唯一 的。我们可以 不考虑输出结果的顺序 。</p><p>示例 1：<br>输入：nums1 = [1,2,2,1], nums2 = [2,2]<br>输出：[2]</p><p>示例 2：<br>输入：nums1 = [4,9,5], nums2 = [9,4,9,8,4]<br>输出：[9,4]<br>解释：[4,9] 也是可通过的</p><p><a href="https://leetcode.cn/problems/intersection-of-two-arrays">题目链接</a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>集合求交集</li><li>排序+双指针<br>对nums1、nums2进行排序，设置两个指针index1、index2分别指向两个数组的头部，并按以下步骤进行：<br>（1）如果元素相等则加入结果列表<br>（2）如果index1指向的元素小于index2指向的元素，则index1指针后移，否则index2指针后移<br>不断执行以上两个步骤，最后结果列表中的元素即为两个数字的交集。<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">集合操作</span></span><br><span class="line"><span class="string">1.求交集</span></span><br><span class="line"><span class="string">set1.intersection(set2)</span></span><br><span class="line"><span class="string">2.求差集</span></span><br><span class="line"><span class="string">set1.difference(set2)</span></span><br><span class="line"><span class="string">3.求并集</span></span><br><span class="line"><span class="string">set1.union(set2)</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">intersection</span>(<span class="params">self, nums1, nums2</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">集合求交集</span></span><br><span class="line"><span class="string">        :type nums1: List[int]</span></span><br><span class="line"><span class="string">        :type nums2: List[int]</span></span><br><span class="line"><span class="string">        :rtype: List[int]</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">list</span>(<span class="built_in">set</span>(nums1).intersection(<span class="built_in">set</span>(nums2)))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">intersection1</span>(<span class="params">self, nums1, nums2</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;排序+双指针&quot;&quot;&quot;</span></span><br><span class="line">nums1.sort()</span><br><span class="line">nums2.sort()</span><br><span class="line"></span><br><span class="line">index1 = <span class="number">0</span></span><br><span class="line">index2 = <span class="number">0</span></span><br><span class="line">intersection = <span class="built_in">list</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> index1 &lt; <span class="built_in">len</span>(nums1) <span class="keyword">and</span> index2 &lt; <span class="built_in">len</span>(nums2):</span><br><span class="line"><span class="keyword">if</span> nums1[index1] == nums2[index2]:</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> intersection <span class="keyword">or</span> nums1[index1] != intersection[-<span class="number">1</span>]:</span><br><span class="line">intersection.append(nums1[index1])</span><br><span class="line"></span><br><span class="line">index1 += <span class="number">1</span></span><br><span class="line">index2 += <span class="number">1</span></span><br><span class="line"><span class="keyword">elif</span> nums1[index1] &lt; nums2[index2]:</span><br><span class="line">index1 += <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">index2 += <span class="number">1</span></span><br><span class="line"><span class="keyword">return</span> intersection</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">slt = Solution()</span><br><span class="line">nums1 = [<span class="number">2</span>, <span class="number">1</span>]</span><br><span class="line">nums2 = [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line"><span class="comment"># inter = slt.intersection(nums1, nums2)</span></span><br><span class="line">inter = slt.intersection(nums1, nums2)</span><br><span class="line"><span class="built_in">print</span>(inter)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;349-两个数组的交集&quot;&gt;&lt;a href=&quot;#349-两个数组的交集&quot; class=&quot;headerlink&quot; title=&quot;349.两个数组的交集&quot;&gt;&lt;/a&gt;349.两个数组的交集&lt;/h1&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;</summary>
      
    
    
    
    <category term="算法刷题" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/"/>
    
    <category term="leetcode" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/"/>
    
    <category term="349.两个数组的交集" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/leetcode/%E6%95%B0%E7%BB%84/349-%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="leetcode" scheme="http://example.com/tags/leetcode/"/>
    
    <category term="数组" scheme="http://example.com/tags/%E6%95%B0%E7%BB%84/"/>
    
    <category term="集合" scheme="http://example.com/tags/%E9%9B%86%E5%90%88/"/>
    
    <category term="交集" scheme="http://example.com/tags/%E4%BA%A4%E9%9B%86/"/>
    
    <category term="双指针" scheme="http://example.com/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
    <category term="排序" scheme="http://example.com/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
</feed>
